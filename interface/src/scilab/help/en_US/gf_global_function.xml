<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gf_global_function" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>gf_global_function</refname>
    <refpurpose>  Global function object is represented by three functions:

   * The function <literal>val</literal>.
   * The function gradient <literal>grad</literal>.
   * The function Hessian <literal>hess</literal>.

  this type of function is used as local and global enrichment function. The
  global function Hessian is an optional parameter (only for fourth order
  derivative problems). </refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>GF = gf_global_function('cutoff', int fn, scalar r, scalar r1, scalar r0)</synopsis>
    <synopsis>GF = gf_global_function('crack', int fn)</synopsis>
    <synopsis>GF = gf_global_function('parser', string val[, string grad[, string hess]])</synopsis>
    <synopsis>GF = gf_global_function('product', global_function F, global_function G)</synopsis>
    <synopsis>GF = gf_global_function('add', global_function gf1, global_function gf2)</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>
    <para>General constructor for global_function objects.</para>

    <para>  Global function object is represented by three functions:

   * The function <literal>val</literal>.
   * The function gradient <literal>grad</literal>.
   * The function Hessian <literal>hess</literal>.

  this type of function is used as local and global enrichment function. The
  global function Hessian is an optional parameter (only for fourth order
  derivative problems). </para>
  </refsection>

  <refsection>
    <title>Command list</title>

    <itemizedlist>
    <listitem>
    <para><literal>GF = gf_global_function('cutoff', int fn, scalar r, scalar r1, scalar r0)</literal></para>

    <para>         Create a cutoff global function.
    </para>
    </listitem>

    <listitem>
    <para><literal>GF = gf_global_function('crack', int fn)</literal></para>

    <para>         Create a near-tip asymptotic global function for modelling cracks.
    </para>
    </listitem>

    <listitem>
    <para><literal>GF = gf_global_function('parser', string val[, string grad[, string hess]])</literal></para>

    <para>         Create a global function from strings <literal>val</literal>, <literal>grad</literal> and <literal>hess</literal>.
      This function could be improved by using the derivation of the generic
      assembly language ... to be done. 
    </para>
    </listitem>

    <listitem>
    <para><literal>GF = gf_global_function('product', global_function F, global_function G)</literal></para>

    <para>         Create a product of two global functions.
    </para>
    </listitem>

    <listitem>
    <para><literal>GF = gf_global_function('add', global_function gf1, global_function gf2)</literal></para>

    <para>         Create a add of two global functions.
    </para>
    </listitem>

    </itemizedlist>
  </refsection>

  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member><link linkend="getfem_types">getfem types</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>
    <para>Y. Collette</para>
  </refsection>

</refentry>
