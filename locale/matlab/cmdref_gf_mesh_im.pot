# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/matlab/cmdref_gf_mesh_im.rst:8
# 90964590f59c4ac38a51f4ce5b6570e9
msgid "gf_mesh_im"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:10
# e9764c3864b346cda5ed031254476bc6
msgid "**Synopsis**"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:20
# 8b103c1b25804c528079071d42873c28
msgid "**Description :**"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:23
# 7a10728d5b2f4d71a3798820843c9340
msgid "General constructor for mesh_im objects."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:25
# 037c1b87b30e4191adb080bc23db4e02
msgid "This object represents an integration method defined on a whole mesh (an potentialy on its boundaries)."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:29
# 7d678c70d6a945f6ab3dd7da9ca85ed9
msgid "**Command list :**"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:33
# 0487f335b0d0446199f2d56b1144b568
msgid "``MIM = gf_mesh_im('load', string fname[, mesh m])``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:35
# 25b194cd1e8b452b8b662d4ff920a57d
msgid "Load a mesh_im from a file."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:37
# 0d40a9ba8b8c4eb19d2f1349c0b91020
msgid "If the mesh `m` is not supplied (this kind of file does not store the mesh), then it is read from the file and its descriptor is returned as the second output argument."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:42
# feb504c124eb43d6887da9f3afd3cad7
msgid "``MIM = gf_mesh_im('from string', string s[, mesh m])``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:44
# 6947f3a4b34140d28dc9f773f7405dcb
msgid "Create a mesh_im object from its string description."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:46
# eddaa3e18a704a6c8aa9ec74c0b61fd6
msgid "See also ``gf_mesh_im_get(mesh_im MI, 'char')``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:49
# ed86470f87f24855a23e8429f6fdc323
msgid "``MIM = gf_mesh_im('clone', mesh_im mim)``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:51
# a48448aa610b429b894c73bf9bfc1caf
msgid "Create a copy of a mesh_im."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:54
# 010a1335d6ee477abf68b0ef0df0b70c
msgid "``MIM = gf_mesh_im('levelset', mesh_levelset mls, string where, integ im[, integ im_tip[, integ im_set]])``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:56
# 537a3dd453994ea3906ed6a7481eaaf9
msgid "Build an integration method conformal to a partition defined implicitely by a levelset."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:59
# 8bb960e59b4642aeaaf5c0bd6977b755
msgid "The `where` argument define the domain of integration with respect to the levelset, it has to be chosen among 'ALL', 'INSIDE', 'OUTSIDE' and 'BOUNDARY'."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:63
# ab81113bb5474605ba6b10eca8fdef5e
msgid "it can be completed by a string defining the boolean operation to define the integration domain when there is more than one levelset."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:66
# f4f58e6956c8484c8471f787e9b453dc
msgid "the syntax is very simple, for example if there are 3 different levelset,"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:69
# bfb0674a0bb44317b78ba5c02e7f8101
msgid "\"a*b*c\" is the intersection of the domains defined by each levelset (this is the default behaviour if this function is not called)."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:73
# 20e240f235084a31b5115c4ea9adbefe
msgid "\"a+b+c\" is the union of their domains."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:75
# be9c22fee3b843d58168ad271d45b652
msgid "\"c-(a+b)\" is the domain of the third levelset minus the union of the domains of the two others."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:78
# b6602dc8b2564e8195d55f0f5626f0a9
msgid "\"!a\" is the complementary of the domain of a (i.e. it is the domain where a(x)>0)"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:81
# cbdad4b716ad4dbbb631c3e807f4b7e1
msgid "The first levelset is always referred to with \"a\", the second with \"b\", and so on."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:84
# 15d58dd5adc446d6821866fc50dae11b
msgid "for intance INSIDE(a*b*c)"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:86
# 7376e10c5cee476bbad5835cfaaa6c81
msgid "CAUTION: this integration method will be defined only on the element cut by the level-set. For the 'ALL', 'INSIDE' and 'OUTSIDE' options it is mandatory to use the method ``gf_mesh_im_set(mesh_im MI, 'integ')`` to define the integration method on the remaining elements."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:93
# eb3260d313e549038f549d9596e7c5db
msgid "``MIM = gf_mesh_im(mesh m, [{integ im|int im_degree}])``"
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:95
# 1c170cce19c24ccc833be16a577b8185
msgid "Build a new mesh_im object."
msgstr ""

#: ../source/matlab/cmdref_gf_mesh_im.rst:97
# f3f984b933e74f9a890694d4c6298671
msgid "For convenience, optional arguments (`im` or `im_degree`) can be provided, in that case a call to ``gf_mesh_im_get(mesh_im MI, 'integ')`` is issued with these arguments."
msgstr ""

