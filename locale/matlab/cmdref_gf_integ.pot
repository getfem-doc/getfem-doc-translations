# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/matlab/cmdref_gf_integ.rst:8
# f621ffa6dc0e4a8ea26da44b3df34444
msgid "gf_integ"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:10
# 63234da4b6c245d997f35ca61ae4c7c2
msgid "**Synopsis**"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:16
# 85c860ea8cf44a69a6d360bafa4c3783
msgid "**Description :**"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:19
# d7714b6d15aa4466b75e7dd5f4555abf
msgid "General constructor for integ objects."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:21
# 7d010e49009340308c2270e9fe4de750
msgid "General object for obtaining handles to various integrations methods on convexes (used when the elementary matrices are built)."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:25
# 2dfc39386a534b7c884826e393c4c70f
msgid "**Command list :**"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:29
# f29dad4e83ff4f458b1c0b61881eaa20
msgid "``I = gf_integ(string method)``"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:31
# 632c9038d0fa40fd84bed741e687212a
msgid "Here is a list of some integration methods defined in getfem++ (see the description of finite element and integration methods for a complete reference):"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:35
# 47d2a833aa9f4756945b9a7eea7ebd19
msgid "IM_EXACT_SIMPLEX(n) : Exact integration on simplices (works only with linear geometric transformations and PK fem's)."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:38
# ab85b06caf4e42f49f4f3ecb3571dbf2
msgid "IM_PRODUCT(A,B) : Product of two integration methods."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:40
# 207933d47e1d4953a0530089ccc8a92b
msgid "IM_EXACT_PARALLELEPIPED(n) : Exact integration on parallelepipeds."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:42
# 3340580cdff04491981a158995222762
msgid "IM_EXACT_PRISM(n) : Exact integration on prisms."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:44
# c817c7689d79477db5679ca0ea794a2c
msgid "IM_GAUSS1D(k) : Gauss method on the segment, order `k=1,3,...,99`."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:46
# 8f037a526a50415f82359fd6ef2ac028
msgid "IM_NC(n,k) : Newton-Cotes approximative integration on simplexes, order `k`."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:48
# f02b60cc7b9c465bab48805b8d03d4ab
msgid "IM_NC_PARALLELEPIPED(n,k) : Product of Newton-Cotes integration on parallelepipeds."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:50
# 74ccdbfa2e4847269db7ded409a9d097
msgid "IM_NC_PRISM(n,k) : Product of Newton-Cotes integration on prisms."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:52
# ea5ed948c3414d7abccc565ea14ce555
msgid "IM_GAUSS_PARALLELEPIPED(n,k) : Product of Gauss1D integration on parallelepipeds."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:54
# 80afc149d2e54dcd9126f2e71f5a67ca
msgid "IM_TRIANGLE(k) : Gauss methods on triangles `k=1,3,5,6,7,8,9,10,13,17,19`."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:56
# 9eccf34ffd5c46bdb4c55263dab11783
msgid "IM_QUAD(k) : Gauss methods on quadrilaterons `k=2,3,5, ...,17`. Note that IM_GAUSS_PARALLELEPIPED should be prefered for QK fem's."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:59
# 16cc415be1e342d2bd8d0290fa33f52a
msgid "IM_TETRAHEDRON(k) : Gauss methods on tetrahedrons `k=1,2,3,5,6 or 8`."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:61
# 5f89928c2cba4c7a9c5b617d78a9a60c
msgid "IM_SIMPLEX4D(3) : Gauss method on a 4-dimensional simplex."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:63
# 5ca4358c0d0c44829bfbbff6e1d03484
msgid "IM_STRUCTURED_COMPOSITE(im,k) : Composite method on a grid with `k` divisions."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:65
# 53987363749040bfa1638737526866d0
msgid "IM_HCT_COMPOSITE(im) : Composite integration suited to the HCT composite finite element."
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:68
# 8106c886997b481bb909997eea8354c1
msgid "Example:"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:70
# a4105d31e32444aca08b41932c0e9af3
msgid "I = gf_integ('IM_PRODUCT(IM_GAUSS1D(5),IM_GAUSS1D(5))')"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:72
# 507323e1cbd441c99e022a18cd389748
msgid "is the same as:"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:74
# 7a3dca2b0e4a4dc883285bf9f05f289b
msgid "I = gf_integ('IM_GAUSS_PARALLELEPIPED(2,5)')"
msgstr ""

#: ../source/matlab/cmdref_gf_integ.rst:76
# 4e7eb311c6204573a382bb4954362c7d
msgid "Note that 'exact integration' should be avoided in general, since they only apply to linear geometric transformations, are quite slow, and subject to numerical stability problems for high degree fem's."
msgstr ""

