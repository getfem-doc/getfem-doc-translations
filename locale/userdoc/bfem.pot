# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-15 02:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/userdoc/bfem.rst:12
# 89d552b4d2b34f7fbdba7d0503cde8a1
msgid "Build a finite element method on a mesh"
msgstr ""

#: ../source/userdoc/bfem.rst:15
# c10f1aeb2079403cb65b3326cdf87d1e
msgid "The object |gf_mf| defined in :file:`getfem/getfem_mesh_fem.h` is designed to describe a finite element method on a whole mesh, i.e. to describe the finite element space on which some variables will be described. This is a rather complex object which is central in |gf|. Basically, this structure describes the finite element method on each element of the mesh and some additional optional transformations. It is possible to have an arbitrary number of finite element descriptions for a single mesh. This is particularly necessary for mixed methods, but also to describe different data on the same mesh. One can instantiate a |gf_mf| object as follows::"
msgstr ""

#: ../source/userdoc/bfem.rst:27
# bcf5375b36c14d12892a9663a0aefc75
msgid "where ``mymesh`` is an already existing mesh. The structure will be linked to this mesh and will react when modifications will be done on it."
msgstr ""

#: ../source/userdoc/bfem.rst:30
# e3e011ad985c450996c108246def53ba
msgid "It is possible to specify element by element the finite element method, so that element of mixed types can be treated, even if the dimensions are different. For usual elements, the connection between two elements is done when the two elements are compatibles (same degrees of freedom on the common face). A numeration of the degrees of freedom is automatically done with a Cuthill Mc Kee like algorithm. You have to keep in mind that there is absolutely no connection between the numeration of vertices of the mesh and the numeration of the degrees of freedom. Every |gf_mf| object has its own numeration."
msgstr ""

#: ../source/userdoc/bfem.rst:39
# 529ad18029994a9fb53a8ff7b2ae9d52
msgid "There are three levels in the |gf_mf| object:"
msgstr ""

#: ../source/userdoc/bfem.rst:41
# 570b3e83c53e4223ad4db6aadcfea411
msgid "The element level: one finite element method per element. It is possible to mix the dimensions of the elements and the property to be vectorial or scalar."
msgstr ""

#: ../source/userdoc/bfem.rst:44
# 41159dd272b54d3994694cc8ec469c6e
msgid "The optional vectorization/tensorization (the qdim in getfem jargon, see `vocabulary`_). For instance to represent a displacement or a tensor field in continuum mechanics. Scalar elements are used componentwise. Note that you can mix some intrinsic vectorial elements (Raviart-Thomas element for instance) which will not be vectorized and scalar elements which will be."
msgstr ""

#: ../source/userdoc/bfem.rst:52
# f565bb11dce4403189bd3300729d6f5f
msgid "(|gf| version 4.0) The optional additional linear transformation (reduction) of the degrees of freedom. It will consist in giving two matrices, the reduction matrix and the extension matrix. The reduction matrix should transform the basic dofs into the reduced dofs (the number of reduced dofs should be less or equal than the number of basic dofs). The extension matrix should describe the inverse transformation. The product of the reduction matrix with the extension matrix should be the identity matrix (ensuring in particular that the two matrices are of maximal rank). This optional transformation can be used to reduce the finite element space to a certain region (tipically a boundary) or to prescribe some matching conditions between non naturally compatible fems (for instance fems with different degrees)."
msgstr ""

#: ../source/userdoc/bfem.rst:64
# f0a162fea0db4f2e909fac4e8673f47e
msgid "One has to keep in mind this construction manipulating the degrees of freedom of a |gf_mf| object."
msgstr ""

#: ../source/userdoc/bfem.rst:69
# 4fcd8f734b4a47b085c6780a23f21be7
msgid "First level: manipulating fems on each elements"
msgstr ""

#: ../source/userdoc/bfem.rst:71
# 15d0b0ecbf54451d9c8028f0d94b2a06
msgid "To select a particular finite element method on a given element, use the method::"
msgstr ""

#: ../source/userdoc/bfem.rst:75
# cc2a28c2871c47ec97243b61e99de16a
msgid "where ``i`` is the index of the element and ``pf`` is the descriptor (of type |gf_pfem|, basically a pointer to an object which inherits from |gf_vfem|) of the finite element method. Alternative forms of this member function are::"
msgstr ""

#: ../source/userdoc/bfem.rst:83
# 56641500b8ad4b0aaf23e50317e102cd
msgid "which set the finite elements for either the convexes listed in the ``bit_vector cvs``, or all the convexes of the mesh. Note that the last method makes a call to the method::"
msgstr ""

#: ../source/userdoc/bfem.rst:89
# 9576dfea92934c56b473ae59b3f7084f
msgid "which defines the default finite element method which will be automatically added on new elements of the mesh (this is very useful, for instance, when a refinement of the mesh is performed)."
msgstr ""

#: ../source/userdoc/bfem.rst:93
# dfec88589dee40f3be526f19afe7ddf4
msgid "Descriptors for finite element methods and integration methods are available thanks to the following function::"
msgstr ""

#: ../source/userdoc/bfem.rst:98
# 672e3cfcec344af89da3efadf4b7b02b
msgid "where ``\"name of method\"`` is to be chosen among the existing methods. A name of a method can be retrieved thanks to the following functions::"
msgstr ""

#: ../source/userdoc/bfem.rst:103
# da3a7c4a3f00490eac640578d73965f1
msgid "A non exhaustive list (see :ref:`ud-appendixa` or :file:`getfem/getfem_fem.h` for exhaustive lists) of finite element methods is given by:"
msgstr ""

#: ../source/userdoc/bfem.rst:106
# 53d5bd6489024260a8423f4aed28e959
msgid "``\"FEM_PK(n,k)\"``: Classical :math:`P_K` methods on simplexes of dimension ``n`` with degree ``k`` polynomials."
msgstr ""

#: ../source/userdoc/bfem.rst:109
# 6366b6122e334c4584c9abec91925560
msgid "``\"FEM_QK(n,k)\"``: Classical :math:`Q_K` methods on parallelepiped of dimension ``n``. Tensorial product of degree ``k`` :math:`P_K` method on the segment."
msgstr ""

#: ../source/userdoc/bfem.rst:112
# 081105473d2e46d495c42da59051a797
msgid "``\"FEM_PK_PRISM(n,k)\"``: Classical methods on prism of dimension ``n``. Tensorial product of two degree ``k`` :math:`P_K` method."
msgstr ""

#: ../source/userdoc/bfem.rst:115
# 2fc4807500624032aa36fef93cd37987
msgid "``\"FEM_PRODUCT(a,b)\"``: Tensorial product of the two polynomial finite element method ``a`` and ``b``."
msgstr ""

#: ../source/userdoc/bfem.rst:118
# 27041014fb8a49fbb63dc30fadb488a5
msgid "``\"FEM_PK_DISCONTINUOUS(n,k)\"``: discontinuous :math:`P_K` methods on simplexes of dimension ``n`` with degree ``k`` polynomials."
msgstr ""

#: ../source/userdoc/bfem.rst:121
# adea89541f624148a900419bdf3cef07
msgid "An alternative way to obtain a Lagrange polynomial fem suitable for a given geometric transformation is to use::"
msgstr ""

#: ../source/userdoc/bfem.rst:129
# 9b48aca7c2744ffeac0f4226621e4d89
msgid "The |mf| can call directly these functions via::"
msgstr ""

#: ../source/userdoc/bfem.rst:138
# b7e0660a27b94a718d6f2602ab314827
msgid "Some other methods:"
msgstr ""

#: ../source/userdoc/bfem.rst:142
# 4756a1cca4ef43cdbaa6ed5c841f8c08
msgid "Set of indexes (a |dal_bv|) on which a finite element method is defined."
msgstr ""

#: ../source/userdoc/bfem.rst:146
# f463bde68e494cd0b03a14d184796a52
msgid "gives a reference to the linked mesh."
msgstr ""

#: ../source/userdoc/bfem.rst:150
# b4884c20a4b44cb0a70324df6c83525b
msgid "gives a descriptor on the finite element method defined on element of index ``i`` (does not take into account the qdim nor the optional reduction)."
msgstr ""

#: ../source/userdoc/bfem.rst:155
# b1b7db45f8c04d2b997e1d11a0e433ed
msgid "Clears the structure, no finite element method is still defined."
msgstr ""

#: ../source/userdoc/bfem.rst:159
# ccb0f60e1ee54663a032e414b3deff4a
msgid "Examples"
msgstr ""

#: ../source/userdoc/bfem.rst:161
# 144085d663964743bb77ada072732ece
msgid "For instance if one needs to have a description of a :math:`P_1` finite element method on a triangle, the way to set it is::"
msgstr ""

#: ../source/userdoc/bfem.rst:166
# 9fcc681e8a8c4594bf42bb3ce3deeb34
msgid "where ``i`` is still the index of the triangle. It is also possible to select a particular method directly on a set of element, passing to ``mf.set_finite_element`` a |dal_bv| instead of a single index. For instance::"
msgstr ""

#: ../source/userdoc/bfem.rst:173
# 4e1a07d7d20048e3af1f264c2d04cdfc
msgid "selects the method on all the elements of the mesh."
msgstr ""

#: ../source/userdoc/bfem.rst:177
# 0b27f46e13ec49afb9ca57e65bb6e532
msgid "Second level: the optional \"vectorization/tensorization\""
msgstr ""

#: ../source/userdoc/bfem.rst:179
# 7fe8e609640745108474a8b19288437f
msgid "If the finite element represents an unknown which is a vector field, the method ``mf.set_qdim(Q)`` allows set the target dimension for the definition of the target dimension :math:`Q`."
msgstr ""

#: ../source/userdoc/bfem.rst:182
# 9705f72a80e64587a9029c520c6b8bff
msgid "If the target dimension :math:`Q` is set to a value different of :math:`1`, the scalar FEMs (such as :math:`P_k` fems etc.) are automatically \"vectorized\" from the |mf| object point of view, i.e. each scalar degree of freedom appears :math:`Q` times in order to represent the :math:`Q` components of the vector field. If an intrinsically vectorial element is used, the target dimension of the ``fem`` and the one of the |mf| object have to match. To sum it up,"
msgstr ""

#: ../source/userdoc/bfem.rst:189
# 6b7fdd87ed38465e8dbda7e3fb0209c7
msgid "if the fem of the :math:`ith` element is intrinsically a vector FEM, then::"
msgstr ""

#: ../source/userdoc/bfem.rst:195
# fa28328997ee4464a543356002294c3a
msgid "if the fem has a ``target_dim`` equal to :math:`1`, then::"
msgstr ""

#: ../source/userdoc/bfem.rst:199
# 5c0b66e7f31d442085ea3eff42cb626f
msgid "Additionally, if the field to be represented is a tensor field instead of a vector field (for instance the stress or strain tensor field in elasticity), it is possible to specify the tensor dimensions with the methods::"
msgstr ""

#: ../source/userdoc/bfem.rst:205
# f16dd051787144e6a29bd5b8c9b4452d
msgid "respectively for a tensor field of order two, four and arbitrary (but limited to 6). For most of the operations, this is equivalent to declare a vector field of the size the product of the dimensions. However, the declared tensor dimensions are taken into account into the high level generic assembly. Remember that the components inside a tensor are stored in Fortran order."
msgstr ""

#: ../source/userdoc/bfem.rst:209
# c87972e118a44bfebda991a8d58b2146
msgid "At this level are defined the basic degrees of freedom. Some methods of the |gf_mf| allows to obtain information on the basic dofs:"
msgstr ""

#: ../source/userdoc/bfem.rst:214
# 9dc65116480c4fd69a13ebf3b8e9f143
msgid "gives the number of basic degrees of freedom on the element of index ``i``."
msgstr ""

#: ../source/userdoc/bfem.rst:218
# 9747d2b633924ea98aa588a2c4a4d1a1
msgid "gives a container (an array) with all the global indexes of the basic degrees of freedom of element of index ``i``."
msgstr ""

#: ../source/userdoc/bfem.rst:223
# 7ed8dcdfed3e47e1b9373c18e4ae56be
msgid "gives a ``bgeot::base_node`` which represents the point associated with the basic dof of local index ``j`` on element of index ``i``."
msgstr ""

#: ../source/userdoc/bfem.rst:228
# dea12ea567b241c9a4fcb9a83ff16b15
msgid "gives a ``bgeot::base_node`` which represents the point associated with the basic dof of global index ``j``."
msgstr ""

#: ../source/userdoc/bfem.rst:233
# 0e1a3ff8a81a46f1a296d50adc7e7cc6
msgid "gives a ``bgeot::base_node`` which represents the point associated with the basic dof of local index ``j`` on element of index ``i`` in the coordinates of the reference element."
msgstr ""

#: ../source/userdoc/bfem.rst:239
# 8ad941cca59340d0ad9d5003984b6eb1
msgid "gives the index of the first element on which the basic degree of freedom of global index ``j`` is defined."
msgstr ""

#: ../source/userdoc/bfem.rst:244
# cc6689fad0d7453f8f5c45b79ca3dc1b
msgid "gives the total number of different basic degrees of freedom."
msgstr ""

#: ../source/userdoc/bfem.rst:248
# f0b041b70a6041629222514db47cf9b4
msgid "gives the target dimension ``Q``."
msgstr ""

#: ../source/userdoc/bfem.rst:252
# f75fff78febc46dcb512b6b5b9e84ac1
msgid "Return a |dal_bv| which represents the indices of basic dof which are in the set of convexes or the set of faces of index ``i`` (see the |gf_m| object)."
msgstr ""

#: ../source/userdoc/bfem.rst:257
# 1c2eb5f26c2d460ca8b1bba72bc0d7ec
msgid "Return a |dal_bv| which represents the indices of dof which are in the set of convexes or the set of faces of index ``i`` (see the |gf_m| object). For a reduced mesh_fem, a dof is lying on a region if its potential corresponding shape function is nonzero on this region. The extension matrix is used to make the correspondence between basic and reduced dofs."
msgstr ""

#: ../source/userdoc/bfem.rst:265
# b6ae0cca6c484706ad1b45ba12641f6e
msgid "Third level: the optional linear transformation (or reduction)"
msgstr ""

#: ../source/userdoc/bfem.rst:267
# 3691810df4444cd099435894d1a9498b
msgid "As described above, it is possible to provide two matrices, a reduction matrix :math:`R` and an extension matrix :math:`E` which will describe a linear transformation of the degrees of freedom. If :math:`V` is the vector of basic degrees of freedom, then :math:`U=RV` will be the vector of reduced degrees of freedom. Contrarily, given a vector :math:`U` of reduced dof, :math:`V=EU` will correspond to a vector of basic dof. In simple cases, :math:`E` will be simply the transpose of :math:`R`. NOTE that every line of the extension matrix should be sparse. Otherwise, each assembled matrix will be plain !"
msgstr ""

#: ../source/userdoc/bfem.rst:276
# bfc13bd911ef46ca8ccafa69cbfc9165
msgid "A natural condition is that :math:`RE = I` where :math:`I` is the identity matrix."
msgstr ""

#: ../source/userdoc/bfem.rst:280
# 17c11062be2d4e49bbc0a92e9bfb5e1d
msgid "gives the total number of different degrees of freedom. If the optional reduction is used, this will be the number of columns of the reduction matrix. Otherwise it will return the number of basic degrees of freedom."
msgstr ""

#: ../source/userdoc/bfem.rst:286
# d7e4001114a84b4ebbd3725828678148
msgid "return a boolean. True if the reduction is used."
msgstr ""

#: ../source/userdoc/bfem.rst:290
# e7e2aae9212542698fe3afae4c2ea65d
msgid "return a const reference to the reduction matrix :math:`R`."
msgstr ""

#: ../source/userdoc/bfem.rst:294
# 01fd62c4c4db48b2b6083296ec3cbbab
msgid "return a const reference to the extension matrix :math:`E`."
msgstr ""

#: ../source/userdoc/bfem.rst:298
# 1960b784e23543c0948f96104b3dd464
msgid "Set the reduction and extension matrices to ``R`` and ``E`` and validate their use."
msgstr ""

#: ../source/userdoc/bfem.rst:303
# ff6c3105c9fd4929a5fa0e613b118c5e
msgid "Where :math:`b` is a boolean. Cancel the reduction if :math:`b` is false and validate it if ``b`` is true. If ``b`` is true, the extension and reduction matrices have to be set previously."
msgstr ""

#: ../source/userdoc/bfem.rst:309
# f8a55f4f2e40484bac41e7f60b8c8ca5
msgid "Set the reduction and extension matrices corresponding to keep only the basic dofs present in ``idof``. The parameter ``idof`` is either a |dal_bv| or a ``std::set<size_type>``. This is equivalent to the use of a ``getfem::partial_mesh_fem`` object."
msgstr ""

#: ../source/userdoc/bfem.rst:316
# 6dc0b93bee2e4d98b202def2e5df7955
msgid "Obtaining generic |mf|'s"
msgstr ""

#: ../source/userdoc/bfem.rst:318
# cc36928689be4d6c993459ecb4bd5a54
msgid "It is possible to use the function::"
msgstr ""

#: ../source/userdoc/bfem.rst:322
# 0fae08043f284f86bc403b1733f1e6c8
msgid "to get a classical polynomial |mf| of order :math:`K` on the given ``mymesh``. The returned |mf| will be destroyed automatically when its linked mesh is destroyed. All the |mf| built by this function are stored in a cache, which means that calling this function twice with the same arguments will return the same |mf| object. A consequence is that you should NEVER modify this |mf|!"
msgstr ""

#: ../source/userdoc/bfem.rst:330
# dfe0aff1624f4487a20a07fdfb1d6649
msgid "The partial_mesh_fem object"
msgstr ""

#: ../source/userdoc/bfem.rst:332
# 0487deed0fe04509871c02836fc8e8c1
msgid "The ``getfem::partial_mesh_fem`` object defined in the file ``getfem_partial_mesh_fem.h`` allows to reduce a |gf_mf| object to a set of dofs. The interest is this is not a complete description of a finite element method, it refers to the original |gf_mf| and just add reduction and extension matrices. For instance, you can reduce a |mf| obtained by the function ``getfem::classical_mesh_fem(mesh, K)`` to obtain a finite element method on a mesh region (which can be a boundary). The ``getfem::partial_mesh_fem`` is in particular used to obtain multiplier description to prescribed boundary conditions."
msgstr ""

#: ../source/userdoc/bfem.rst:342
# 1278e78dcdb140028f3609a5b34b1229
msgid "The declaration of a ``getfem::partial_mesh_fem`` object is the following::"
msgstr ""

#: ../source/userdoc/bfem.rst:346
# 1d002387484049cb8776ff872bad6421
msgid "Then, one has to call the adapt method as follows::"
msgstr ""

#: ../source/userdoc/bfem.rst:350
# 209629a59f444d309c8d6d2722291eb3
msgid "where ``kept_dof`` and ``rejected_elt`` are some |dal_bv|. ``kept_dof`` is the list of dof indices of the original |mf| ``mf`` to be kept. ``rejected_elt`` is an optional parameter that contains a list of element indices on which the ``getfem::partial_mesh_fem`` states that there is no finite element method. This is to avoid unnecessary computations during assembly procedures."
msgstr ""

#: ../source/userdoc/bfem.rst:7
# c132773e47e74184b0b4332d4d17b516
msgid "fem"
msgstr ""

#: ../source/userdoc/bfem.rst:7
# c132773e47e74184b0b4332d4d17b516
msgid "mesh"
msgstr ""

#: ../source/userdoc/bfem.rst:7
# c132773e47e74184b0b4332d4d17b516
msgid "mesh_fem"
msgstr ""

