# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/userdoc/model_contact_friction.rst:14
# e4291934841847138514d221d0e841c3
msgid "Small sliding contact with friction bricks"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:16
# 9dcf3c3f62134f0398bff8a56ca45c76
msgid "The aim of these bricks is to take into account a contact condition with or without friction of an elastic structure on a rigid foundation or between two elastic structures. These bricks are restricted to small deformation approximation of contact (this may include large deformations on a flat obstacle)."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:19
# be98afff8f604aa49d99a74682ba0950
msgid "Approximation of contact"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:21
# d4c81a2942774f86bee4424bbccb1d71
msgid "For small deformation problems submitted a simple (compared to large deformation !) expression of the contact with friction condition is usually used where the tangential displacement do not influence the normal one. This is an approximation in the sense that if an obstacle is not perfectly flat, the tangential displacement of course influence the point where the contact holds. This will not be the case in small deformation where the contact condition can be considered to be described on the reference configuration."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:24
# 8f6f944b550d481fbed553e4e13a8566
msgid "There are mainly two largely used discretizations of the contact with friction condition in this framework: a direct nodal contact condition (usually prescribed on the displacement finite element nodes) or a weak nodal contact condition (usually prescribed on the multiplier finite element nodes). The two discretization leads to similar system. However, the interpretation of quantities is not the same. A third approach is developed on Getfem contact bricks: a weak integral contact condition. It needs the computation of a non-linear integral on the contact boundary at each iteration but the numerical resolution is potentially more scalable because it derives directly from continuous principles."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:26
# 9d2196a1821947a180e16559ce285014
msgid "More details can be found for instance in [KI-OD1988]_, [KH-PO-RE2006]_ and [LA-RE2006]_."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:29
# 8c737e2374b44b0684b7e3ea93f1d6ad
msgid "Direct nodal contact condition"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:31
# ebd2184782c04c239dc8989204d557ae
msgid "A nodal contact condition consists in a certain number of contact nodes :math:`a_i`, :math:`i=1..N_c` on which a contact with (or without) friction condition is applied. The contact condition reads"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:37
# 690a5b2f01284fe888196e07b34c3cd7
msgid "where :math:`\\lambda_N^i` is the equivalent nodal contact force on :math:`a_i` and :math:`u_N(a_i)` is the normal relative displacement between the elastic solid and an obstacle or between two elastic solids. The term :math:`\\text{gap}_i` represents the normal gap between the two solids in the reference configuration. The friction condition reads"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:45
# 97279cc1ea1046ff8e4cab8c028ba84f
msgid "where :math:`\\dot{u}_T` is the relative slip velocity, :math:`{\\mathscr F}` is the friction coefficient and :math:`\\lambda_T^i` the equivalent nodal friction force on :math:`a_i`. The friction condition can be summarized by the inclusion"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:51
# 8e237cb3d16a445180d0fc3a33bdb56b
msgid "where :math:`\\text{Dir}(\\dot{u}_T)` is the multivalued map being the sub-differential of :math:`x \\mapsto \\|x_T\\|` (i.e. :math:`\\text{Dir}(x) = \\frac{x}{\\|x\\|}` when :math:`x \\ne 0` and :math:`\\text{Dir}(0)` the closed unit ball). For two dimensional cases, :math:`\\text{Dir}(\\dot{u}_T)` reduces to :math:`\\text{Sign}(\\dot{u}_T)` where :math:`\\text{Sign}` is the multivalued sign map."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:53
# 49425691a3da485ebfe078bce6b794db
msgid "A complete linearized elasticity problem with contact with friction reads as"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:55
# 27d82dbf0742461890042af1545901fa
msgid "Given an augmentation parameter :math:`r`, the contact and friction conditions can be equivalently expressed in term of projection as"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:63
# 04a5a0dda7434eff879f508e4e227b59
msgid "where :math:`P_K` is the projection on the convex :math:`K` and :math:`{\\mathscr B}(-{\\mathscr F}\\lambda_N^i)` is the ball of center :math:`0` and radius :math:`-{\\mathscr F}\\lambda_N^i`. These expressions will be used to perform a semi-smooth Newton method."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:66
# facf22fb54be4e3abe44cfcc08580975
msgid "Suppose now that you approximate a linearized elasticity problem submitted to contact with friction. Then, if :math:`U` is the vector of the unknown for the displacement you will be able to express the matrices :math:`B_N` and :math:`B_T` such that"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:74
# 62d9d7a828b4490a9e50d4410466c934
msgid "where :math:`d` is the dimension of the domain and :math:`k = 1..d-1`. The expression of the elasticity problem with contact with friction can be written as"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:84
# 2bbb65bd216d403c83ef90340561be4c
msgid "where :math:`\\alpha_i` is a parameter which can be added for the homogenization of the augmentation parameter, :math:`(B_T U)_i` denotes here the sub-vector of indices from :math:`(d-1)(i-1)+1` to :math:`(d-1)i` for the sake of simplicity and the sliding velocity :math:`B_T \\dot{U}` have been discretized into :math:`\\frac{(B_T U - B_T U^{0})}{\\Delta t}` with :math:`U^{0}` the displacement at the previous time step. Note that of course another discretization of the sliding velocity is possible and that the time step :math:`\\Delta t` do not appear in the expression of the friction condition since it does not influence the direction of the sliding velocity."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:87
# c5be5edbf4534c2c8b95ee45f244c8b0
msgid "In that case, the homogenization coefficient :math:`\\alpha_i` can be taken proportional to :math:`h^{d-2}` (:math:`h` being the diameter of the element). In this way, the augmentation parameter :math:`r` can be expressed in :math:`N/m^2` and chosen closed to the Young modulus of the elastic body. Note that the solution is not sensitive to the value of the augmentation parameter."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:91
# b8c21c97c0f844488a38d66e73a5bc38
msgid "Weak nodal contact condition"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:93
# e644954e828644f487e19a392271f341
msgid "The direct nodal condition may have some drawback : locking phenomena, over-constraint. It is in fact often more stable and for the same accuracy to use multiplier of reduced order compared to the displacement (the direct nodal contact condition corresponds more or less to a multiplier described on the same finite element method than the displacement)."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:95
# d4ab4174c6d64f72b3817818cd353438
msgid "Let :math:`\\varphi_i` be the shapes functions of the finite element describing the displacement and :math:`\\psi_i` be the shape functions of a finite element describing a multiplier on the contact boundary :math:`\\Gamma_c`. It is assumed that the set of admissible multiplier describing the normal stress will be"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:101
# 82f83a04e3bc454f8eb482525b76821c
msgid "where :math:`a_i`, :math:`~~i=1..N_c` are the finite element nodes corresponding to the multiplier. The discrete contact condition is now expressed in a weak form by"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:107
# 443d6a38ca0144c9a0484b9c99937583
msgid "In that case, the component :math:`\\lambda_N^i` is a contact stress (:math:`N/m^2`) and the matrix :math:`B_N` can be written"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:113
# 33bd2ad137874abebfa79b08c5c90b46
msgid "The matrix :math:`B_T` can also be written in a similar way. The friction condition can be written in a weak form"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:119
# 7a604bbf70f54cf7b1916fb803ec3d32
msgid "where :math:`\\Lambda_T^h({\\mathscr F}\\lambda_N^h)` is the discrete set of admissible friction stress."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:121
# f4eb27042dba4a33b845a7fa9c553621
msgid "Finally, the expression of the direct nodal contact condition are recovered"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:131
# 7f01cf16099c4bd28c31e8294acf7815
msgid "except that now :math:`\\lambda_N^i` and :math:`\\lambda_T^i` are force densities, and :math:`\\alpha_i` has to be now chosen proportional to :math:`1/h^d` such that the augmentation parameter :math:`r` can still be chosen close to the Young modulus of the elastic body."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:134
# e7d4ec39c346480eb90ec0f684d7ecd6
msgid "Note that without additional stabilization technique (see [HI-RE2010]_) an inf-sup condition have to be satisfied between the finite element of the displacement and the one for the multipliers. This means in particular that the finite element for the multiplier have to be \"less rich\" than the one for the displacement."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:140
# cf113621929f455988d8790d6a3e19b0
msgid "Weak integral contact condition"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:142
# ae9cfbcc6e2546869bc9e4b9aa176403
msgid "The weak integral contact formulation allows not to explicitly describe the discrete set of admissible stress. See also :ref:`nitsche_contact_small_def_section`. The contact stress (including the friction one) is described on a finite element space :math:`W^h` on the contact boundary :math:`\\Gamma_c`:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:148
# 9203a1068d6b47c4a67f7a47018a805a
msgid "where :math:`d` is the dimension of the problem and :math:`\\psi_i` still the shapes functions on which the contact stress is developed. Now, given a outward unit vector :math:`n` on the contact boundary :math:`\\Gamma_c` (usually the normal to the obstacle), we make the standard decompositions:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:155
# 51d3212df4bc41cda6d1cadb9ef63c44
msgid "where :math:`u^h` is the displacement field approximated on a finite element space :math:`V^h`. This allows to express the contact condition in the following way"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:161
# 6658ba60046b45eeb97da4fd2482a911
msgid "where :math:`gap` is a given initial gap in reference configuration, :math:`r` is an augmentation parameter and :math:`(\\cdot)_-:I\\hspace{-0.2em}R\\rightarrow I\\hspace{-0.2em}R_+` is the negative part. The friction condition can similarly be written:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:167
# 3eb9ce19178b4763b795acdcf58e1ed5
msgid "where :math:`B(\\rho)` is the closed ball of center  :math:`0` and radius :math:`\\rho` and :math:`P_{B(\\rho)}` is the orthogonal projection on it (By convenyion, the ball reduces to the origin dor :math:`\\rho \\le 0`). The term :math:`\\alpha(u^h_T-w^h_T)` represent here an approximation of the sliding velocity. The parameter :math:`\\alpha` and the field :math:`w^h_T` have to be adapted with respect to the chosen approximation. For instance, if the standard finite difference"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:173
# 02f4adb726c54395b1071011d717870e
msgid "is chosen, then one has to take :math:`\\alpha = 1/dt` and :math:`w^h_T = (u^h_T)^{n}`. Note that due to the symmetry of the ball, the parameter :math:`\\alpha` do not play an important role in the formulation. It can simply be viewed as a scaling between the augmentation parameter for the contact condition and the one for the friction condition. Note also that contrarily to the previous formulations of contact, here there is not a strict independance of the conditions with respect to the augmentation parameter (the independance only occurs at the continuous level)."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:176
# a7e95e3417f8456caca4160cdfdc3087
msgid "GetFEM++ bricks implement four versions of the contact condition derived from the Alart-Curnier augmented Lagrangian formulation [AL-CU1991]_. The first one corresponds to the non-symmetric version. It consists in solving:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:186
# 3ddcc8af74914b3ca502c306e280b2d7
msgid "where :math:`a(\\cdot, \\cdot)` and :math:`\\ell(v)` represent the remaining parts of the problem in  :math:`u`, for instance linear elasticity and :math:`\\rho={\\mathscr F}(\\lambda^h_N - r(u^h_N-gap))_-`. Note that in this case, the mathematical analysis leads to choose a value for the augmentation parameter of the kind :math:`r = r_0 / r` with :math:`r_0` having the dimension of a elasticity modulus (a classical choice is the value of Young's modulus). In order to write a Newton iteration, one has to derive the tangent system. It can be written, reporting only the contact and friction terms and not the right hand side:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:200
# 8f8bf297d21445a292d02f1e60f17df2
msgid "where :math:`H(\\cdot)` is the Heaviside function (0 for a negative argument and 1 for a non-negative argument), :math:`D_xP_{B(\\rho)}(x)` and :math:`D_{\\rho}P_{B(\\rho)}(x)` are the derivatives of the projection on :math:`B(\\rho)` (assumed to vanish for :math:`\\rho \\le 0`) and :math:`\\delta_{\\lambda}` and :math:`\\delta_{u}` are the unknown corresponding to the tangent problem."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:203
# 56d62d68ba42433d9b7a2bc62e06f61a
msgid "The second version corresponds to the \"symmetric\" version. It is in fact symmetric in the frictionless case only (because in this case it directly derives from the augmented Lagrangian formulation). It reads:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:214
#: ../source/userdoc/model_contact_friction.rst:243
# edd2bf3a1a494a58bc102e29b01643d6
# f6bf467ea53540f99d4e854d7e213749
msgid "and the tangent system:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:232
# 027355773941411ab1b196ffba556f3c
msgid "still with :math:`\\rho={\\mathscr F}(\\lambda^h_N - r(u^h_N-gap))_-`."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:234
# 70c3c47dfdf24c35ac50ca3f6bfaec61
msgid "The third version corresponds to a penalized contact and friction condition. It does not require the use of a multiplier. In this version, the parameter :math:`r` is a penalization parameter and as to be large enough to perform a good approximation of the non-penetration and the Coulomb friction conditions. The formulation reads:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:255
# d747eab00cf041c59572e67dd31d3cf9
msgid "Numerical continuation"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:257
# c2b06abbd01b425caed5df89d9f42256
msgid "In addition, |gf| develops a method of numerical continuation for finding numerical solutions of discretized evolutionary contact problems based on the weak integral contact condition (see :ref:`ud-model-continuation` for a general introduction). For this purpose, a parameter-dependent sliding velocity may be added to the friction condition so that it becomes:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:263
# f7307e20730548af9222123df000457d
msgid "Here, :math:`\\gamma` is a parameter and :math:`z^h_T` is an initial sliding velocity. It is worth mentioning that if one chooses"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:269
# af31b66df98943d79fc00ece879e633b
msgid "then he recovers the standard friction condition at time :math:`t_{n}` and :math:`t_{n+1}` for :math:`\\gamma` equal to 0 and 1, respectively."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:274
# 03cbf7ae7e3045fbb034674a703d73be
msgid "Friction law"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:276
# 6785773894464e78b7716ce1ee73a678
msgid "Apart from pure Coulomb friction :math:`\\rho = {\\mathscr F} \\left| \\sigma_n \\right|`, the weak integral contact framework in |gf| also supports a more generic friction law description:"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:288
# 8707d2efeef94f6aa61d7ae5cdd4a675
msgid "In this equation :math:`\\rho` is the admissible friction stress for a given normal stress :math:`\\sigma_n`, :math:`{\\mathscr F}` is the coefficient of friction, :math:`\\tau_{adh}` is an adhesional (load-independent) shear stress and :math:`\\tau_{tresca}` is a maximum shear stress limit."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:300
# 7bde2f511f1c4be1b3f3d666d8a2a24b
msgid "Add a contact with or without friction to a model"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:303
# f84bec90461949cf81d68ae53a3d424e
msgid "Frictionless basic contact brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:305
# e54a51b6f56d4975806b6fb85727330d
msgid "In order to add a frictionless contact brick you call the model object method::"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:310
# 716d887bdb2d489eaca9bf6e3646a832
msgid "This function adds a frictionless contact brick on ``varname_u`` thanks to a multiplier variable ``multname_n``. If :math:`U` is the vector of degrees of freedom on which the unilateral constraint is applied, the matrix :math:`B_N` have to be such that this condition is defined by :math:`B_N U \\le 0`. The constraint is prescribed thank to a multiplier ``multname_n`` whose dimension should be equal to the number of lines of :math:`B_N`. The variable ``dataname_r`` is the name of the augmentation parameter :math:`r` should be chosen in a range of acceptable values. ``dataname_gap`` is an optional parameter representing the initial gap. It can be a single value or a vector of value. ``dataname_alpha`` is an optional homogenization parameter for the augmentation parameter."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:312
# 5b77f5d55dd74d0e82f6aa8c72b56a97
msgid "The parameter `aug_version` indicates the augmentation strategy : 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method based on augmented multipliers."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:314
# a6d7761e48224ebfb00a57511eb9c6b0
msgid "Note that is possible to change the basic contact matrix :math:`B_N` by using::"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:320
# 359bc6ce56314ceb8da0656e91793e8a
msgid "Basic contact brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:323
# 2b2b8c4ff3fe42379d3fbcc92cad5a14
msgid "getfem::add_basic_contact_brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:323
# 11ae69cc808d4fb4984467690943908d
msgid "(md, varname_u, multname_n, multname_t, dataname_r, BN, dataname_friction_coeff, dataname_gap, dataname_alpha, aug_version);"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:325
# 129361895ed34836bf963057629ee2f1
msgid "This function adds a contact brick with friction on ``varname_u`` thanks to two multiplier variables ``multname_n`` and ``multname_t``. If ``U`` is the vector of degrees of freedom on which the condition is applied, the matrix ``B_N`` has to be such that the contact condition is defined by :math:`B_N U \\le gap` and ``B_T`` have to be such that the relative tangential displacement is :math:`B_T U`. The matrix ``B_T`` should have as many rows as ``B_N`` multiplied by :math:`d-1` where :math:`d` is the domain dimension. The contact condition is prescribed thank to a multiplier ``multname_n`` whose dimension should be equal to the number of rows of ``B_N`` and the friction condition by a multiplier ``multname_t`` whose size should be the number of rows of ``B_T``. The parameter ``dataname_friction_coeff`` describes the friction coefficient. It could be a scalar or a vector describing the coefficient on each contact condition. The augmentation parameter ``r`` should be chosen in a range of acceptable values (see Getfem user documentation). ``dataname_gap`` is an optional parameter representing the initial gap. It can be a single value or a vector of value. ``dataname_alpha`` is an optional homogenization parameter for the augmentation parameter."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:346
#: ../source/userdoc/model_contact_friction.rst:406
# dc4e5b7321cf42608fd7f900f9e413a9
# 1c097cc20c3d4160800725a4bffbf86f
msgid "The parameter `aug_version` indicates the augmentation strategy : 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method based on augmented multipliers and 4 for the unsymmetric method based on augmented multipliers with De Saxce projection."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:352
# 4c72fe650ad4442e80e91fed9577a067
msgid "Note that is possible to change the basic contact matrices :math:`B_N` and :math:`B_T` by using::"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:359
# 49681324e6f84414ae51f38498b5f1ac
msgid "Frictionless nodal contact with a rigid obstacle brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:362
#: ../source/userdoc/model_contact_friction.rst:384
# 0c94f8b61c4f4b798bf20924547fda1a
# 7679975c031e4c39874adecc3fa7801e
msgid "getfem::add_nodal_contact_with_rigid_obstacle_brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:362
# 7df897aa42784a12b20ccb6f3e431054
msgid "(md, mim, varname_u, multname_n, dataname_r, region, obstacle, aug_version);"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:364
# 75b0280c967d4d2580f5ee766689c1a9
msgid "This function adds a direct nodal frictionless contact condition with a rigid obstacle to the model. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the string ``obstacle`` being a signed distance to the obstacle. This string should be an expression where the coordinates are 'x', 'y' in 2D and 'x', 'y', 'z' in 3D. For instance, if the rigid obstacle correspond to :math:`z \\le 0`, the corresponding signed distance will be simply 'z'. ``multname_n`` should be a fixed size variable whose size is the number of degrees of freedom on boundary ``region``. It represents the contact equivalent nodal forces. The augmentation parameter ``r`` should be chosen in a range of acceptable values (close to the Young modulus of the elastic body, see Getfem user documentation). 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method based on augmented multipliers."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:379
# 3621961854be44ac8bd6cd9dbe297932
msgid "Nodal contact with a rigid obstacle brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:382
# df76768e849e4375a20adbd425e1a951
msgid "(md, mim, varname_u, multname_n, multname_t, dataname_r, dataname_friction_coeff, region, obstacle, aug_version);"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:386
# 78609bc732df4566aad9b5bd610089c8
msgid "This function adds a direct nodal contact with friction condition with a rigid obstacle to the model. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the string ``obstacle`` being a signed distance to the obstacle. This string should be an expression where the coordinates are 'x', 'y' in 2D and 'x', 'y', 'z' in 3D. For instance, if the rigid obstacle correspond to :math:`z \\le 0`, the corresponding signed distance will be simply 'z'. ``multname_n`` should be a fixed size variable whose size is the number of degrees of freedom on boundary ``region``. It represents the contact equivalent nodal forces. ``multname_t`` should be a fixed size variable whose size is the number of degrees of freedom on boundary ``region`` multiplied by :math:`d-1` where :math:`d` is the domain dimension. It represents the friction equivalent nodal forces. The augmentation parameter ``r`` should be chosen in a range of acceptable values (close to the Young modulus of the elastic body, see Getfem user documentation). ``dataname_friction_coeff`` is the friction coefficient. It could be a scalar or a vector of values representing the friction coefficient on each contact node."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:414
# 23d95f63ce494a60bdfd7152f43ad194
msgid "Frictionless nodal contact between non-matching meshes brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:418
#: ../source/userdoc/model_contact_friction.rst:456
# d40f340e619c4b138b3b4a563e8a9e16
# 52eac627be1f426ea8f1f64a5429a0e0
msgid "getfem::add_nodal_contact_between_nonmatching_meshes_brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:417
# 8f6dfa3d3ef946a0b25ac7275cad86a7
msgid "(md, mim1, mim2, varname_u1, varname_u2, multname_n, dataname_r, rg1, rg2, slave1=true, slave2=false, aug_version=1);"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:420
# 0203c016dda049ebbcca75fbe4f3ef54
msgid "This function adds a frictionless contact condition between two faces of one or two elastic bodies. The condition is applied on the variable `varname_u` or the variables `varname_u1` and `varname_u2` depending if a single or two distinct displacement fields are given. Vectors `rg1` and `rg2` contain pairs of regions expected to come in contact with each other. In case of a single region per side, `rg1` and `rg2` can be given as normal integers. In the single displacement variable case the regions defined in both `rg1` and `rg2` refer to the variable `varname_u`. In the case of two displacement variables, `rg1` refers to `varname_u1` and `rg2` refers to `varname_u2`. `multname_n` should be a fixed size variable whose size is the number of degrees of freedom on those regions among the ones defined in `rg1` and `rg2` which are characterized as \"slaves\". It represents the contact equivalent nodal forces. The augmentation parameter `r` should be chosen in a range of acceptabe values (close to the Young modulus of the elastic body, see Getfem user documentation). The optional parameters `slave1` and `slave2` declare if the regions defined in `rg1` and `rg2` are correspondingly considered as \"slaves\". By default `slave1` is true and `slave2` is false, i.e. `rg1` contains the slave surfaces, while `rg2` the master surfaces. Preferably only one of `slave1` and `slave2` is set to true."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:441
# 09d88b2eca7f4f3ca8d68dbf37b6705b
msgid "The parameter `aug_version` indicates the augmentation strategy : 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method with augmented multiplier."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:446
# e3218c4a069d4e63a52e1ee46787d025
msgid "Basically, this brick computes the matrix :math:`B_N` and the vectors gap and alpha and calls the basic contact brick."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:451
# 435beee4740743a195501e9d13665c5a
msgid "Nodal contact between non-matching meshes brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:456
# 4ab07c0778094ec4a5b329be82b13443
msgid "(md, mim1, mim2, varname_u1, varname_u2, multname_n, multname_t,"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:455
# 1db13d5d9b1c43598e843dcbbf180db0
msgid "dataname_r, dataname_friction_coeff, rg1, rg2, slave1=true, slave2=false, aug_version=1);"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:458
# 65ef3c0eada6434d97ffd83f9dc179d0
msgid "This function adds a contact with friction condition between two faces of one or two elastic bodies. The condition is applied on the variable `varname_u` or the variables `varname_u1` and `varname_u2` depending if a single or two distinct displacement fields are given. Vectors `rg1` and `rg2` contain pairs of regions expected to come in contact with each other. In case of a single region per side, `rg1` and `rg2` can be given as normal integers. In the single displacement variable case the regions defined in both `rg1` and `rg2` refer to the variable `varname_u`. In the case of two displacement variables, `rg1` refers to `varname_u1` and `rg2` refers to `varname_u2`. `multname_n` should be a fixed size variable whose size is the number of degrees of freedom on those regions among the ones defined in `rg1` and `rg2` which are characterized as \"slaves\". It represents the contact equivalent nodal normal forces. `multname_t` should be a fixed size variable whose size corresponds to the size of `multname_n` multiplied by qdim - 1 . It represents the contact equivalent nodal tangent (frictional) forces. The augmentation parameter `r` should be chosen in a range of acceptabe values (close to the Young modulus of the elastic body, see Getfem user documentation). The friction coefficient stored in the parameter `friction_coeff` is either a single value or a vector of the same size as `multname_n`. The optional parameters `slave1` and `slave2` declare if the regions defined in `rg1` and `rg2` are correspondingly considered as \"slaves\". By default `slave1` is true and `slave2` is false, i.e. `rg1` contains the slave surfaces, while `rg2` the master surfaces. Preferably only one of `slave1` and `slave2` is set to true."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:484
# b746c27f89a242978b8d717ed8f176e9
msgid "The parameter `aug_version` indicates the augmentation strategy : 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method with augmented multiplier and 4 for the unsymmetric method with augmented multiplier and De Saxce projection."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:490
# 6b12b3db5f0a42eea6c80434d1e53165
msgid "Basically, this brick computes the matrices :math:`B_N` and :math:`B_T` as well the vectors gap and alpha and calls the basic contact brick."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:496
# b551e4286d5b4c2688799532fe544602
msgid "Hughes stabilized frictionless contact condition"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:498
# a5b13c63664b4bbb82f50702dd0c288f
msgid "In order to add a Hughes stabilized frictionless contact brick you call the model object method::"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:503
# 2767036a23bd41f69b84d00402363601
msgid "This function adds a Hughes stabilized frictionless contact brick on ``varname_u`` thanks to a multiplier variable ``multname_n``. If we take :math:`U` is the vector of degrees of freedom on which the unilateral constraint is applied, and :math:`\\lambda` the multiplier Vector of contact force. Then Hughes stabilized frictionless contact condition is defined by the matrix :math:`B_N` and :math:`D_N` have to be such that this condition is defined by :math:`B_N U - D_N \\lambda \\le 0`. Where :math:`D_N` is the mass matrix relative to stabilized term. The variable ``dataname_r`` is the name of the augmentation parameter :math:`r` should be chosen in a range of acceptable values. ``dataname_gap`` is an optional parameter representing the initial gap. It can be a single value or a vector of value. ``dataname_alpha`` is an optional homogenization parameter for the augmentation parameter."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:505
# 3929961a3d4540fea8de7f3e3ce011c6
msgid "The parameter `aug_version` indicates the augmentation strategy :  1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method based on augmented multipliers."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:507
# 844661c5c49a4f5895940da4fa83ba08
msgid "Note that the matrix :math:`D_N` is a sum of the basic contact term and the Hughes stabilised term. You can change it with::"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:513
# 9408cf7834504ad99f14a26cda9c3169
msgid "Frictionless integral contact with a rigid obstacle brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:520
# 4358e807edc94ae4909170c091fdefe6
msgid "This function adds a frictionless contact condition with a rigid obstacle to the model, which is defined in an integral way. It is the direct approximation of an augmented Lagrangian formulation defined at the continuous level. The advantage should be a better scalability: the number of Newton iterations should be more or less independent of the mesh size. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the data ``dataname_obstacle`` being a signed distance to the obstacle (interpolated on a finite element method). ``multname_n`` should be a fem variable representing the contact stress. An inf-sup condition between ``multname_n`` and ``varname_u`` is required. The augmentation parameter ``dataname_r`` should be chosen in a range of acceptable values."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:535
#: ../source/userdoc/model_contact_friction.rst:615
# 817034417839413e8d71f7a883304e9e
# 16a03d1ea5234c958a0b196941efaa7d
msgid "Possible values for `option` is 1 for the non-symmetric Alart-Curnier augmented Lagrangian method, 2 for the symmetric one, 3 for the non-symmetric Alart-Curnier method with an additional augmentation and 4 for a new unsymmetric method. The default value is 1."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:540
#: ../source/userdoc/model_contact_friction.rst:620
# b6b1cde3d261469891864e1f22bdd7df
# 9ba13b60e95a4ccc9f76570e7e2e6d11
msgid "``mim`` represents of course the integration method. Note that it should be accurate enough to integrate efficiently the nonlinear terms involved."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:545
# 2a7bd14f80df48ff850794bc9465d355
msgid "Integral contact with a rigid obstacle brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:555
# 72af273a70b444b49122e14c04ed998e
msgid "This function adds a contact with friction condition with a rigid obstacle to the model, which is defined in an integral way. It is the direct approximation of an augmented Lagrangian formulation defined at the continuous level. The advantage should be a better scalability: the number of Newton iterations should be more or less independent of the mesh size. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the data ``dataname_obstacle`` being a signed distance to the obstacle (interpolated on a finite element method). ``multname_n`` should be a fem variable representing the contact stress. An inf-sup condition between ``multname_n`` and ``varname_u`` is required. The augmentation parameter ``dataname_r`` should be chosen in a range of acceptable values."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:570
#: ../source/userdoc/model_contact_friction.rst:707
# 0be5cf1b26dc4ea1995cf65ae8176e2f
# 7668e84cde0c461c8241c6802dc742cd
msgid "The parameter `dataname_friction_coeffs` contains the Coulomb friction coefficient and optionally an adhesional shear stress threshold and the tresca limit shear stress. For constant coefficients its size is from 1 to 3. For coefficients described on a finite element method, this vector contains a number of single values, value pairs or triplets equal to the number of the corresponding mesh_fem's basic dofs."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:577
# cca04bf20a544147a3e6fb86ea33af0e
msgid "Possible values for `option` is 1 for the non-symmetric Alart-Curnier augmented Lagrangian method, 2 for the symmetric one, 3 for the non-symmetric Alart-Curnier method with an additional augmentation and 4 for a new unsymmetric method. The default value is 1. Option 4, assumes pure Coulomb friction and ignores any adhesional stress and tresca limit coefficients."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:584
# b4994e4153eb43558b978a99b32a61c3
msgid "``dataname_alpha`` and ``dataname_wt`` are optional parameters to solve evolutionary friction problems. ``dataname_gamma`` and ``dataname_vt`` denote optional data for adding a parameter-dependent sliding velocity to the friction condition. ``mim`` represents of course the integration method. Note that it should be accurate enough to integrate efficiently the nonlinear terms involved."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:592
# 0adbf4287d1949bdb34799ef34534446
msgid "Frictionless integral contact between non-matching meshes brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:600
# 5ca36318b9024c958c04d9cdfc96c678
msgid "This function adds a frictionless contact condition between nonmatching meshes to the model, which is defined in an integral way. It is the direct approximation of an augmented Lagrangian formulation defined at the continuous level. The advantage should be a better scalability: the number of Newton iterations should be more or less independent of the mesh size. The condition is applied on the variables ``varname_u1`` and ``varname_u2`` on the boundaries corresponding to ``region1`` and ``region2``. ``multname_n`` should be a fem variable representing the contact stress. An inf-sup condition between ``multname_n`` and ``varname_u1`` and ``varname_u2`` is required. The augmentation parameter ``dataname_r`` should be chosen in a range of acceptable values."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:625
# 93eecca470a94c818cfd7994c669fcdd
msgid "Integral contact between non-matching meshes brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:634
# 49d5cb447a924812a783f0c7df7d563a
msgid "This function adds a contact with friction condition between nonmatching meshes to the model. This brick adds a contact which is defined in an integral way. It is the direct approximation of an augmented Lagrangian formulation defined at the continuous level. The advantage should be a better scalability: the number of Newton iterations should be more or less independent of the mesh size. The condition is applied on the variables ``varname_u1`` and ``varname_u2`` on the boundaries corresponding to ``region1`` and ``region2``. ``multname`` should be a fem variable representing the contact and friction stress. An inf-sup condition between ``multname`` and ``varname_u1`` and ``varname_u2`` is required. The augmentation parameter ``dataname_r`` should be chosen in a range of acceptable values."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:647
# d85557440fd94eb9a6804d9e1aba04d5
msgid "The parameter `dataname_friction_coeffs` contains the Coulomb friction coefficient and optionally an adhesional shear stress threshold and the tresca limit shear stress. For constant coefficients its size is from 1 to 3. For coefficients described on a finite element method on the same mesh as ``varname_u1``, this vector contains a number of single values, value pairs or triplets equal to the number of the corresponding mesh_fem's basic dofs."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:655
# 6fa11e0465a44b8286bdde24201bb783
msgid "Possible values for `option` is 1 for the non-symmetric Alart-Curnier augmented Lagrangian method, 2 for the symmetric one, 3 for the non-symmetric Alart-Curnier method with an additional augmentation and 4 for a new unsymmetric method. The default value is 1. ``dataname_alpha``, ``dataname_wt1`` and ``dataname_wt2`` are optional parameters to solve evolutionary friction problems. ``mim`` represents the integration method on the same mesh as ``varname_u1``. Note that it should be accurate enough to integrate efficiently the nonlinear terms involved."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:667
# 106fef88fd6d417a90e22a8fa0871da2
msgid "Frictionless penalized contact with a rigid obstacle brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:675
# 7b96dda9980447d1af1fe7469ad5fdfc
msgid "This function adds a frictionless penalized contact condition with a rigid obstacle to the model. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the data ``dataname_obstacle`` being a signed distance to the obstacle (interpolated on a finite element method). The penalization parameter ``dataname_r`` should be chosen large enough to prescribe an approximate non-penetration condition but not too large not to deteriorate too much the conditioning of the tangent system. ``dataname_n`` is an optional parameter used if option is 2. In that case, the penalization term is shifted by ``lambda_n`` (this allows the use of an Uzawa algorithm on the corresponding augmented dLagrangian formulation)"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:691
# 3ffb5eb55ea44c81b2d0bacc77cc6939
msgid "Penalized contact with a rigid obstacle brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:700
# 4bd4b3f85757459f8a9978695604b4b3
msgid "This function adds a penalized contact condition with Coulomb friction with a rigid obstacle to the model. The condition is applied on the variable ``varname_u`` on the boundary corresponding to ``region``. The rigid obstacle should be described with the data `dataname_obstacle` being a signed distance to the obstacle (interpolated on a finite element method)."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:714
# e037155ed450456397619858e15e6f70
msgid "The penalization parameter ``dataname_r`` should be chosen large enough to prescribe approximate non-penetration and friction conditions but not too large not to deteriorate too much the conditioning of the tangent system. ``dataname_lambda`` is an optional parameter used if ``option`` is 2. In that case, the penalization term is shifted by ``lambda`` (this allows the use of an Uzawa algorithm on the corresponding augmented Lagrangian formulation). ``dataname_alpha`` and ``dataname_wt`` are optional parameters to solve evolutionary friction problems."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:727
# d99a43b085424d92a96661fc60ffa1e7
msgid "Frictionless penalized contact between non-matching meshes brick"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:735
# 9dd6d3bca0144813a49e64f2126c8933
msgid "This function adds a penalized contact frictionless condition between nonmatching meshes to the model. The condition is applied on the variables ``varname_u1`` and ``varname_u2`` on the boundaries corresponding to ``region1` and ``region2`. The penalization parameter ``dataname_r`` should be chosen large enough to prescribe an approximate non-penetration condition but not too large not to deteriorate too much the conditionning of the tangent system. ``dataname_n`` is an optional parameter used if option is 2. In that case, the penalization term is shifted by ``lambda_n`` (this allows the use of an Uzawa algorithm on the corresponding augmented Lagrangian formulation)"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:749
# bb2f679319c24001a5f49458f3c2a4da
msgid "Penalized contact between non-matching meshes brick with friction"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:758
# 78dc140c54994b7da45eb913f401e051
msgid "This function adds a penalized contact condition with Coulomb friction between nonmatching meshes to the model. The condition is applied on the variables ``varname_u1`` and ``varname_u2`` on the boundaries corresponding to ``region1` and ``region2`. The penalization parameter ``dataname_r`` should be chosen large enough to prescribe an approximate non-penetration condition but not too large not to deteriorate too much the conditionning of the tangent system."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:767
# d740ee0624774ef7b0444817014fea4f
msgid "The parameter `dataname_friction_coeffs` contains the Coulomb friction coefficient and optionally an adhesional shear stress threshold and the tresca limit shear stress. For constant coefficients its size is from 1 to 3. For coefficients described on a finite element method on the same mesh as `varname_u1`, this vector contains a number of single values, value pairs or triplets equal to the number of the corresponding mesh_fem's basic dofs."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:775
# 5dd5cdc9354c43729055862198f0c296
msgid "``dataname_lambda`` is an optional parameter used if ``option`` is 2. In that case, the penalization term is shifted by ``lambda`` (this allows the use of an Uzawa algorithm on the corresponding augmented Lagrangian formulation) ``dataname_alpha``, ``dataname_wt1`` and ``dataname_wt2`` are optional parameters to solve evolutionary friction problems. ``mim`` represents the integration method on the same mesh as ``varname_u1``. Note that it should be accurate enough to integrate efficiently the nonlinear terms involved."
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:7
# 99b3b17326f548a3a6fc2160944ea56a
msgid "models"
msgstr ""

#: ../source/userdoc/model_contact_friction.rst:7
# 99b3b17326f548a3a6fc2160944ea56a
msgid "model bricks"
msgstr ""

