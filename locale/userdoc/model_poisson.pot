# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-15 02:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/userdoc/model_poisson.rst:14
# 10a8231d3e9f476f8a579febe5c8ebd0
msgid "Example of a complete Poisson problem"
msgstr ""

#: ../source/userdoc/model_poisson.rst:16
# 9f13e7c67b1c417fb82ec1d8a0c783e1
msgid "The following example is a part of the test program :file:`tests/laplacian_with_bricks.cc`. Construction of the mesh and finite element methods are omitted. It is assumed that a mesh is build and two finite element methods ``mf_u`` and ``mf_rhs`` are build on this mesh. Is is also assumed that ``NEUMANN_BOUNDARY_NUM`` and ``DIRICHLET_BOUNDARY_NUM`` are two valid boundary indices on that mesh. The code begins by the definition of three functions which are interpolated on ``mf_rhs`` in order to build the data for the source term, the Neumann condition and the Dirichlet condition. Follows the declaration of the model object, the addition of the bricks and the solving of the problem::"
msgstr ""

#: ../source/userdoc/model_poisson.rst:85
# fc0018daec944a64988a769504a62042
msgid "Note that the brick can be added in an arbitrary order."
msgstr ""

#: ../source/userdoc/model_poisson.rst:7
# 5f9f6b412c4d41649ef1a5ed918ac7b1
msgid "models"
msgstr ""

#: ../source/userdoc/model_poisson.rst:7
# 5f9f6b412c4d41649ef1a5ed918ac7b1
msgid "model bricks"
msgstr ""

