# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/gmm/sub-matrix.rst:11
# 9a6676d516ae4beeb4accbd118c2f120
msgid "sub-vectors and sub-matrices"
msgstr ""

#: ../source/gmm/sub-matrix.rst:13
# 281e01b2245f4b6e9e12dc20269ead8e
msgid "It is possible to obtain any sub-vector or sub-matrix of a fully interfaced object. There are four types of sub indices::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:17
# defe72a954924ead89c2117407aab95e
msgid "represents an interval whose first index is ``first`` and length is ``length`` ( for instance ``gmm::sub_interval(10, 3);`` represents the indices ``{10, 11, 12}``)."
msgstr ""

#: ../source/gmm/sub-matrix.rst:23
# f43cadaebaad4c95918ea0d3bd8722d5
msgid "represents also an interval in which one index over ``step`` is taken. ( for instance ``gmm::sub_slice(10, 3, 2);`` represents the indices ``{10, 12, 14}``)"
msgstr ""

#: ../source/gmm/sub-matrix.rst:29
# bb42f5ded65b4ed6bf1d47953135406f
msgid "represents the sub-index which is the collection of index contained in the container ``c``. For instance::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:36
# 8433bc436d5e417b9f34b66e6c782fb1
msgid "represents the indices ``{1, 3, 16}``."
msgstr ""

#: ../source/gmm/sub-matrix.rst:38
# fd4c57a6ad734120b90c74beba65158a
msgid "`VERY IMPORTANT` : the container ``c`` has to be `sorted` from the smaller index to the greater one (i.e. with increasing order) and no repetition is allowed."
msgstr ""

#: ../source/gmm/sub-matrix.rst:41
# 1478527c7d4141b99bfc8981db59baac
msgid "For unsorted index such as permutation, a special type of sub index is defined::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:45
# 736e7121c87b4a1aae790f1135c61c11
msgid "Some algorithms are a little bit slower with unsorted sub indices."
msgstr ""

#: ../source/gmm/sub-matrix.rst:47
# 187f7a8bac2041f29d812a15fc54940e
msgid "Now ``gmm::sub_vector(V, subi)`` gives a reference to a sub-vector::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:53
# cc48f6bcc49a46c1ace4b46d461155cd
msgid "prints to the standard output ``V[2], V[3]`` and ``V[4]``."
msgstr ""

#: ../source/gmm/sub-matrix.rst:55
# 141fa602fcdf448f9306c3849739e3e9
msgid "``gmm::sub_matrix(V, subi1, subi2)`` gives a reference to a sub-matrix. For instance::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:62
# f41f3d3e3582464ab474a4aa65ce9fee
msgid "prints to the output a sub-matrix. If the two sub-indices are equal, it is possible to omit the second. For instance::"
msgstr ""

#: ../source/gmm/sub-matrix.rst:68
# 8b337456dd534d349bd7d1e1f112720e
msgid "The reference on sub_matrix is writable if the corresponding matrix is writable (so you can copy on a sub_matrix, add sub-matrices ...)."
msgstr ""

#: ../source/gmm/sub-matrix.rst:71
# 5511759df17148c39e0fab056f39aac9
msgid "row and column of a matrix"
msgstr ""

#: ../source/gmm/sub-matrix.rst:73
# ee51fe81e8224ef79375258635b2dc8b
msgid "``gmm::mat_row(M, i)`` gives a (possibly writable) reference to the row ``i`` of matrix ``M``, and ``gmm::mat_col(M, i)``  gives a (possibly writable) reference to the column ``i``. It is not possible to access to the rows if ``M`` is a column matrix and to the columns if it is a row matrix. It is possible to use ``gmm::mat_const_row(M, i)`` and ``gmm::mat_const_col(M, i)`` to have constant references."
msgstr ""

