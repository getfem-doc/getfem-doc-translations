# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/python/cmdref_GlobalFunction.rst:8
msgid "GlobalFunction"
msgstr ""

#: getfem.GlobalFunction:1 of
msgid "GeFEM GlobalFunction object"
msgstr ""

#: getfem.GlobalFunction:3 of
msgid "Global function object is represented by three functions:"
msgstr ""

#: getfem.GlobalFunction:5 of
msgid "The function `val`."
msgstr ""

#: getfem.GlobalFunction:6 of
msgid "The function gradient `grad`."
msgstr ""

#: getfem.GlobalFunction:7 of
msgid "The function Hessian `hess`."
msgstr ""

#: getfem.GlobalFunction:9 of
msgid ""
"this type of function is used as local and global enrichment function. "
"The global function Hessian is an optional parameter (only for fourth "
"order derivative problems)."
msgstr ""

#: getfem.GlobalFunction:13 of
msgid "General constructor for GlobalFunction objects"
msgstr ""

#: getfem.GlobalFunction:15 of
msgid ""
"``GF = GlobalFunction('cutoff', int fn, scalar r, scalar r1, scalar r0)``"
" Create a cutoff global function."
msgstr ""

#: getfem.GlobalFunction:18 of
msgid ""
"``GF = GlobalFunction('crack', int fn)`` Create a near-tip asymptotic "
"global function for modelling cracks."
msgstr ""

#: getfem.GlobalFunction:21 of
msgid ""
"``GF = GlobalFunction('parser', string val[, string grad[, string "
"hess]])`` Create a global function from strings `val`, `grad` and `hess`."
" This function could be improved by using the derivation of the generic "
"assembly language ... to be done."
msgstr ""

#: getfem.GlobalFunction:26 of
msgid ""
"``GF = GlobalFunction('product', GlobalFunction F, GlobalFunction G)`` "
"Create a product of two global functions."
msgstr ""

#: getfem.GlobalFunction:29 of
msgid ""
"``GF = GlobalFunction('add', GlobalFunction gf1, GlobalFunction gf2)`` "
"Create a add of two global functions."
msgstr ""

#: getfem.GlobalFunction.char:1 of
msgid "Output a (unique) string representation of the GlobalFunction."
msgstr ""

#: getfem.GlobalFunction.char:3 of
msgid ""
"This can be used to perform comparisons between two different "
"GlobalFunction objects. This function is to be completed."
msgstr ""

#: getfem.GlobalFunction.display:1 of
msgid "displays a short summary for a GlobalFunction object."
msgstr ""

#: getfem.GlobalFunction.grad:1 of
msgid "Return `grad` function evaluation in `PTs` (column points)."
msgstr ""

#: getfem.GlobalFunction.grad:3 of
msgid "On return, each column of `GRADs` is of the form [Gx,Gy]."
msgstr ""

#: getfem.GlobalFunction.hess:1 of
msgid "Return `hess` function evaluation in `PTs` (column points)."
msgstr ""

#: getfem.GlobalFunction.hess:3 of
msgid "On return, each column of `HESSs` is of the form [Hxx,Hxy,Hyx,Hyy]."
msgstr ""

#: getfem.GlobalFunction.val:1 of
msgid "Return `val` function evaluation in `PTs` (column points)."
msgstr ""

