# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../source/python/cmdref_MeshLevelSet.rst:8
msgid "MeshLevelSet"
msgstr ""

#: getfem.MeshLevelSet:1 of
msgid "GeFEM MeshLevelSet object"
msgstr ""

#: getfem.MeshLevelSet:3 of
msgid ""
"General constructor for mesh_levelset objects. The role of this object is"
" to provide a mesh cut by a certain number of level_set. This object is "
"used to build conformal integration method (object mim and enriched "
"finite element methods (Xfem))."
msgstr ""

#: getfem.MeshLevelSet:9 of
msgid "General constructor for MeshLevelSet objects"
msgstr ""

#: getfem.MeshLevelSet:11 of
msgid ""
"``MLS = MeshLevelSet(Mesh m)`` Build a new MeshLevelSet object from a "
"Mesh and returns its handle."
msgstr ""

#: getfem.MeshLevelSet.adapt:1 of
msgid "Do all the work (cut the convexes with the levelsets)."
msgstr ""

#: getfem.MeshLevelSet.adapt:3 of
msgid ""
"To initialice the MeshLevelSet object or to actualize it when the value "
"of any levelset function is modified, one has to call this method."
msgstr ""

#: getfem.MeshLevelSet.add:1 of
msgid "Add a link to the LevelSet `ls`."
msgstr ""

#: getfem.MeshLevelSet.add:3 of
msgid ""
"Only a reference is kept, no copy is done. In order to indicate that the "
"linked Mesh is cut by a LevelSet one has to call this method, where `ls` "
"is an LevelSet object. An arbitrary number of LevelSet can be added."
msgstr ""

#: getfem.MeshLevelSet.add:8 of
msgid "**WARNING**"
msgstr ""

#: getfem.MeshLevelSet.add:10 of
msgid "The Mesh of `ls` and the linked Mesh must be the same."
msgstr ""

#: getfem.MeshLevelSet.char:1 of
msgid "Output a (unique) string representation of the MeshLevelSetn."
msgstr ""

#: getfem.MeshLevelSet.char:3 of
msgid ""
"This can be used to perform comparisons between two different "
"MeshLevelSet objects. This function is to be completed."
msgstr ""

#: getfem.MeshLevelSet.crack_tip_convexes:1 of
msgid ""
"Return the list of convex #id's of the linked Mesh on which have a tip of"
" any linked LevelSet's."
msgstr ""

#: getfem.MeshLevelSet.cut_mesh:1 of
msgid "Return a Mesh cut by the linked LevelSet's."
msgstr ""

#: getfem.MeshLevelSet.display:1 of
msgid "displays a short summary for a MeshLevelSet object."
msgstr ""

#: getfem.MeshLevelSet.levelsets:1 of
msgid "Return a list of references to the linked LevelSet's."
msgstr ""

#: getfem.MeshLevelSet.linked_mesh:1 of
msgid "Return a reference to the linked Mesh."
msgstr ""

#: getfem.MeshLevelSet.memsize:1 of
msgid "Return the amount of memory (in bytes) used by the MeshLevelSet."
msgstr ""

#: getfem.MeshLevelSet.nb_ls:1 of
msgid "Return the number of linked LevelSet's."
msgstr ""

#: getfem.MeshLevelSet.sup:1 of
msgid "Remove a link to the LevelSet `ls`."
msgstr ""

