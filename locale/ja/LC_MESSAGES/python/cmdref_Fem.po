# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-20 17:34+0900\n"
"PO-Revision-Date: 2018-07-16 07:16+0000\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/python/cmdref_Fem.rst:8
msgid "Fem"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:1
msgid "GeFEM Fem object"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:3
msgid "This object represents a finite element method on a reference element."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:6
msgid "General constructor for Fem objects"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:8
msgid ""
"``F = Fem('interpolated_fem', MeshFem mf, MeshIm mim, [ivec blocked_dof])`` "
"Build a special Fem which is interpolated from another MeshFem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:11
msgid ""
"Using this special finite element, it is possible to interpolate a given "
"MeshFem `mf` on another mesh, given the integration method `mim` that will "
"be used on this mesh."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:15
msgid "Note that this finite element may be quite slow, and eats much memory."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:18
msgid ""
"``F = Fem(string fem_name)`` The `fem_name` should contain a description of "
"the finite element method. Please refer to the getfem++ manual (especially "
"the description of finite element and integration methods) for a complete "
"reference. Here is a list of some of them:"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:24
msgid ""
"FEM_PK(n,k) : classical Lagrange element Pk on a simplex of dimension `n`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:26
msgid ""
"FEM_PK_DISCONTINUOUS(n,k[,alpha]) : discontinuous Lagrange element Pk on a "
"simplex of dimension `n`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:28
msgid ""
"FEM_QK(n,k) : classical Lagrange element Qk on quadrangles, hexahedrons etc."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:30
msgid ""
"FEM_QK_DISCONTINUOUS(n,k[,alpha]) : discontinuous Lagrange element Qk on "
"quadrangles, hexahedrons etc."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:32
msgid ""
"FEM_Q2_INCOMPLETE(n) : incomplete Q2 elements with 8 and 20 dof (serendipity"
" Quad 8 and Hexa 20 elements)."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:35
msgid ""
"FEM_PK_PRISM(n,k) : classical Lagrange element Pk on a prism of dimension "
"`n`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:37
msgid ""
"FEM_PK_PRISM_DISCONTINUOUS(n,k[,alpha]) : classical discontinuous Lagrange "
"element Pk on a prism."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:39
msgid ""
"FEM_PK_WITH_CUBIC_BUBBLE(n,k) : classical Lagrange element Pk on a simplex "
"with an additional volumic bubble function."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:42
msgid "FEM_P1_NONCONFORMING : non-conforming P1 method on a triangle."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:44
msgid ""
"FEM_P1_BUBBLE_FACE(n) : P1 method on a simplex with an additional bubble "
"function on face 0."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:46
msgid ""
"FEM_P1_BUBBLE_FACE_LAG : P1 method on a simplex with an additional lagrange "
"dof on face 0."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:48
msgid "FEM_PK_HIERARCHICAL(n,k) : PK element with a hierarchical basis."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:50
msgid "FEM_QK_HIERARCHICAL(n,k) : QK element with a hierarchical basis"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:52
msgid ""
"FEM_PK_PRISM_HIERARCHICAL(n,k) : PK element on a prism with a hierarchical "
"basis."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:54
msgid ""
"FEM_STRUCTURED_COMPOSITE(Fem f,k) : Composite Fem `f` on a grid with `k` "
"divisions."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:56
msgid ""
"FEM_PK_HIERARCHICAL_COMPOSITE(n,k,s) : Pk composite element on a grid with "
"`s` subdivisions and with a hierarchical basis."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:59
msgid ""
"FEM_PK_FULL_HIERARCHICAL_COMPOSITE(n,k,s) : Pk composite element with `s` "
"subdivisions and a hierarchical basis on both degree and subdivision."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:62
msgid "FEM_PRODUCT(A,B) : tensorial product of two polynomial elements."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:64
msgid ""
"FEM_HERMITE(n) : Hermite element P3 on a simplex of dimension `n = 1, 2, 3`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:66
msgid "FEM_ARGYRIS : Argyris element P5 on the triangle."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:68
msgid ""
"FEM_HCT_TRIANGLE : Hsieh-Clough-Tocher element on the triangle (composite P3"
" element which is C1), should be used with IM_HCT_COMPOSITE() integration "
"method."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:72
msgid ""
"FEM_QUADC1_COMPOSITE : Quadrilateral element, composite P3 element and C1 "
"(16 dof)."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:74
msgid ""
"FEM_REDUCED_QUADC1_COMPOSITE : Quadrilateral element, composite P3 element "
"and C1 (12 dof)."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:76
msgid ""
"FEM_RT0(n) : Raviart-Thomas element of order 0 on a simplex of dimension "
"`n`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:78
msgid ""
"FEM_NEDELEC(n) : Nedelec edge element of order 0 on a simplex of dimension "
"`n`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem:81
msgid ""
"Of course, you have to ensure that the selected fem is compatible with the "
"geometric transformation: a Pk fem has no meaning on a quadrangle."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.base_value:1
msgid "Evaluate all basis functions of the FEM at point `p`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.base_value:3
#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.grad_base_value:3
msgid "`p` is supposed to be in the reference convex!"
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.char:1
msgid "Ouput a (unique) string representation of the Fem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.char:3
msgid ""
"This can be used to perform comparisons between two different Fem objects."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.dim:1
msgid "Return the dimension (dimension of the reference convex) of the Fem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.display:1
msgid "displays a short summary for a Fem object."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.estimated_degree:1
msgid "Return an estimation of the polynomial degree of the Fem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.estimated_degree:3
msgid "This is an estimation for fem which are not polynomials."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.grad_base_value:1
msgid "Evaluate the gradient of all base functions of the Fem at point `p`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.hess_base_value:1
msgid "Evaluate the Hessian of all base functions of the Fem at point `p`."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.hess_base_value:3
msgid "`p` is supposed to be in the reference convex!."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.index_of_global_dof:1
msgid ""
"Return the index of global dof for special fems such as interpolated fem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.is_equivalent:1
msgid "Return 0 if the Fem is not equivalent."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.is_equivalent:3
msgid ""
"Equivalent Fem are evaluated on the reference convex. This is the case of "
"most classical Fem's."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.is_lagrange:1
msgid "Return 0 if the Fem is not of Lagrange type."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.is_polynomial:1
msgid "Return 0 if the basis functions are not polynomials."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.nbdof:1
msgid "Return the number of dof for the Fem."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.nbdof:3
msgid ""
"Some specific Fem (for example 'interpolated_fem') may require a convex "
"number `cv` to give their result. In most of the case, you can omit this "
"convex number."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.poly_str:1
msgid ""
"Return the polynomial expressions of its basis functions in the reference "
"convex."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.poly_str:4
msgid ""
"The result is expressed as a tuple of strings. Of course this will fail on "
"non-polynomial Fem's."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.pts:1
msgid "Get the location of the dof on the reference element."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.pts:3
msgid ""
"Some specific Fem may require a convex number `cv` to give their result (for"
" example 'interpolated_fem'). In most of the case, you can omit this convex "
"number."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.target_dim:1
msgid "Return the dimension of the target space."
msgstr ""

#: ../../../../../../../usr/local/lib/python2.7/dist-packages/getfem/getfem.pydocstring
#: of getfem.Fem.target_dim:3
msgid "The target space dimension is usually 1, except for vector Fem."
msgstr ""
