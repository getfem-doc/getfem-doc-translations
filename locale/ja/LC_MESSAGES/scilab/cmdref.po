# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-16 04:26+0900\n"
"PO-Revision-Date: 2018-07-16 07:01+0000\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:13
msgid "Command reference"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:15
msgid ""
"Please remember that this documentation is not self contained. You should in"
" particular refer to the `user documentation`_ to have a more extensive "
"description of the structures algorithms and concepts used."
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:21
msgid ""
"The expected type of each function argument is indicated in this reference. "
"Here is a list of these types:"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:25
msgid "`int`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:25
msgid "integer value"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:26
msgid "`hobj`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:26
msgid "a handle for any GetFEM++ object"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:27
msgid "`scalar`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:27
msgid "scalar value"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:28
msgid "`string`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:28
msgid "string"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:29
msgid "`ivec`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:29
msgid "vector of integer values"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:30
msgid "`vec`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:30
msgid "vector"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:31
msgid "`imat`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:31
msgid "matrix of integer values"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:32
msgid "`mat`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:32
msgid "matrix"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:33
msgid "`spmat`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:33
msgid ""
"sparse matrix (both matlab native sparse matrices, and GetFEM sparse "
"matrices)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:35
msgid "`precond`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:35
msgid "GetFEM preconditioner object"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:36
msgid "`mesh mesh`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:36
msgid "object descriptor (or gfMesh object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:37
msgid "`mesh_fem`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:37
msgid "mesh fem object descriptor (or gfMeshFem object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:38
msgid "`mesh_im`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:38
msgid "mesh im object descriptor (or gfMeshIm object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:39
msgid "`mesh_im_data`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:39
msgid "mesh im data object descriptor (or gfMeshImData object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:40
msgid "`mesh_slice`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:40
msgid "mesh slice object descriptor (or gfSlice object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:41
msgid "`cvstruct`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:41
msgid "convex structure descriptor (or gfCvStruct object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:42
msgid "`geotrans`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:42
msgid "geometric transformation descriptor (or gfGeoTrans object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:44
msgid "`fem`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:44
msgid "fem descriptor (or gfFem object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:45
msgid "`eltm`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:45
msgid "elementary matrix descriptor (or gfEltm object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:46
msgid "`integ`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:46
msgid "integration method descriptor (or gfInteg object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:47
msgid "`model`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:47
msgid "model descriptor (or gfModel object)"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:48
msgid "`global_function`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:48
msgid "global function descriptor"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:49
msgid "`mesher_object`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:49
msgid "mesher object descriptor"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:50
msgid "`cont_struct`"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:50
msgid "continuation-structure descriptor"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:53
msgid ""
"Arguments listed between square brackets are optional. Lists between braces "
"indicate that the argument must match one of the elements of the list. For "
"example::"
msgstr ""

#: ../../getfem/doc/sphinx/source/scilab/cmdref.rst:57
msgid ""
"means that the dummy function takes two or three arguments, its first being "
"an integer value, the second a string which is either 'foo' or 'bar', and a "
"third optional argument. It returns two values (with the usual matlab "
"meaning, i.e. the caller can always choose to ignore them)."
msgstr ""
