# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-26 14:24+0900\n"
"PO-Revision-Date: 2018-07-16 07:05+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/userdoc/interNMM.rst:10
msgid "Interpolation of a finite element method on non-matching meshes"
msgstr "非適合メッシュ上の有限要素法の補間"

#: ../source/userdoc/interNMM.rst:12
msgid ""
"A special finite element method is defined in "
":file:`getfem/getfem_interpolated_fem.h` which is not a real finite element "
"method, but a pseudo-fem which interpolates a finite element method defined "
"on another mesh. If you need to assemble a matrix with finite element "
"methods defined on different meshes, you may use the \"interpolated fem\" "
"for that purpose::"
msgstr ""
"特殊な有限要素法は、 :file:`getfem/getfem_interpolated_fem.h` "
"で定義されています。これは実際の有限要素法ではありませんが、別のメッシュで定義された有限要素法を補間する擬似有限要素法です。異なるメッシュで定義された有限要素法を使用して行列をアセンブルする必要がある場合は、\"interpolated"
" fem\" を使用することができます。"

#: ../source/userdoc/interNMM.rst:21
msgid ""
"Because each base function of the finite element method has to be "
"interpolated, such a computation can be a heavy procedure. By default, the "
"interpolated fem object store the interpolation data."
msgstr ""
"有限要素法の各基底関数は補間されなければならないので、そのような計算は重い手順である可能性があります。デフォルトでは、補間された有限要素法オブジェクトは補間データを格納します。"

#: ../source/userdoc/interNMM.rst:25
msgid ""
"The interpolation is made on each Gauss point of the integration methods of "
"``mim``, so that you have to use these integration methods in the assembling"
" procedures."
msgstr "補間は積分法 ``mim`` の各Gauss点で行われるので、構築手順でこれらの積分法を使わなければなりません。"

#: ../source/userdoc/interNMM.rst:29
msgid ""
"For instance if you need to compute the mass matrix between two different "
"finite element methods defined on two different meshes, this is an example "
"of code which interpolate the second FEM. on the mesh of the first FEM., "
"assuming that ``mf`` describes the finite element method and ``mim`` is the "
"chosen integration method::"
msgstr ""
"たとえば、2つの異なるメッシュで定義された2つの異なる有限要素法の間の質量行列を計算する必要がある場合、これは2番目の有限要素法を補間するコードの例です。"
" ``mf`` が有限要素法を記述し、 ``mim`` が選択された積分法であると仮定して、最初の有限要素法メッシュ上で次の関数を実行します。"

#: ../source/userdoc/interNMM.rst:41
msgid ""
"The object pointed by ``ifem`` contains all the information concerning the "
"interpolation. It could use a lot of memory. As pfem is a smart pointer (a "
"boost `intrusive_ptr "
"<http://www.boost.org/libs/smart_ptr/intrusive_ptr.html>`_), the "
"interpolated fem will be automatically destroyed when the last pointer on it"
" is destroyed. To obtain a better accuracy, it is better to refine the "
"integration method (with ``IM_STRUCTURED_COMPOSITE`` for instance) rather "
"than increase its order."
msgstr ""
"``ifem`` が指すオブジェクトには、補間に関するすべての情報が含まれています。それは多くのメモリを使用する可能性があります。 "
"pfemはスマートポインタ（boost `intrusive_ptr "
"<http://www.boost.org/libs/smart_ptr/intrusive_ptr.html>`_ "
"）であるため、補間された有限要素法は、最後のポインタが破棄されると自動的に破棄されます。より正確な精度を得るには、その次数を増やすのではなく、積分法を（たとえば、"
" ``IM_STRUCTURED_COMPOSITE`` を使って）改良する方が良いでしょう。"

#: ../source/userdoc/interNMM.rst:51
msgid "mixed methods with different meshes"
msgstr "異なるメッシュの混合法"

#: ../source/userdoc/interNMM.rst:52 ../source/userdoc/interNMM.rst:57
msgid "to be described ..."
msgstr "説明する..."

#: ../source/userdoc/interNMM.rst:56
msgid "mortar methods"
msgstr "モルタル法"
