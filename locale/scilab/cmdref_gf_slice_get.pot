# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/scilab/cmdref_gf_slice_get.rst:8
# 12066780cbda4be6acf73e352adcd37a
msgid "gf_slice_get"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:10
# be32d9ec3d4641f89fb3909264c27e3c
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:33
# 94270a3012f44f1ab2e34ab3283a2128
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:36
# 9cb0850b68494074a2604f9b3885d645
msgid "General function for querying information about slice objects."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:39
# 2146f924f4ae4ba9a205c9c348c1efdd
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:43
# ff14de546c414dfc93eac81802095e13
msgid "``d = gf_slice_get(slice S, 'dim')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:45
# 4a12893fc0634e1ab9d9d4112b451cf6
msgid "Return the dimension of the slice (2 for a 2D mesh, etc..)."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:48
# a363190b10ca4f148755f510579db4cb
msgid "``a = gf_slice_get(slice S, 'area')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:50
# 8739f9bbb6ce4e86b9f002de3d0e034e
msgid "Return the area of the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:53
# 7ccbcfd5ef3a46ea8bf34186c5b05e19
msgid "``CVids = gf_slice_get(slice S, 'cvs')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:55
# 4072a2409ba94778953da4bb1f19a196
msgid "Return the list of convexes of the original mesh contained in the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:58
# 47529bb08450423099293df984536e60
msgid "``n = gf_slice_get(slice S, 'nbpts')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:60
# dfb74aba51a1412a8312d73892ede3b9
msgid "Return the number of points in the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:63
# 0d691816088c459699692c57450ad78f
msgid "``ns = gf_slice_get(slice S, 'nbsplxs'[, int dim])``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:65
# 76c9a4c1b57d4cffa31179f7e5cc4372
msgid "Return the number of simplexes in the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:67
# 99eab826a6e3410da5e723e76fcadf58
msgid "Since the slice may contain points (simplexes of dim 0), segments (simplexes of dimension 1), triangles etc., the result is a vector of size gf_slice_get(slice S, 'dim')+1, except if the optional argument <literal>dim</literal> is used."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:73
# 11813278d4d34be8bfc87a76223a8f00
msgid "``P = gf_slice_get(slice S, 'pts')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:75
# 7ade49982cab4030b109f5f9f45981f1
msgid "Return the list of point coordinates."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:78
# b873be2859864be4be62efee2e7e910e
msgid "``{S, CV2S} = gf_slice_get(slice S, 'splxs',int dim)``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:80
# ff2d390d2f7a4338b1b4957332dda69d
msgid "Return the list of simplexes of dimension <literal>dim</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:82
# 6386c6108b4f44a18efefbd81a47e787
msgid "On output, S has 'dim+1' rows, each column contains the point numbers of a simplex.  The vector <literal>CV2S</literal> can be used to find the list of simplexes for any convex stored in the slice. For example 'S(:,CV2S(4):CV2S(5)-1)' gives the list of simplexes for the fourth convex."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:89
# aad4190ea5d44abfb61e3469deb27db3
msgid "``{P, E1, E2} = gf_slice_get(slice S, 'edges')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:91
# e53bf3aa1b8741038a36ca7f1cb6b83e
msgid "Return the edges of the linked mesh contained in the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:93
# 2e6ee876dfc74d7e995c64c3fa93516f
msgid "<literal>P</literal> contains the list of all edge vertices, <literal>E1</literal> contains the indices of each mesh edge in <literal>P</literal>, and <literal>E2</literal> contains the indices of each \"edges\" which is on the border of the slice. This function is useless except for post-processing purposes."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:99
# 31a943e9c29143799d286294a5ba07e9
msgid "``Usl = gf_slice_get(slice S, 'interpolate_convex_data', mat Ucv)``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:101
# 9f43ee5b0b6744deb784439b94bd889e
msgid "Interpolate data given on each convex of the mesh to the slice nodes."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:103
# e3aef5f8dc97437fa8535a92b7a92054
msgid "The input array <literal>Ucv</literal> may have any number of dimensions, but its last dimension should be equal to gf_mesh_get(mesh M, 'max cvid')."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:106
# 7735f82aa1b84371a88841553cc13cc1
msgid "Example of use: gf_slice_get(slice S, 'interpolate_convex_data', gf_mesh_get(mesh M, 'quality'))."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:109
# b4d322fe5c1544a787b85a75f0aa82b3
msgid "``m = gf_slice_get(slice S, 'linked mesh')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:111
# 8760e0eecd2f4efea8ecff0b840c5bb8
msgid "Return the mesh on which the slice was taken."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:114
# ea3ed3301f6d40c4a1ec86ad917fe656
msgid "``m = gf_slice_get(slice S, 'mesh')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:116
# e2600d7aeb6f47bdbf68cbb37202985b
msgid "Return the mesh on which the slice was taken (identical to 'linked mesh')"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:120
# 8df36bbebaed481d9ba440432f7e8c40
msgid "``z = gf_slice_get(slice S, 'memsize')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:122
# b1fea83ac07540dd9c47b53211d610b7
msgid "Return the amount of memory (in bytes) used by the slice object."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:125
# 4584b1af117b40b3bdce191e522e4f9a
msgid "``gf_slice_get(slice S, 'export to vtk', string filename, ...)``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:127
# 4e74e202a178421ba4906f3eda9800be
msgid "Export a slice to VTK."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:129
#: ../source/scilab/cmdref_gf_slice_get.rst:160
# fb53147763004e8584f876e8ba32947c
# 7d9ad2b5a8f84cd48dc61d1cca900a2f
msgid "Following the <literal>filename</literal>, you may use any of the following options:"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:131
#: ../source/scilab/cmdref_gf_slice_get.rst:163
# d3def955a9174889b65250f160de455b
# 58b785a5db714569a4ed5ea0712804eb
msgid "if 'ascii' is not used, the file will contain binary data (non portable, but fast)."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:133
#: ../source/scilab/cmdref_gf_slice_get.rst:165
# f26fc4e89fbf420dbda7330aefb4a452
# 8a7254fbff6d453ab335552622f973d2
msgid "if 'edges' is used, the edges of the original mesh will be written instead of the slice content."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:136
#: ../source/scilab/cmdref_gf_slice_get.rst:170
#: ../source/scilab/cmdref_gf_slice_get.rst:182
# 4f57d60c0d7a4f0c98893f2f07377267
# 45d9d524bd474464b36391e18dbcb81d
# 6b1a923d1f5e4953bec6fdc8ca2b2b10
msgid "More than one dataset may be written, just list them. Each dataset consists of either:"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:139
#: ../source/scilab/cmdref_gf_slice_get.rst:173
# 6944fa99d9d94d1a9b6f6da246934d44
# a866af52359a4fefbb753c5e2b348ce6
msgid "a field interpolated on the slice (scalar, vector or tensor), followed by an optional name."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:141
#: ../source/scilab/cmdref_gf_slice_get.rst:175
# 1948e8a60f6a413c832f9ba7e976d5ab
# d4713700912c4199b76e19aeecbfc6dd
msgid "a mesh_fem and a field, followed by an optional name."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:143
# 8136ba98c9224411bf6a0f56c380c42c
msgid "Examples:"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:145
# 2fccf4606a4145529e4b20c4033cddf0
msgid "gf_slice_get(slice S, 'export to vtk', 'test.vtk', Usl, 'first_dataset', mf, U2, 'second_dataset')"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:147
# fbd8645934d74da0a9929107ed75505b
msgid "gf_slice_get(slice S, 'export to vtk', 'test.vtk', 'ascii', mf,U2)"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:148
# 634d61b63e02478cb4953ab7d6c369e6
msgid "gf_slice_get(slice S, 'export to vtk', 'test.vtk', 'edges', 'ascii', Uslice)"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:151
# 1ef5b34726f440ffaeaed7f8d1c8e835
msgid "``gf_slice_get(slice S, 'export to pov', string filename)``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:153
# efab82ab9d0d401295d8c2b5ff388019
msgid "Export a the triangles of the slice to POV-RAY."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:156
# 34de651b4a6543328e1938da96f3016f
msgid "``gf_slice_get(slice S, 'export to dx', string filename, ...)``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:158
# 3612d40c0d1343e0a7f050b83c253b61
msgid "Export a slice to OpenDX."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:167
# 4ee82dc9434c4c788d0ad4737e491b56
msgid "if 'append' is used, the opendx file will not be overwritten, and the new data will be added at the end of the file."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:178
# f24679e39d214ea883ed7044db181085
msgid "``gf_slice_get(slice S, 'export to pos', string filename[, string name][[,mesh_fem mf1], mat U1, string nameU1[[,mesh_fem mf1], mat U2, string nameU2,...])``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:180
# 726b3e7826084d23bc187fc393537238
msgid "Export a slice to Gmsh."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:185
# adca4535f2e24631a16a8d37b4515a14
msgid "a field interpolated on the slice (scalar, vector or tensor)."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:186
# c98152f01627435cb87a6a4f36c13d2e
msgid "a mesh_fem and a field."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:189
# 974315bea69b45a3abb7c63cec0055a2
msgid "``s = gf_slice_get(slice S, 'char')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:191
# 2ea002bc89cd426a8f1343e8e86c8031
msgid "Output a (unique) string representation of the slice."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:193
# ae84df9a249b41a7a04d95e7dc33f2a8
msgid "This can be used to perform comparisons between two different slice objects. This function is to be completed."
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:199
# a501ccf16bb9464299a293dad1297c7f
msgid "``gf_slice_get(slice S, 'display')``"
msgstr ""

#: ../source/scilab/cmdref_gf_slice_get.rst:201
# e68f572e560c4437994a80f947a80b1f
msgid "displays a short summary for a slice object."
msgstr ""

