# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/scilab/cmdref_gf_integ.rst:8
# 7a58591d033648528290f8d96d638314
msgid "gf_integ"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:10
# 55a2b433a3e8453c9d1a221aca66b340
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:16
# a236d699a22f42e58b0773c790956481
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:19
# f087f11eb96149ea86d733359f92c951
msgid "General constructor for integ objects."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:21
# 9a201a581777409fb26b0b786e98bb16
msgid "General object for obtaining handles to various integrations methods on convexes (used when the elementary matrices are built)."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:25
# 1ccfdc4d36f64bb796091df2617ae959
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:29
# 6416a23dba174b2c80b6877ac814c920
msgid "``I = gf_integ(string method)``"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:31
# 7a52e3c459fd41b09d416246e575800c
msgid "Here is a list of some integration methods defined in getfem++ (see the description of finite element and integration methods for a complete reference):"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:35
# 7fb79ae40ce64815a90b6f300ff754a4
msgid "IM_EXACT_SIMPLEX(n) : Exact integration on simplices (works only with linear geometric transformations and PK fem's)."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:38
# f3332c62c7304bc08015af6929668106
msgid "IM_PRODUCT(A,B) : Product of two integration methods."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:40
# 4357a690babd45f4b2d5fbf23cef666e
msgid "IM_EXACT_PARALLELEPIPED(n) : Exact integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:42
# 3d4a78d982fb462499517d9531e003d1
msgid "IM_EXACT_PRISM(n) : Exact integration on prisms."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:44
# ed6d0f21a38144b597eb8e627d74a39b
msgid "IM_GAUSS1D(k) : Gauss method on the segment, order <literal>k=1,3,...,99</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:46
# 60eda7ca5f7c475d8449b684c0620108
msgid "IM_NC(n,k) : Newton-Cotes approximative integration on simplexes, order <literal>k</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:48
# 284476e4499543c8999ebeddf4c169d4
msgid "IM_NC_PARALLELEPIPED(n,k) : Product of Newton-Cotes integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:50
# df6897bd93bf4da7acb450e972aaccb9
msgid "IM_NC_PRISM(n,k) : Product of Newton-Cotes integration on prisms."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:52
# bc5cc9a4e1254a23ab8061f0aefa5613
msgid "IM_GAUSS_PARALLELEPIPED(n,k) : Product of Gauss1D integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:54
# 48ea559daf194b82b5b0d2907778efca
msgid "IM_TRIANGLE(k) : Gauss methods on triangles <literal>k=1,3,5,6,7,8,9,10,13,17,19</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:56
# 419ccd25226b4a82ae3045e79416db2d
msgid "IM_QUAD(k) : Gauss methods on quadrilaterons <literal>k=2,3,5, ...,17</literal>. Note that IM_GAUSS_PARALLELEPIPED should be prefered for QK fem's."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:59
# 851fceeaabc74ad898115350865362ca
msgid "IM_TETRAHEDRON(k) : Gauss methods on tetrahedrons <literal>k=1,2,3,5,6 or 8</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:61
# 9bf778c2302f4e16b4fd280a5d442734
msgid "IM_SIMPLEX4D(3) : Gauss method on a 4-dimensional simplex."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:63
# a4735a52b6594c6da311d1ef1aed7c7e
msgid "IM_STRUCTURED_COMPOSITE(im,k) : Composite method on a grid with <literal>k</literal> divisions."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:65
# 2cef38f7e6f04bbe81a6ee99802a58a0
msgid "IM_HCT_COMPOSITE(im) : Composite integration suited to the HCT composite finite element."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:68
# e975beef252a44bca9abbd0800c36197
msgid "Example:"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:70
# 1567fd5a00b54468b2a9a38fb56a3328
msgid "I = gf_integ('IM_PRODUCT(IM_GAUSS1D(5),IM_GAUSS1D(5))')"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:72
# 85e19371358a42d89c513c5081d29ffd
msgid "is the same as:"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:74
# 4828414d4ca84a359d3fdb93c23f9fed
msgid "I = gf_integ('IM_GAUSS_PARALLELEPIPED(2,5)')"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:76
# a7fa4ccd55b04e4f9971029d1e35fb91
msgid "Note that 'exact integration' should be avoided in general, since they only apply to linear geometric transformations, are quite slow, and subject to numerical stability problems for high degree fem's."
msgstr ""

