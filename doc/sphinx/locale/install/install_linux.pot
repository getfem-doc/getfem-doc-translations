# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-10 11:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install/install_linux.rst:10
msgid "How to install from sources on Linux"
msgstr ""

#: ../source/install/install_linux.rst:12
msgid "See `download and install <../download.html>`_ page for general requirements and the download of the last stable version of |gf|."
msgstr ""

#: ../source/install/install_linux.rst:17
msgid "Download sources"
msgstr ""

#: ../source/install/install_linux.rst:19
msgid "There are two ways to get |gf|, either as a compressed package for the stable release (file getfem-|version|.tar.gz downloadable on the page `download and install <../download.html>`_)  or via anonymous git access (current unstable version under development)."
msgstr ""

#: ../source/install/install_linux.rst:22
msgid "You can get the last stable version directly with"
msgstr ""

#: ../source/install/install_linux.rst:24
msgid "download package:"
msgstr ""

#: ../source/install/install_linux.rst:26
msgid "$ wget http://download-mirror.savannah.gnu.org/releases/getfem/stable/getfem-|version|.tar.gz"
msgstr ""

#: ../source/install/install_linux.rst:28
msgid "unpack:"
msgstr ""

#: ../source/install/install_linux.rst:30
msgid "$ tar xzf getfem-|version|.tar.gz"
msgstr ""

#: ../source/install/install_linux.rst:32
msgid "and go to the root directory of |gf|:"
msgstr ""

#: ../source/install/install_linux.rst:34
msgid "$ cd getfem-|version|/"
msgstr ""

#: ../source/install/install_linux.rst:36
msgid "The current git version is:"
msgstr ""

#: ../source/install/install_linux.rst:38
msgid "checkout over GIT protocol::"
msgstr ""

#: ../source/install/install_linux.rst:42
msgid "go to the root directory of |gf|::"
msgstr ""

#: ../source/install/install_linux.rst:46
msgid "and run ``autogen.sh`` script (you need m4, automake and libtool) ::"
msgstr ""

#: ../source/install/install_linux.rst:52
msgid "Compiling"
msgstr ""

#: ../source/install/install_linux.rst:54
msgid "Configure with::"
msgstr ""

#: ../source/install/install_linux.rst:58
msgid "then start the compilation with::"
msgstr ""

#: ../source/install/install_linux.rst:62
msgid "and finally install with::"
msgstr ""

#: ../source/install/install_linux.rst:66
msgid "You can find some additional help on how to build the Matlab interface on Ubuntu on the page of `Mirko Windhoff <http://windhoff.net/wiki/how_to/build_getfem_matlab_toolbox_on_ubuntu_linux>`_."
msgstr ""

#: ../source/install/install_linux.rst:71
msgid "Configure Options"
msgstr ""

#: ../source/install/install_linux.rst:73
msgid "If you want to use a different compiler than the one chosen automatically by the ``./configure`` script, just specify its name on the command line::"
msgstr ""

#: ../source/install/install_linux.rst:79
msgid "If you want to build one of the interfaces, use::"
msgstr ""

#: ../source/install/install_linux.rst:85
msgid "depending on the interface you want to build. Note that the python interface is build by default."
msgstr ""

#: ../source/install/install_linux.rst:88
msgid "If you want to use a specific **BLAS** library, you may have to supply the necessary link flags and libs to the configure script with::"
msgstr ""

#: ../source/install/install_linux.rst:94
msgid "for example::"
msgstr ""

#: ../source/install/install_linux.rst:98
msgid "If you want to set the prefix directory where to install the library you can use the ``--prefix`` option (the default prefix directory is ``/usr/local``)::"
msgstr ""

#: ../source/install/install_linux.rst:104
msgid "By default, the python interface is built and for python 3 version. You can disable the built of the python interface with::"
msgstr ""

#: ../source/install/install_linux.rst:108
msgid "Note that there are other options to the configure script. A ``./configure --help`` will list them."
msgstr ""

#: ../source/install/install_linux.rst:114
msgid "On linux/x86_64 platforms, a mandatory option when building |gf| (and any static library linked to them) is the ``--with-pic`` option of their ``./configure`` script."
msgstr ""

#: ../source/install/install_linux.rst:121
msgid "Scilab interface"
msgstr ""

#: ../source/install/install_linux.rst:123
msgid "The installation of the |sci| |gf| toolbox can be somewhat tricky, since it combines a C++ compiler, libraries and |sci| interaction. In case of troubles with a non-GNU compiler, gcc/g++ (>= 8.0) should be a safe solution."
msgstr ""

#: ../source/install/install_linux.rst:129
msgid "The minimal |sci| release is the 5.2.2."
msgstr ""

#: ../source/install/install_linux.rst:131
#: ../source/install/install_linux.rst:175
msgid "you should have built the |gf| static library (i.e. do not use ``./configure --disable-static`` when building |gf|). On linux/x86_64 platforms, a mandatory option when building |gf| and |gfi| toolbox (and any static library linked to them) is the ``--with-pic`` option of their ``./configure`` script."
msgstr ""

#: ../source/install/install_linux.rst:136
msgid "you should have use the ``--enable-scilab`` option to configure the |gf| sources (i.e. ``./configure --enable-scilab`` ...)"
msgstr ""

#: ../source/install/install_linux.rst:138
msgid "You may also use ``--with-scilab-toolbox-dir=toolbox_dir`` to change the default toolbox installation directory (``gfdest_dir/getfem_toolbox``). Use ``./configure --help`` for more options."
msgstr ""

#: ../source/install/install_linux.rst:141
msgid "With this, since the Scilab interface is contained into the |gf| sources (in the directory interface/src) you can compile both the |gf| library and the Scilab interface by ::"
msgstr ""

#: ../source/install/install_linux.rst:145
msgid "Optionally, you can install it with ::"
msgstr ""

#: ../source/install/install_linux.rst:149
#: ../source/install/install_linux.rst:220
msgid "If you want to use a different compiler than the one chosen automatically by the ``./configure`` script, just specify its name on the command line: ``./configure CXX=mycompiler``."
msgstr ""

#: ../source/install/install_linux.rst:152
msgid "Once getfem is compiled:"
msgstr ""

#: ../source/install/install_linux.rst:154
msgid "Go to the Scilab GetFEM interface install directory (interface/src/scilab if the installation is not done)"
msgstr ""

#: ../source/install/install_linux.rst:156
msgid "launch Scilab"
msgstr ""

#: ../source/install/install_linux.rst:158
msgid "load the GetFEM toolbox with: ``exec loader.sce;``"
msgstr ""

#: ../source/install/install_linux.rst:161
msgid "You can try to launch a demo with: ``cd demos;`` ``exec demo_static_contact.sce;``"
msgstr ""

#: ../source/install/install_linux.rst:166
msgid "Octave interface"
msgstr ""

#: ../source/install/install_linux.rst:168
msgid "You have first to install |octv| with the developpement package"
msgstr ""

#: ../source/install/install_linux.rst:172
msgid "You have first to install |octv|, minimal release 4.1.1 with the developpement package such that the command ``mkoctfile`` is available (liboctave-dev package on Debian, for instance)"
msgstr ""

#: ../source/install/install_linux.rst:180
msgid "you should have use the ``--enable-octave`` option to configure the |gf| sources (i.e. ``./configure --enable-octave`` ...)"
msgstr ""

#: ../source/install/install_linux.rst:184
msgid "The last step is to add the path to the toolbox in the octave path:"
msgstr ""

#: ../source/install/install_linux.rst:186
msgid "you can put ``addpath('toolbox_dir', '-begin')`` to your ``$HOME/.octaverc`` file"
msgstr ""

#: ../source/install/install_linux.rst:187
msgid "you can simply use the ``addpath`` command in the octave command line."
msgstr ""

#: ../source/install/install_linux.rst:190
msgid "Matlab interface"
msgstr ""

#: ../source/install/install_linux.rst:192
msgid "The installation of the |gfi| toolbox can be somewhat tricky, since it combines a C++ compiler, libraries and |Mlab| interaction... In case of troubles with a non-GNU compiler, gcc/g++ (>= 8.0) should be a safe solution."
msgstr ""

#: ../source/install/install_linux.rst:199
msgid "you should have built the |gf| static library (i.e. do not use ``./configure --disable-static`` when building |gf|). On linux/x86_64 platforms, a mandatory option when building |gf| and |gfi| (and any static library linked to them) is the ``--with-pic`` option of their ``./configure`` script."
msgstr ""

#: ../source/install/install_linux.rst:204
msgid "you should have use the --enable-matlab option to configure the |gf| sources (i.e. ./configure --enable-matlab ...)"
msgstr ""

#: ../source/install/install_linux.rst:206
msgid "You may also use ``--with-matlab-toolbox-dir=toolbox_dir`` to change the default toolbox installation directory (``gfdest_dir/getfem_toolbox``). Use ``./configure --help`` for more options."
msgstr ""

#: ../source/install/install_linux.rst:209
msgid "With this, since the Matlab interface is contained into the |gf| sources (in the directory interface/src) you can compile both the |gf| library and the Matlab interface by ::"
msgstr ""

#: ../source/install/install_linux.rst:213
msgid "An optional step is ``make check`` in order to check the matlab interface (this sets some environment variables and runs the ``check_all.m`` script which is the ``tests/matlab`` directory of the distribution) and install it (the libraries will be copied in ``gfdest_dir/lib``, while the MEX-File and M-Files will be copied in ``toolbox_dir``)::"
msgstr ""

#: ../source/install/install_linux.rst:222
msgid "When the library is installed, you may have to set the ``LD_LIBRARY_PATH`` environment variable to the directory containing the ``libgetfem.so`` and ``libgetfemint.so``, which is ``gfdest_dir/lib``::"
msgstr ""

#: ../source/install/install_linux.rst:228
msgid "The last step is to add the path to the toolbox in the matlab path:"
msgstr ""

#: ../source/install/install_linux.rst:230
msgid "you can set the environment variable ``MATLABPATH`` to ``toolbox_dir`` (``export MATLABPATH=toolbox_dir`` for example)."
msgstr ""

#: ../source/install/install_linux.rst:232
msgid "you can put ``addpath('toolbox_dir')`` to your ``$HOME/matlab/startup.m``"
msgstr ""

#: ../source/install/install_linux.rst:234
msgid "A very classical problem at this step is the incompatibility of the C and C++ libraries used by Matlab. Matlab is distributed with its own libc and libstdc++ libraries. An error message of the following type occurs when one tries to use a command of the interface::"
msgstr ""

#: ../source/install/install_linux.rst:239
msgid "In order to fix this problem one has to enforce Matlab to load the C and C++ libraries of the system. There is two possibilities to do this. The most radical is to delete the C and C++ libraries distributed along with Matlab (if you have administrator privileges ...!) for instance with::"
msgstr ""

#: ../source/install/install_linux.rst:245
msgid "The second possibility is to set the variable LDPRELOAD before launching Matlab for instance with (depending on the system)::"
msgstr ""

#: ../source/install/install_linux.rst:249
msgid "More specific instructions can be found in the ``README*`` files of the distribution."
msgstr ""

#: ../source/install/install_linux.rst:252
msgid "A few precompiled versions of the Matlab interface are available on the `download and install <../download.html>`_ page of |gf|."
msgstr ""

#: ../source/install/install_linux.rst:255
msgid "A second problem arising with recent distribution of Matlab (2016a), is the incompatibility of some libraries with ILP64 version of MKL loaded by MATLAB which uses 64 bits integers instead of 32 bits ones contrarily to most system blas/lapack libraries. New releases of |gf| are compatible with both 64 bits and 32 bits integer blas/lapack libraries. However, for instance, Mumps should be recompiled in a 64 bit integer version to be compatible with MKL ILP64. Mumps version on the system is the 32 bits integer version. If problem of this kind are encountered, you can try to force Matlab to load 32 bit blas and lapack libraries with::"
msgstr ""

#: ../source/install/install_linux.rst:261
msgid "How to use docker images of python interface"
msgstr ""

#: ../source/install/install_linux.rst:263
msgid "Docker images for GetFEM are published on the `Docker Hub <https://hub.docker.com/>`_. There is a images:"
msgstr ""

#: ../source/install/install_linux.rst:265
msgid "`getfemdoc/getfem <https://hub.docker.com/repository/docker/getfemdoc/getfem>`_"
msgstr ""

#: ../source/install/install_linux.rst:269
msgid "When running python script in developing version::"
msgstr ""

#: ../source/install/install_linux.rst:273
msgid "When running python interpreter in developing version::"
msgstr ""

#: ../source/install/install_linux.rst:277
msgid "When running python script in v5.4 version::"
msgstr ""

#: ../source/install/install_linux.rst:281
msgid "When running python interpreter in v5.4 version::"
msgstr ""
