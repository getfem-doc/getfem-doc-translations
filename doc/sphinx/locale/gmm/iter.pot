# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-20 13:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/gmm/iter.rst:10
msgid "Iterative solvers"
msgstr ""

#: ../source/gmm/iter.rst:14
msgid "Most of the solvers provided in |gmm| come frorm ITL with slight modifications (gmres has been optimized and adapted for complex matrices). Include the file ``gmm/gmm_iter_solvers.h`` to use them."
msgstr ""

#: ../source/gmm/iter.rst:17
msgid "iterations"
msgstr ""

#: ../source/gmm/iter.rst:19
msgid "The iteration object of |gmm| is a modification of the one in ITL. This is not a template type as in ITL."
msgstr ""

#: ../source/gmm/iter.rst:21
msgid "The simplest initialization is::"
msgstr ""

#: ../source/gmm/iter.rst:25
msgid "where ``2.0E-10`` is the (relative) residual to be obtained to have the convergence. Some possibilities::"
msgstr ""

#: ../source/gmm/iter.rst:42
msgid "Linear solvers"
msgstr ""

#: ../source/gmm/iter.rst:44
msgid "Here is the list of available linear solvers::"
msgstr ""

#: ../source/gmm/iter.rst:66
msgid "The solver ``gmm::constrained_cg(A, C, X, B, PS, PR, iter);`` solve a system with linear constraints, ``C`` is a matrix which represents the constraints. But it is still experimental."
msgstr ""

#: ../source/gmm/iter.rst:68
msgid "(Version 1.7) The solver ``gmm::bfgs(F, GRAD, X, restart, iter)`` is a BFGS quasi-Newton algorithm with a Wolfe line search for large scale problems. It minimizes the function ``F`` without constraints, be given its gradient ``GRAD``. ``restart`` is the max number of stored update vectors."
msgstr ""

#: ../source/gmm/iter.rst:71
msgid "Preconditioners"
msgstr ""

#: ../source/gmm/iter.rst:73
msgid "The following preconditioners, to be used with linear solvers, are available::"
msgstr ""

#: ../source/gmm/iter.rst:107
msgid "Except ``ildltt\\_precond``, all these precontionners come from ITL. ``ilut_precond`` has been optimized and simplified and ``cholesky_precond`` has been corrected and transformed in an incomplete LDLT preconditioner for stability reasons (similarly, we add ``choleskyt_precond`` which is in fact an incomplete LDLT with threshold preconditioner). Of course, ``ildlt\\_precond`` and ``ildltt_precond`` are designed for symmetric real or hermitian complex matrices to be use principally with cg."
msgstr ""

#: ../source/gmm/iter.rst:110
msgid "Additive Schwarz method"
msgstr ""

#: ../source/gmm/iter.rst:112
msgid "The additive Schwarz method is a decomposition domain method allowing the resolution of huge linear systems (see [SCHADD]_ for the principle of the method)."
msgstr ""

#: ../source/gmm/iter.rst:114
msgid "For the moment, the method is not parallelized (this should be done ...). The call is the following::"
msgstr ""

#: ../source/gmm/iter.rst:118
msgid "``A`` is the matrix of the linear system. ``u`` is the unknown vector. ``f`` is the right hand side. ``P`` is an eventual preconditioner for the local solver. ``vB`` is a vector of rectangular sparse matrices (``of type const std::vector<vBMatrix>``, where ``vBMatrix`` is a sparse matrix type), each of these matrices is of size :math:`N \\times N_i` where :math:`N` is the size of ``A`` and :math:`N_i` the number of variables in the :math:`i^{th}` sub-domain ; each column of the matrix is a base vector of the sub-space representing the :math:`i^{th}` sub-domain. ``iter`` is an iteration object. ``local_solver`` has to be chosen in the list ``gmm::using_gmres(), gmm::using_bicgstab(), gmm::using_cg(), gmm::using_qmr()`` and  ``gmm::using_superlu()`` if SuperLu is installed. ``global_solver`` has to be chosen in the list ``gmm::using_gmres(), gmm::using_bicgstab(), gmm::using_cg(), gmm::using_qmr()``."
msgstr ""

#: ../source/gmm/iter.rst:120
msgid "The test program ``schwarz_additive.C`` is the directory ``tests`` of GetFEM++ is an example of the resolution with the additive Schwarz method of an elastostatic problem with the use of coarse mesh to make a better preconditioning (i.e. one of the sub-domains represents in fact a coarser mesh)."
msgstr ""

#: ../source/gmm/iter.rst:122
msgid "In the case of multiple solves with the same linear system, it is possible to store the preconditioners or the LU factorizations to save computation time."
msgstr ""

#: ../source/gmm/iter.rst:124
msgid "A (too) simple program in ``gmm/gmm_domain_decomp.h`` allows to build a regular domain decomposition with a certain ratio of overlap. It directly produces the vector of matrices ``vB`` for the additive Schwarz method."
msgstr ""

#: ../source/gmm/iter.rst:127
msgid "Range basis function"
msgstr ""

#: ../source/gmm/iter.rst:129
msgid "The function ``gmm\\_range\\_basis(B, columns, EPS=1e-12)`` defined in ``gmm/gmm\\_range\\_basis.h`` allows to select from the columns of a sparse matrix ``B`` a basis of the range of this matrix. The result is returned in ``columns`` which should be of type ``std::set<size_type>`` and which contains the indices of the selected columns."
msgstr ""

#: ../source/gmm/iter.rst:131
msgid "The algorithm is specially designed to select independent constraints from a large matrix with linearly dependent columns."
msgstr ""

#: ../source/gmm/iter.rst:133
msgid "There is four step in the implemented algorithm"
msgstr ""

#: ../source/gmm/iter.rst:136
msgid "Elimination of null columns."
msgstr ""

#: ../source/gmm/iter.rst:137
msgid "Selection of a set of already orthogonal columns."
msgstr ""

#: ../source/gmm/iter.rst:138
msgid "Elimination of locally dependent columns by a blockwise Gram-Schmidt algorithm."
msgstr ""

#: ../source/gmm/iter.rst:139
msgid "Computation of vectors of the remaining null space by a global restarted Lanczos algorithm and deduction of some columns to be eliminated."
msgstr ""

#: ../source/gmm/iter.rst:141
msgid "The algorithm is efficient if after the local Gram-Schmidt algorithm it remains a low dimension null space. The implemented restarted Lanczos algorithm find the null space vectors one by one."
msgstr ""

#: ../source/gmm/iter.rst:143
msgid "The Global restarted Lanczos algorithm may be improved or replaced by a block Lanczos method (see [ca-re-so1994]_ for instance), a block Wiedelann method (in order to be parallelized) or simply the computation of more than one vector of the null space at each iteration."
msgstr ""
