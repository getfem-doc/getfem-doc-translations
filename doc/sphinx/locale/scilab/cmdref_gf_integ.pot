# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-28 02:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/scilab/cmdref_gf_integ.rst:8
msgid "gf_integ"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:16
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:19
msgid "General constructor for integ objects."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:21
msgid "General object for obtaining handles to various integrations methods on convexes (used when the elementary matrices are built)."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:25
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:29
msgid "``I = gf_integ(string method)``"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:31
msgid "Here is a list of some integration methods defined in GetFEM (see the description of finite element and integration methods for a complete reference):"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:35
msgid "IM_EXACT_SIMPLEX(n) : Exact integration on simplices (works only with linear geometric transformations and PK fem's)."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:38
msgid "IM_PRODUCT(A,B) : Product of two integration methods."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:40
msgid "IM_EXACT_PARALLELEPIPED(n) : Exact integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:42
msgid "IM_EXACT_PRISM(n) : Exact integration on prisms."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:44
msgid "IM_GAUSS1D(k) : Gauss method on the segment, order <literal>k=1,3,...,99</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:46
msgid "IM_NC(n,k) : Newton-Cotes approximative integration on simplexes, order <literal>k</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:48
msgid "IM_NC_PARALLELEPIPED(n,k) : Product of Newton-Cotes integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:50
msgid "IM_NC_PRISM(n,k) : Product of Newton-Cotes integration on prisms."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:52
msgid "IM_GAUSS_PARALLELEPIPED(n,k) : Product of Gauss1D integration on parallelepipeds."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:54
msgid "IM_TRIANGLE(k) : Gauss methods on triangles <literal>k=1,3,5,6,7,8,9,10,13,17,19</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:56
msgid "IM_QUAD(k) : Gauss methods on quadrilaterons <literal>k=2,3,5, ...,17</literal>. Note that IM_GAUSS_PARALLELEPIPED should be prefered for QK fem's."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:59
msgid "IM_TETRAHEDRON(k) : Gauss methods on tetrahedrons <literal>k=1,2,3,5,6 or 8</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:61
msgid "IM_SIMPLEX4D(3) : Gauss method on a 4-dimensional simplex."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:63
msgid "IM_STRUCTURED_COMPOSITE(im,k) : Composite method on a grid with <literal>k</literal> divisions."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:65
msgid "IM_HCT_COMPOSITE(im) : Composite integration suited to the HCT composite finite element."
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:68
msgid "Example:"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:70
msgid "I = gf_integ('IM_PRODUCT(IM_GAUSS1D(5),IM_GAUSS1D(5))')"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:72
msgid "is the same as:"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:74
msgid "I = gf_integ('IM_GAUSS_PARALLELEPIPED(2,5)')"
msgstr ""

#: ../source/scilab/cmdref_gf_integ.rst:76
msgid "Note that 'exact integration' should be avoided in general, since they only apply to linear geometric transformations, are quite slow, and subject to numerical stability problems for high degree fem's."
msgstr ""
