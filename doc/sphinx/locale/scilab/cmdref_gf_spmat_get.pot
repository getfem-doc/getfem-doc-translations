# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-06 20:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/scilab/cmdref_gf_spmat_get.rst:8
msgid "gf_spmat_get"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:30
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:35
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:39
msgid "``n = gf_spmat_get(spmat S, 'nnz')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:41
msgid "Return the number of non-null values stored in the sparse matrix."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:44
msgid "``Sm = gf_spmat_get(spmat S, 'full'[, list I[, list J]])``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:46
msgid "Return a full (sub-)matrix."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:48
msgid "The optional arguments <literal>I</literal> and <literal>J</literal>, are the sub-intervals for the rows and columns that are to be extracted."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:52
msgid "``MV = gf_spmat_get(spmat S, 'mult', vec V)``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:54
msgid "Product of the sparse matrix <literal>M</literal> with a vector <literal>V</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:56
msgid "For matrix-matrix multiplications, see gf_spmat('mult')."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:59
msgid "``MtV = gf_spmat_get(spmat S, 'tmult', vec V)``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:61
msgid "Product of <literal>M</literal> transposed (conjugated if <literal>M</literal> is complex) with the vector <literal>V</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:65
msgid "``D = gf_spmat_get(spmat S, 'diag'[, list E])``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:67
msgid "Return the diagonal of <literal>M</literal> as a vector."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:69
msgid "If <literal>E</literal> is used, return the sub-diagonals whose ranks are given in E."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:72
msgid "``s = gf_spmat_get(spmat S, 'storage')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:74
msgid "Return the storage type currently used for the matrix."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:76
msgid "The storage is returned as a string, either 'CSC' or 'WSC'."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:79
msgid "``{ni,nj} = gf_spmat_get(spmat S, 'size')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:81
msgid "Return a vector where <literal>ni</literal> and <literal>nj</literal> are the dimensions of the matrix."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:84
msgid "``b = gf_spmat_get(spmat S, 'is_complex')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:86
msgid "Return 1 if the matrix contains complex values."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:89
msgid "``{JC, IR} = gf_spmat_get(spmat S, 'csc_ind')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:91
msgid "Return the two usual index arrays of CSC storage."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:93
#: ../source/scilab/cmdref_gf_spmat_get.rst:100
msgid "If <literal>M</literal> is not stored as a CSC matrix, it is converted into CSC."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:96
msgid "``V = gf_spmat_get(spmat S, 'csc_val')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:98
msgid "Return the array of values of all non-zero entries of <literal>M</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:103
msgid "``{N, U0} = gf_spmat_get(spmat S, 'dirichlet nullspace', vec R)``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:105
msgid "Solve the dirichlet conditions <literal>M.U=R</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:107
msgid "A solution <literal>U0</literal> which has a minimum L2-norm is returned, with a sparse matrix <literal>N</literal> containing an orthogonal basis of the kernel of the (assembled) constraints matrix <literal>M</literal> (hence, the PDE linear system should be solved on this subspace): the initial problem"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:112
msgid "<literal>K.U = B</literal> with constraints <literal>M.U = R</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:114
msgid "is replaced by"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:116
msgid "<literal>(N'.K.N).UU = N'.B</literal> with <literal>U = N.UU + U0</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:119
msgid "``gf_spmat_get(spmat S, 'save', string format, string filename)``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:121
msgid "Export the sparse matrix."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:123
msgid "the format of the file may be 'hb' for Harwell-Boeing, or 'mm' for Matrix-Market."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:127
msgid "``s = gf_spmat_get(spmat S, 'char')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:129
msgid "Output a (unique) string representation of the spmat."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:131
msgid "This can be used to perform comparisons between two different spmat objects. This function is to be completed."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:137
msgid "``gf_spmat_get(spmat S, 'display')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:139
msgid "displays a short summary for a spmat object."
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:142
msgid "``{mantissa_r, mantissa_i, exponent} = gf_spmat_get(spmat S, 'determinant')``"
msgstr ""

#: ../source/scilab/cmdref_gf_spmat_get.rst:144
msgid "returns the matrix determinant calculated using MUMPS."
msgstr ""
