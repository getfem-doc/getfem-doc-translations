# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-28 01:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/matlab_octave/cmdref_gf_precond.rst:8
msgid "gf_precond"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:24
msgid "**Description :**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:27
msgid "General constructor for precond objects."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:29
msgid "The preconditioners may store REAL or COMPLEX values. They accept getfem sparse matrices and Matlab sparse matrices."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:33
msgid "**Command list :**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:37
msgid "``PC = gf_precond('identity')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:39
msgid "Create a REAL identity precondioner."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:42
msgid "``PC = gf_precond('cidentity')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:44
msgid "Create a COMPLEX identity precondioner."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:47
msgid "``PC = gf_precond('diagonal', vec D)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:49
msgid "Create a diagonal precondioner."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:52
msgid "``PC = gf_precond('ildlt', spmat m)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:54
msgid "Create an ILDLT (Cholesky) preconditioner for the (symmetric) sparse matrix `m`. This preconditioner has the same sparsity pattern than `m` (no fill-in)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:59
msgid "``PC = gf_precond('ilu', spmat m)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:61
msgid "Create an ILU (Incomplete LU) preconditioner for the sparse matrix `m`. This preconditioner has the same sparsity pattern than `m` (no fill-in)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:66
msgid "``PC = gf_precond('ildltt', spmat m[, int fillin[, scalar threshold]])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:68
msgid "Create an ILDLTT (Cholesky with filling) preconditioner for the (symmetric) sparse matrix `m`. The preconditioner may add at most `fillin` additional non-zero entries on each line. The default value for `fillin` is 10, and the default threshold is1e-7."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:74
msgid "``PC = gf_precond('ilut', spmat m[, int fillin[, scalar threshold]])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:76
msgid "Create an ILUT (Incomplete LU with filling) preconditioner for the sparse matrix `m`. The preconditioner may add at most `fillin` additional non-zero entries on each line. The default value for `fillin` is 10, and the default threshold is 1e-7."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:82
msgid "``PC = gf_precond('superlu', spmat m)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:84
msgid "Uses SuperLU to build an exact factorization of the sparse matrix `m`. This preconditioner is only available if the getfem-interface was built with SuperLU support. Note that LU factorization is likely to eat all your memory for 3D problems."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:90
msgid "``PC = gf_precond('spmat', spmat m)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_precond.rst:92
msgid "Preconditioner given explicitely by a sparse matrix."
msgstr ""
