# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-06 14:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/python/cmdref_MeshFem.rst:8
msgid "MeshFem"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:1
msgid "GeFEM MeshFem object"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:3
msgid "This object represents a finite element method defined on a whole mesh."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:6
msgid "General constructor for MeshFem objects"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:8
msgid "``MF = MeshFem(Mesh m[, int Qdim1=1[, int Qdim2=1, ...]])`` Build a new MeshFem object."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:11
msgid "The `Qdim` parameters specifies the dimension of the field represented by the finite element method. Qdim1 = 1 for a scalar field, Qdim1 = n for a vector field off size n, Qdim1=m, Qdim2=n for a matrix field of size mxn ... Returns the handle of the created object."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:17
msgid "``MF = MeshFem('load', string fname[, Mesh m])`` Load a MeshFem from a file."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:20
msgid "If the mesh `m` is not supplied (this kind of file does not store the mesh), then it is read from the file `fname` and its descriptor is returned as the second output argument."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:24
msgid "``MF = MeshFem('from string', string s[, Mesh m])`` Create a MeshFem object from its string description."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:27
msgid "See also ``MeshFem.char()``"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:29
msgid "``MF = MeshFem('clone', MeshFem mf)`` Create a copy of a MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:32
msgid "``MF = MeshFem('sum', MeshFem mf1, MeshFem mf2[, MeshFem mf3[, ...]])`` Create a MeshFem that spans two (or more) MeshFem's."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:35
msgid "All MeshFem must share the same mesh."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:37
msgid "After that, you should not modify the FEM of `mf1`, `mf2` etc."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:39
msgid "``MF = MeshFem('product', MeshFem mf1, MeshFem mf2)`` Create a MeshFem that spans all the product of a selection of shape functions of `mf1` by all shape functions of `mf2`. Designed for Xfem enrichment."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:44
msgid "`mf1` and `mf2` must share the same mesh."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:46
msgid "After that, you should not modify the FEM of `mf1`, `mf2`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:48
msgid "``MF = MeshFem('levelset', MeshLevelSet mls, MeshFem mf)`` Create a MeshFem that is conformal to implicit surfaces defined in MeshLevelSet."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:52
msgid "``MF = MeshFem('global function', Mesh m, LevelSet ls, (GlobalFunction GF1,...)[, int Qdim_m])`` Create a MeshFem whose base functions are global function given by the user in the system of coordinate defined by the iso-values of the two level-set function of `ls`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:57
msgid "``MF = MeshFem('partial', MeshFem mf, ivec DOFs[, ivec RCVs])`` Build a restricted MeshFem by keeping only a subset of the degrees of freedom of `mf`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem:61
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_partial:4
msgid "If `RCVs` is given, no FEM will be put on the convexes listed in `RCVs`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.adapt:1
msgid "For a MeshFem levelset object only. Adapt the mesh_fem object to a change of the levelset function."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cv:1
msgid "Return the dof of the convexes listed in `CVids`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cv:3
msgid "WARNING: the Degree of Freedom might be returned in ANY order, do not use this function in your assembly routines. Use 'basic dof from cvid' instead, if you want to be able to map a convex number with its associated degrees of freedom."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cv:8
msgid "One can also get the list of basic dof on a set on convex faces, by indicating on the second row of `CVids` the faces numbers (with respect to the convex number on the first row)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cvid:1
msgid "Return the degrees of freedom attached to each convex of the mesh."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cvid:3
msgid "If `CVids` is omitted, all the convexes will be considered (equivalent to `CVids = 1 ... Mesh.max_cvid()`)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cvid:6
msgid "`IDx` is a vector, `length(IDx) = length(CVids)+1`. `DOFs` is a vector containing the concatenated list of dof of each convex in `CVids`. Each entry of `IDx` is the position of the corresponding convex point list in `DOFs`. Hence, for example, the list of points of the second convex is DOFs[IDx(2):IDx(3)]."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_from_cvid:12
msgid "If `CVids` contains convex #id which do not exist in the mesh, their point list will be empty."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_nodes:1
msgid "Get location of basic degrees of freedom."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_nodes:3
msgid "Return the list of interpolation points for the specified dof #IDs in `DOFids` (if `DOFids` is omitted, all basic dof are considered)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_on_region:1
msgid "Return the list of basic dof (before the optional reduction) lying on one of the mesh regions listed in `Rs`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.basic_dof_on_region:4
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_on_region:4
msgid "More precisely, this function returns the basic dof whose support is non-null on one of regions whose #ids are listed in `Rs` (note that for boundary regions, some dof nodes may not lie exactly on the boundary, for example the dof of Pk(n,0) lies on the center of the convex, but the base function in not null on the convex border)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.char:1
msgid "Output a string description of the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.char:3
msgid "By default, it does not include the description of the linked mesh object, except if `opt` is 'with_mesh'."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.convex_index:1
msgid "Return the list of convexes who have a FEM."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.display:1
msgid "displays a short summary for a MeshFem object."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_from_cv:1
msgid "Deprecated function. Use MeshFem.basic_dof_from_cv() instead."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_from_cvid:1
msgid "Deprecated function. Use MeshFem.basic_dof_from_cvid() instead."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_from_im:1
msgid "Return a selection of dof who contribute significantly to the mass-matrix that would be computed with `mf` and the integration method `mim`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_from_im:5
msgid "`p` represents the dimension on what the integration method operates (default `p = mesh dimension`)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_from_im:8
msgid "IMPORTANT: you still have to set a valid integration method on the convexes which are not crosses by the levelset!"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_nodes:1
msgid "Deprecated function. Use MeshFem.basic_dof_nodes() instead."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_on_region:1
msgid "Return the list of dof (after the optional reduction) lying on one of the mesh regions listed in `Rs`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_on_region:11
msgid "For a reduced mesh_fem a dof is lying on a region if its potential corresponding shape function is nonzero on this region. The extension matrix is used to make the correspondence between basic and reduced dofs."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_partition:1
msgid "Get the 'dof_partition' array."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.dof_partition:3
msgid "Return the array which associates an integer (the partition number) to each convex of the MeshFem. By default, it is an all-zero array. The degrees of freedom of each convex of the MeshFem are connected only to the dof of neighbouring convexes which have the same partition number, hence it is possible to create partially discontinuous MeshFem very easily."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.eval:1
msgid "interpolate an expression on the (lagrangian) MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.eval:3
msgid "Examples::"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_dx:1
msgid "Synopsis: MeshFem.export_to_dx(self,string filename, ...['as', string mesh_name][,'edges']['serie',string serie_name][,'ascii'][,'append'], U, 'name'...)"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_dx:3
msgid "Export a MeshFem and some fields to an OpenDX file."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_dx:5
msgid "This function will fail if the MeshFem mixes different convex types (i.e. quads and triangles), or if OpenDX does not handle a specific element type (i.e. prism connections are not known by OpenDX)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_dx:9
msgid "The FEM will be mapped to order 1 Pk (or Qk) FEMs. If you need to represent high-order FEMs or high-order geometric transformations, you should consider Slice.export_to_dx()."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_pos:1
msgid "Synopsis: MeshFem.export_to_pos(self,string filename[, string name][[,MeshFem mf1], mat U1, string nameU1[[,MeshFem mf2], mat U2, string nameU2,...]])"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_pos:3
msgid "Export a MeshFem and some fields to a pos file."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_pos:5
msgid "The FEM and geometric transformations will be mapped to order 1 isoparametric Pk (or Qk) FEMs (as GMSH does not handle higher order elements)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_vtk:1
msgid "Synopsis: MeshFem.export_to_vtk(self,string filename, ... ['ascii'], U, 'name'...)"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_vtk:3
msgid "Export a MeshFem and some fields to a vtk file."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.export_to_vtk:5
msgid "The FEM and geometric transformations will be mapped to order 1 or 2 isoparametric Pk (or Qk) FEMs (as VTK does not handle higher order elements). If you need to represent high-order FEMs or high-order geometric transformations, you should consider Slice.export_to_vtk()."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.extend_vector:1
msgid "Multiply the provided vector V with the reduction matrix of the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.extension_matrix:1
msgid "Return the optional extension matrix."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.fem:1
msgid "Return a list of FEM used by the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.fem:3
msgid "`FEMs` is an array of all Fem objects found in the convexes given in `CVids`. If `CV2F` was supplied as an output argument, it contains, for each convex listed in `CVids`, the index of its correspounding FEM in `FEMs`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.fem:8
msgid "Convexes which are not part of the mesh, or convexes which do not have any FEM have their correspounding entry in `CV2F` set to -1."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.has_linked_mesh_levelset:1
msgid "Is a mesh_fem_level_set or not."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.interpolate_convex_data:1
msgid "Interpolate data given on each convex of the mesh to the MeshFem dof. The MeshFem has to be lagrangian, and should be discontinuous (typically a FEM_PK(N,0) or FEM_QK(N,0) should be used)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.interpolate_convex_data:5
msgid "The last dimension of the input vector Ucv should have Mesh.max_cvid() elements."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.interpolate_convex_data:8
msgid "Example of use: MeshFem.interpolate_convex_data(Mesh.quality())"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_equivalent:1
msgid "Test if the MeshFem is equivalent."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_equivalent:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_polynomial:3
msgid "See MeshFem.is_lagrangian()"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_lagrangian:1
msgid "Test if the MeshFem is Lagrangian."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_lagrangian:3
msgid "Lagrangian means that each base function Phi[i] is such that Phi[i](P[j]) = delta(i,j), where P[j] is the dof location of the jth base function, and delta(i,j) = 1 if i==j, else 0."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_lagrangian:7
msgid "If `CVids` is omitted, it returns 1 if all convexes in the mesh are Lagrangian. If `CVids` is used, it returns the convex indices (with respect to `CVids`) which are Lagrangian."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_polynomial:1
msgid "Test if all base functions are polynomials."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.is_reduced:1
msgid "Return 1 if the optional reduction matrix is applied to the dofs."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.linked_mesh:1
msgid "Return a reference to the Mesh object linked to `mf`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.linked_mesh_levelset:1
msgid "if it is a mesh_fem_level_set gives the linked mesh_level_set."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.memsize:1
msgid "Return the amount of memory (in bytes) used by the mesh_fem object."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.memsize:3
msgid "The result does not take into account the linked mesh object."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.mesh:1
msgid "Return a reference to the Mesh object linked to `mf`. (identical to Mesh.linked_mesh())"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.nb_basic_dof:1
msgid "Return the number of basic degrees of freedom (dof) of the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.nbdof:1
msgid "Return the number of degrees of freedom (dof) of the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.non_conformal_basic_dof:1
msgid "Return partially linked degrees of freedom."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.non_conformal_basic_dof:3
msgid "Return the basic dof located on the border of a convex and which belong to only one convex, except the ones which are located on the border of the mesh.  For example, if the convex 'a' and 'b' share a common face, 'a' has a P1 FEM, and 'b' has a P2 FEM, then the basic dof on the middle of the face will be returned by this function (this can be useful when searching the interfaces between classical FEM and hierarchical FEM)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.non_conformal_dof:1
msgid "Deprecated function. Use MeshFem.non_conformal_basic_dof() instead."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.qdim:1
msgid "Return the dimension Q of the field interpolated by the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.qdim:3
msgid "By default, Q=1 (scalar field). This has an impact on the dof numbering."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.reduce_meshfem:1
msgid "Set reduction mesh fem This function selects the degrees of freedom of the finite element method by selecting a set of independent vectors of the matrix RM. The numer of columns of RM should corresponds to the number of degrees of freedom of the finite element method."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.reduce_vector:1
msgid "Multiply the provided vector V with the extension matrix of the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.reduction:1
msgid "Set or unset the use of the reduction/extension matrices."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.reduction_matrices:1
msgid "Set the reduction and extension matrices and valid their use."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.reduction_matrix:1
msgid "Return the optional reduction matrix."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.save:1
msgid "Save a MeshFem in a text file (and optionally its linked mesh object if `opt` is the string 'with_mesh')."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_discontinuous_fem:1
msgid "Synopsis: MeshFem.set_classical_discontinuous_fem(self, int k[[, 'complete'], @tscalar alpha[, ivec CVIDX]])"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_discontinuous_fem:3
msgid "Assigns a classical (Lagrange polynomial) discontinuous fem of order k."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_discontinuous_fem:5
msgid "Similar to MeshFem.set_classical_fem() except that FEM_PK_DISCONTINUOUS is used. Param `alpha` the node inset, :math:`0 \\leq alpha < 1`, where 0 implies usual dof nodes, greater values move the nodes toward the center of gravity, and 1 means that all degrees of freedom collapse on the center of gravity. The option 'complete' requests complete Langrange polynomial elements, even if the element geometric transformation is an incomplete one (e.g. 8-node quadrilateral or 20-node hexahedral)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_fem:1
msgid "Synopsis: MeshFem.set_classical_fem(self, int k[[, 'complete'], ivec CVids])"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_fem:3
msgid "Assign a classical (Lagrange polynomial) fem of order `k` to the MeshFem. The option 'complete' requests complete Langrange polynomial elements, even if the element geometric transformation is an incomplete one (e.g. 8-node quadrilateral or 20-node hexahedral)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_classical_fem:8
msgid "Uses FEM_PK for simplexes, FEM_QK for parallelepipeds etc."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_dof_partition:1
msgid "Change the 'dof_partition' array."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_dof_partition:3
msgid "`DOFP` is a vector holding a integer value for each convex of the MeshFem. See MeshFem.dof_partition() for a description of \"dof partition\"."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_enriched_dofs:1
msgid "For a MeshFem product object only. Set te enriched dofs and adapt the MeshFem product."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_fem:1
msgid "Set the Finite Element Method."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_fem:3
msgid "Assign a FEM `f` to all convexes whose #ids are listed in `CVids`. If `CVids` is not given, the integration is assigned to all convexes."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_fem:6
msgid "See the help of Fem to obtain a list of available FEM methods."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_partial:1
msgid "Can only be applied to a partial MeshFem. Change the subset of the degrees of freedom of `mf`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_qdim:1
msgid "Change the `Q` dimension of the field that is interpolated by the MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.MeshFem.set_qdim:3
msgid "`Q = 1` means that the MeshFem describes a scalar field, `Q = N` means that the MeshFem describes a vector field of dimension N."
msgstr ""
