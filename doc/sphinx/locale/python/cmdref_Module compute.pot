# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-13 17:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/python/cmdref_Module compute.rst:8
msgid "Module compute"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_L2_norm:1
msgid "Compute the L2 norm of the (real or complex) field `U`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_L2_norm:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_L2_dist:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_semi_norm:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_semi_dist:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_norm:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H2_semi_norm:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H2_norm:3
msgid "If `CVids` is given, the norm will be computed only on the listed elements."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_L2_dist:1
msgid "Compute the L2 distance between `U` and `U2`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_semi_norm:1
msgid "Compute the L2 norm of grad(`U`)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_semi_dist:1
msgid "Compute the semi H1 distance between `U` and `U2`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H1_norm:1
msgid "Compute the H1 norm of `U`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H2_semi_norm:1
msgid "Compute the L2 norm of D^2(`U`)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_H2_norm:1
msgid "Compute the H2 norm of `U`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_gradient:1
msgid "Compute the gradient of the field `U` defined on MeshFem `mf_du`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_gradient:3
msgid "The gradient is interpolated on the MeshFem `mf_du`, and returned in `DU`. For example, if `U` is defined on a P2 MeshFem, `DU` should be evaluated on a P1-discontinuous MeshFem. `mf` and `mf_du` should share the same mesh."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_gradient:8
msgid "`U` may have any number of dimensions (i.e. this function is not restricted to the gradient of scalar fields, but may also be used for tensor fields). However the last dimension of `U` has to be equal to the number of dof of `mf`. For example, if `U` is a [3x3xNmf] array (where Nmf is the number of dof of `mf`), `DU` will be a [Nx3x3[xQ]xNmf_du] array, where N is the dimension of the mesh, Nmf_du is the number of dof of `mf_du`, and the optional Q dimension is inserted if `Qdim_mf != Qdim_mf_du`, where Qdim_mf is the Qdim of `mf` and Qdim_mf_du is the Qdim of `mf_du`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_hessian:1
msgid "Compute the hessian of the field `U` defined on MeshFem `mf_h`."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_hessian:3
msgid "See also gf_compute('gradient', MeshFem mf_du)."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_eval_on_triangulated_surface:1
msgid "[OBSOLETE FUNCTION! will be removed in a future release] Utility function designed for 2D triangular meshes : returns a list of triangles coordinates with interpolated U values. This can be used for the accurate visualization of data defined on a discontinous high order element. On output, the six first rows of UP contains the triangle coordinates, and the others rows contain the interpolated values of U (one for each triangle vertex) CVLIST may indicate the list of convex number that should be consider, if not used then all the mesh convexes will be used. U should be a row vector."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:1
msgid "Synopsis: Ui = compute_interpolate_on(MeshFem MF, vec U, {MeshFem mfi | Slice sli | vec pts})"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:3
msgid "Interpolate a field on another MeshFem or a Slice or a list of points."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:6
msgid "Interpolation on another MeshFem `mfi`:"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:6
msgid "`mfi` has to be Lagrangian. If `mf` and `mfi` share the same mesh object, the interpolation will be much faster."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:11
msgid "Interpolation on a Slice `sli`:"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:9
msgid "this is similar to interpolation on a refined P1-discontinuous mesh, but it is much faster. This can also be used with Slice('points') to obtain field values at a given set of points."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:13
msgid "Interpolation on a set of points `pts`"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_interpolate_on:15
msgid "See also gf_asm('interpolation matrix')"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_extrapolate_on:1
msgid "Extrapolate a field on another MeshFem."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_extrapolate_on:3
msgid "If the mesh of `mfe` is stricly included in the mesh of `mf`, this function does stricly the same job as gf_compute('interpolate_on'). However, if the mesh of `mfe` is not exactly included in `mf` (imagine interpolation between a curved refined mesh and a coarse mesh), then values which are outside `mf` will be extrapolated."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_extrapolate_on:10
msgid "See also gf_asm('extrapolation matrix')"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_error_estimate:1
msgid "Compute an a posteriori error estimate."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_error_estimate:3
#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_error_estimate_nitsche:3
msgid "Currently there is only one which is available: for each convex, the jump of the normal derivative is integrated on its faces."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_error_estimate_nitsche:1
msgid "Compute an a posteriori error estimate in the case of Nitsche method."
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_convect:1
msgid "Synopsis: compute_convect(MeshFem MF, vec U, MeshFem mf_v, vec V, scalar dt, int nt[, string option[, vec per_min, vec per_max]])"
msgstr ""

#: ../../../../../../../virtualenv/python3.6.10/lib/python3.6/site-packages/getfem/__init__.py:docstring of getfem.compute_convect:3
msgid "Compute a convection of `U` with regards to a steady state velocity field `V` with a Characteristic-Galerkin method. The result is returned in-place in `U`. This method is restricted to pure Lagrange fems for U. `mf_v` should represent a continuous finite element method. `dt` is the integration time and `nt` is the number of integration step on the caracteristics. `option` is an option for the part of the boundary where there is a re-entrant convection. `option = 'extrapolation'` for an extrapolation on the nearest element, `option = 'unchanged'` for a constant value on that boundary or `option = 'periodicity'` for a peridiodic boundary. For this latter option the two vectors per_min, per_max has to be given and represent the limits of the periodic domain (on components where per_max[k] < per_min[k] no operation is done). This method is rather dissipative, but stable."
msgstr ""
