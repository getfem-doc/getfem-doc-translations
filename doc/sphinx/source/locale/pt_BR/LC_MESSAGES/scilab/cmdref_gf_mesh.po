# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-14 00:47+0000\n"
"PO-Revision-Date: 2018-07-16 06:59+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/getfem-doc/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../source/scilab/cmdref_gf_mesh.rst:8
msgid "gf_mesh"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:30
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:33
msgid "General constructor for mesh objects."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:35
msgid ""
"This object is able to store any element in any dimension even if you mix "
"elements with different dimensions."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:41
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:45
msgid "``M = gf_mesh('empty', int dim)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:47
msgid "Create a new empty mesh."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:50
msgid "``M = gf_mesh('cartesian', vec X[, vec Y[, vec Z,..]])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:52
msgid "Build quickly a regular mesh of quadrangles, cubes, etc."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:55
msgid "``M = gf_mesh('pyramidal', vec X[, vec Y[, vec Z,..]])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:57
msgid "Build quickly a regular mesh of pyramids, etc."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:60
msgid "``M = gf_mesh('cartesian Q1', vec X, vec Y[, vec Z,..])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:62
msgid ""
"Build quickly a regular mesh of quadrangles, cubes, etc. with Q1 elements."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:66
msgid "``M = gf_mesh('triangles grid', vec X, vec Y)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:68
msgid "Build quickly a regular mesh of triangles."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:70
msgid ""
"This is a very limited and somehow deprecated function (See also "
"<literal></literal>gf_mesh('ptND')<literal></literal>, "
"<literal></literal>gf_mesh('regular simplices')<literal></literal> and "
"<literal></literal>gf_mesh('cartesian')<literal></literal>)."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:75
msgid ""
"``M = gf_mesh('regular simplices', vec X[, vec Y[, vec Z,...]]['degree', int"
" k]['noised'])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:77
msgid ""
"Mesh a n-dimensional parallelepiped with simplices (triangles, tetrahedrons "
"etc) ."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:80
msgid ""
"The optional degree may be used to build meshes with non linear geometric "
"transformations."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:84
msgid "``M = gf_mesh('curved', mesh m, vec F)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:86
msgid ""
"Build a curved (n+1)-dimensions mesh from a n-dimensions mesh "
"<literal>m</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:88
msgid ""
"The points of the new mesh have one additional coordinate, given by the "
"vector <literal>F</literal>. This can be used to obtain meshes for shells. "
"<literal>m</literal> may be a mesh_fem object, in that case its linked mesh "
"will be used."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:93
msgid "``M = gf_mesh('prismatic', mesh m, int nl[, int degree])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:95
msgid ""
"Extrude a prismatic mesh <literal>M</literal> from a mesh "
"<literal>m</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:97
msgid ""
"In the additional dimension there are <literal>nl</literal> layers of "
"elements distributed from <literal></literal>0<literal></literal> to "
"<literal></literal>1<literal></literal>. If the optional parameter "
"<literal>degree</literal> is provided with a value greater than the default "
"value of <literal></literal>1<literal></literal>, a non-linear "
"transformation of corresponding degree is considered in the extrusion "
"direction."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:104
msgid "``M = gf_mesh('pt2D', mat P, imat T[, int n])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:106
msgid "Build a mesh from a 2D triangulation."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:108
msgid ""
"Each column of <literal>P</literal> contains a point coordinate, and each "
"column of <literal>T</literal> contains the point indices of a triangle. "
"<literal>n</literal> is optional and is a zone number. If "
"<literal>n</literal> is specified then only the zone number "
"<literal>n</literal> is converted (in that case, <literal>T</literal> is "
"expected to have 4 rows, the fourth containing these zone numbers)."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:117
msgid "``M = gf_mesh('ptND', mat P, imat T)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:119
msgid "Build a mesh from a n-dimensional \"triangulation\"."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:121
msgid ""
"Similar function to 'pt2D', for building simplexes meshes from a "
"triangulation given in <literal>T</literal>, and a list of points given in "
"<literal>P</literal>. The dimension of the mesh will be the number of rows "
"of <literal>P</literal>, and the dimension of the simplexes will be the "
"number of rows of <literal>T</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:127
msgid "``M = gf_mesh('load', string filename)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:129
msgid "Load a mesh from a GetFEM ascii mesh file."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:131
msgid ""
"See also <literal></literal>gf_mesh_get(mesh M, 'save', string "
"filename)<literal></literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:134
msgid "``M = gf_mesh('from string', string s)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:136
msgid "Load a mesh from a string description."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:138
msgid ""
"For example, a string returned by <literal></literal>gf_mesh_get(mesh M, "
"'char')<literal></literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:141
msgid "``M = gf_mesh('import', string format, string filename)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:143
msgid "Import a mesh."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:145
msgid "<literal>format</literal> may be:"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:147
msgid "'gmsh' for a mesh created with <literal>Gmsh</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:148
msgid "'gid' for a mesh created with <literal>GiD</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:149
msgid "'cdb' for a mesh created with <literal>ANSYS</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:150
msgid "'am_fmt' for a mesh created with <literal>EMC2</literal>"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:153
msgid "``M = gf_mesh('clone', mesh m2)``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:155
msgid "Create a copy of a mesh."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:158
msgid ""
"``M = gf_mesh('generate', mesher_object mo, scalar h[, int K = 1[, mat "
"vertices]])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh.rst:160
msgid ""
"Call the experimental mesher of Getfem on the geometry represented by "
"<literal>mo</literal>. please control the conformity of the produced mesh. "
"You can help the mesher by adding a priori vertices in the array "
"<literal>vertices</literal> which should be of size <literal></literal>n x "
"m<literal></literal> where <literal></literal>n<literal></literal> n is the "
"dimension of the mesh and <literal></literal>m<literal></literal> the number"
" of points. <literal>h</literal> is approximate diameter of the elements. "
"<literal>K</literal> is the degree of the mesh ( > 1 for curved boundaries)."
"  The mesher try to optimize the quality of the elements. This operation may"
" be time consuming. Note that if the mesh generation fails, because of some "
"random procedure used, it can be run again since it will not give "
"necessarily the same result due to random procedures used. The messages send"
" to the console by the mesh generation can be deactivated using "
"<literal>gf_util('trace level', 2)</literal>. More information can be "
"obtained by <literal>gf_util('trace level', 4)</literal>. See "
"<literal></literal>gf_mesher_object<literal></literal> to manipulate "
"geometric primitives in order to describe the geometry."
msgstr ""
