# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2025 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-14 01:55+0000\n"
"PO-Revision-Date: 2018-07-16 07:01+0000\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/tkoyama010/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:8
msgid "gf_cont_struct_get"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:29
msgid "**Description :**"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:32
msgid ""
"General function for querying information about cont_struct objects and for "
"applying them to numerical continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:36
msgid "**Command list :**"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:40
msgid "``h = gf_cont_struct_get(cont_struct CS, 'init step size')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:42
msgid "Return an initial step size for continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:45
msgid "``h = gf_cont_struct_get(cont_struct CS, 'min step size')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:47
msgid "Return the minimum step size for continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:50
msgid "``h = gf_cont_struct_get(cont_struct CS, 'max step size')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:52
msgid "Return the maximum step size for continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:55
msgid "``h = gf_cont_struct_get(cont_struct CS, 'step size decrement')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:57
msgid "Return the decrement ratio of the step size for continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:60
msgid "``h = gf_cont_struct_get(cont_struct CS, 'step size increment')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:62
msgid "Return the increment ratio of the step size for continuation."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:65
msgid ""
"``[vec tangent_sol, scalar tangent_par] = gf_cont_struct_get(cont_struct CS,"
" 'compute tangent', vec solution, scalar parameter, vec tangent_sol, scalar "
"tangent_par)``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:67
msgid "Compute and return an updated tangent."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:70
msgid ""
"``E = gf_cont_struct_get(cont_struct CS, 'init Moore-Penrose continuation', "
"vec solution, scalar parameter, scalar init_dir)``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:72
msgid ""
"Initialise the Moore-Penrose continuation: Return a unit tangent to the "
"solution curve at the point given by <literal>solution</literal> and "
"<literal>parameter</literal>, and an initial step size for the continuation."
" Orientation of the computed tangent with respect to the parameter is "
"determined by the sign of <literal>init_dir</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:79
msgid ""
"``E = gf_cont_struct_get(cont_struct CS, 'Moore-Penrose continuation', vec "
"solution, scalar parameter, vec tangent_sol, scalar tangent_par, scalar h)``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:81
msgid ""
"Compute one step of the Moore-Penrose continuation: Take the point given by "
"<literal>solution</literal> and <literal>parameter</literal>, the tangent "
"given by <literal>tangent_sol</literal> and <literal>tangent_par</literal>, "
"and the step size <literal>h</literal>. Return a new point on the solution "
"curve, the corresponding tangent, a step size for the next step and "
"optionally the current step size. If the returned step size equals zero, the"
" continuation has failed. Optionally, return the type of any detected "
"singular point. NOTE: The new point need not to be saved in the model in the"
" end!"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:91
msgid ""
"``t = gf_cont_struct_get(cont_struct CS, 'non-smooth bifurcation test', vec "
"solution1, scalar parameter1, vec tangent_sol1, scalar tangent_par1, vec "
"solution2, scalar parameter2, vec tangent_sol2, scalar tangent_par2)``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:93
msgid ""
"Test for a non-smooth bifurcation point between the point given by "
"<literal>solution1</literal> and <literal>parameter1</literal> with the "
"tangent given by <literal>tangent_sol1</literal> and "
"<literal>tangent_par1</literal> and the point given by "
"<literal>solution2</literal> and <literal>parameter2</literal> with the "
"tangent given by <literal>tangent_sol2</literal> and "
"<literal>tangent_par2</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:99
msgid ""
"``t = gf_cont_struct_get(cont_struct CS, 'bifurcation test function')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:101
msgid ""
"Return the last value of the bifurcation test function and eventually the "
"whole calculated graph when passing between different sub-domains of "
"differentiability."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:106
msgid ""
"``gf_cont_struct_get(cont_struct CS, 'non-smooth branching', vec solution, "
"scalar parameter, vec tangent_sol, scalar tangent_par)``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:108
msgid ""
"Approximate a non-smooth point close to the point given by "
"<literal>solution</literal> and <literal>parameter</literal> and locate one-"
"sided smooth solution branches emanating from there. Save the approximation "
"of the non-smooth point as a singular point into the cont_struct object "
"together with the array of the tangents to the located solution branches "
"that direct away from the non-smooth point. It is supposed that the point "
"given by <literal>solution</literal> and <literal>parameter</literal> is a "
"point on a smooth solution branch within the distance equal to the minimum "
"step size from the end point of this branch, and the corresponding tangent "
"given by <literal>tangent_sol</literal> and <literal>tangent_par</literal> "
"is directed towards the end point."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:120
msgid ""
"``{X, gamma, T_X, T_gamma} = gf_cont_struct_get(cont_struct CS, "
"'sing_data')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:122
msgid ""
"Return a singular point (<literal>X</literal>, <literal>gamma</literal>) "
"stored in the cont_struct object and a couple of arrays "
"(<literal>T_X</literal>, <literal>T_gamma</literal>) of tangents to all "
"located solution branches that emanate from there."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:127
msgid "``s = gf_cont_struct_get(cont_struct CS, 'char')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:129
msgid "Output a (unique) string representation of the cont_struct."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:131
msgid ""
"This can be used for performing comparisons between two different "
"cont_struct objects. This function is to be completed."
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:136
msgid "``gf_cont_struct_get(cont_struct CS, 'display')``"
msgstr ""

#: ../source/scilab/cmdref_gf_cont_struct_get.rst:138
msgid "Display a short summary for a cont_struct object."
msgstr ""
