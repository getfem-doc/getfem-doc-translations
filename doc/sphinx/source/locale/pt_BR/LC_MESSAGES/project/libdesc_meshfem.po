# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-03 01:38+0000\n"
"PO-Revision-Date: 2018-07-16 07:03+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/getfem-doc/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../source/project/libdesc_meshfem.rst:11
msgid "MeshFem module"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:14
#: ../source/project/libdesc_meshfem.rst:1
msgid "Description"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:16
msgid ""
"The MeshFem module aims to represent a finite element method (space) with "
"respect to a given mesh. The mesh_fem object will be permanently linked to "
"the given mesh and will be able to react to  changes in the mesh (addition "
"or deletion of elements, in particular). A mesh_fem object may associate a "
"different finite element method on each element of the mesh even though of "
"course, the most common case it that all the element share the same finite "
"element method."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:19
msgid "Files"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid "File(s)"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_mesh_fem.h` and :file:`getfem_mesh_fem.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Defines the structure representing a finite element on a whole mesh. Each "
"element of the mesh is associated with a finite element method. This is a "
"quite complex structure which perform dof identification and numbering, "
"allows a global linear reduction."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_mesh_fem_global_function.h` and "
":file:`getfem_mesh_fem_global_function.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Defines mesh_fem with fem defined as a fem_global_function. It provides "
"convenience methods for updating the list of base functions in the linked "
"fem_global_function."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_mesh_fem_product.h` and :file:`getfem_mesh_fem_product.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Produces a mesh_fem object which is a kind of direct product of two finite "
"element method. Useful for Xfem enrichment."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_mesh_fem_sum.h` and :file:`getfem_mesh_fem_sum.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Produces a mesh_fem object which is a kind of direct sum of two finite "
"element method. Useful for Xfem enrichment."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_partial_mesh_fem.h` and :file:`getfem_partial_mesh_fem.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid "Produces a mesh_fem with a reduced number of dofs"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_interpolation.h` and :file:`getfem_interpolation.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Interpolation between two finite element methods, possibly between different"
" meshes. The interpolation facilities of the high-level generic assembly can"
" be used instead."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_derivatives.h`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Interpolation of some derivatives of a finite element field on a "
"(discontinuous) Lagrange finite element. The interpolation facilities of the"
" high-level generic assembly can be used instead."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_inter_element.h` and :file:`getfem_inter_element.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"An attempt to make framework for inter-element computations (jump in normal "
"derivative for instance). To be continuated and perhaps integrated into the "
"generic assembly language."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_error_estimate.h` and :file:`getfem_error_estimate.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"An attempt to make framework for computation of error estimates. To be "
"continuated and perhaps integrated into the generic assembly language."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_crack_sif.h`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Crack support functions for computation of SIF(stress intensity factors)."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_torus.h` and :file:`getfem_torus.cc`"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Adapt a mesh_fem object which extends a 2D dimensional structure with a "
"radial dimension."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:39
msgid "State"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:41
msgid "Stable. Not evolving so much."
msgstr ""

#: ../source/project/libdesc_meshfem.rst:44
msgid "Perspectives"
msgstr ""

#: ../source/project/libdesc_meshfem.rst:46
msgid ""
"Parallelisation of dof numbering to be done. An optimal (an simple) "
"algorithm exists."
msgstr ""
