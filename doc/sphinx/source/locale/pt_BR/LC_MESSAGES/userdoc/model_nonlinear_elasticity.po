# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-27 01:34+0000\n"
"PO-Revision-Date: 2018-07-16 07:04+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/tkoyama010/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../source/userdoc/model_nonlinear_elasticity.rst:12
msgid "Finite strain Elasticity bricks"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:14
msgid ""
"This brick implements some classical hyperelastic constitutive law for large"
" deformation elasticity."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:17
msgid "Some recalls on finite strain elasticity"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:19
msgid ""
"Let :math:`\\Omega` be the reference configuration and :math:`\\Omega_t` the"
" deformed configuration of an elastic media. Then for :math:`X \\in \\Omega`"
" we will denote by :math:`\\Phi(x) = u(X) + X` the deformation. the vector "
"field :math:`u` is the displacement with respect to the initial position."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:21
msgid "The Cauchy-Green tensor is defined by"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:23
msgid "C = \\nabla\\Phi^T\\nabla\\Phi"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:27
msgid "The deformation tensor (Green-Lagrange)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:29
msgid ""
"E = \\frac{1}{2}\\left(\\nabla\\Phi^T\\nabla\\Phi - I)\\right)\n"
"  = \\frac{1}{2}\\left({\\nabla u^T}{\\nabla u} + {\\nabla u^T} + {\\nabla u}\\right)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:35
msgid ""
"(In the case of linear elasticity, :math:`{\\nabla u^T}{\\nabla u}` is "
"neglected)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:37
msgid "One has"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:39
msgid "C = \\nabla\\Phi^T\\nabla\\Phi = 2 E + I."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:43
msgid ""
"Both tensors :math:`E` and :math:`C` are used to describe finite strain "
"elasticity constitutive laws."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:46
msgid "Main invariants and derivatives"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:48
msgid ""
"The description of finite strain elasticity constitutive laws often requires"
" the principal invariants of the deformation tensors:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:50
msgid ""
":math:`i_1,i_2,i_3` are the invariants of orders :math:`1,2` and :math:`3`:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:52
msgid ""
"i_1( E) = \\mbox{tr } E \\hspace{5cm} &i_1( C) = 2\\mbox{tr } E + 3\\\\\n"
"i_2( E) = \\frac{(\\mbox{tr } E)^2 - \\mbox{tr } E^2}{2}\\quad\\hspace{3cm}& i_2( C)=4i_2( E)+4i_1( E)+3\\\\\n"
"i_3( E) = \\det E \\hspace{5cm} &i_3( C) = 8i_3( E) + 4i_2( E) + 2i_1( E) + 1"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:58
msgid ""
"The derivatives of the invariants with respect to the tensor :math:`E` in "
"the direction :math:`H` are:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:60
msgid ""
"&\\frac{\\partial i_1}{\\partial E}(E;H) = I:H = \\mbox{tr } H\\\\\n"
"&\\frac{\\partial i_2}{\\partial E}(E;H) = (i_1( E)I -  E^T):H = (\\mbox{tr }  E)(\\mbox{tr } H) -  E^T:H\\\\\n"
"&\\frac{\\partial i_3}{\\partial E}(E;H) = i_3( E)(E^{-T}):H  = (i_2( E)I - i_1( E) E +  E^2):H \\mbox{ in 3D}."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:66
msgid "We will write"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:68
msgid ""
"&\\frac{\\partial i_1}{\\partial E}(E) = I\\\\\n"
"&\\frac{\\partial i_2}{\\partial E}(E) = i_1( E)I -  E^T\\\\\n"
"&\\frac{\\partial i_3}{\\partial E}(E) = i_3( E)E^{-T}."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:74
msgid "Let us also recall that"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:76
msgid "\\frac{\\partial (M^{-1})}{\\partial M}(M;H) = -M^{-1}HM^{-1}"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:81
msgid ""
"The second derivatives of the invariants are fourth order tensors defined by"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:83
msgid ""
"&\\frac{\\partial^2 i_1}{\\partial E^2}(E) = 0\\\\\n"
"&\\frac{\\partial^2 i_2}{\\partial E^2}(E)_{ijkl} = \\delta_{ij}\\delta_{kl} - \\delta_{il}\\delta_{jk} \\\\\n"
"&\\frac{\\partial^2 i_3}{\\partial E^2}(E)_{ijkl} = i_3(E) (E^{-1}_{ji}E^{-1}_{lk} - E^{-1}_{jk}E^{-1}_{li})."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:90
msgid ""
"The notation :math:`A:B` denotes the Frobenius product :math:`A:B = "
"\\displaystyle\\sum_{ij}A_{ij}B_{ij}`. This product has the following "
"properties:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:92
msgid ""
"A:B &= \\mbox{tr }(A^TB) = \\mbox{tr }(AB^T) = \\mbox{tr }(BA^T) = \\mbox{tr }(B^TA),\\\\\n"
"A:BC &= B^TA:C,\\\\\n"
"A:BC &= AC^T:B,\\\\\n"
"\\mbox{tr }(ABC) &= \\mbox{tr }(B^TA^TC^T)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:100
msgid "Note also that"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:102
msgid ""
"\\frac{\\partial i_j}{\\partial E}(C;H) = 2 \\frac{\\partial i_j}{\\partial "
"C}(C;H)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:106
msgid ""
"This property enables us to write the constitutive laws as a function of the"
" Cauchy-Green tensor invariants, especially for the case of the generalized "
"Blatz-Ko strain energy."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:110
msgid "Potential elastic energy and its derivative"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:112
msgid ""
"The stress in the reference configuration can be describe by the second "
"Piola-Kirchhoff stress tensor :math:`{\\hat{\\hat{\\sigma}}} = "
"\\nabla\\Phi^{-1}\\sigma\\nabla\\Phi^{-t}~\\det \\nabla\\Phi` where "
":math:`\\sigma` is the Cauchy stress tensor in the deformed configuration "
":math:`\\Omega_t`. An hyper-elastic constitutive law is given by"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:114
msgid ""
"{\\hat{\\hat{\\sigma}}} = \\frac{\\partial}{\\partial E} {W}(E) = "
"2\\frac{\\partial}{\\partial C} {W}(C)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:118
msgid ""
"where :math:`{W}` is the density of strain energy of the material. The total"
" strain energy is given by"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:120
msgid "\\mathcal{I}(u) = \\int_{\\Omega} W( E(u)) dX"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:124
msgid ""
"and the derivative of the energy in a direction :math:`v` can be writen"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:126
msgid ""
"D\\mathcal{I}(u;v) = \\int_{\\Omega} \\frac{\\partial W}{\\partial E}( "
"E(u)):(I+{\\nabla u^T}){\\nabla v}  dX"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:130
msgid "because in particular"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:132
msgid ""
"D E(u;v) &= \\frac{1}{2}({\\nabla u^T}{\\nabla v} + {\\nabla v^T}{\\nabla u} + {\\nabla v^T} + {\\nabla v})\\\\\n"
"&= \\frac{1}{2}({\\nabla v^T}(I+{\\nabla u}) + (I+{\\nabla u^T}){\\nabla v})"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:137
msgid ""
"and :math:`A:B = A:(B+B^T)/2` when A is symmetric which is the case for "
":math:`{\\hat{\\hat{\\sigma}}}`."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:139
msgid ""
"Another way is to consider the static equilibrium which can be written as "
"follows in the reference configuration:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:141
msgid ""
"-\\mbox{div } \\left((I+{\\nabla u}){\\hat{\\hat{\\sigma}}}\\right) = f.\n"
"\n"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:145
msgid "Integrating by parts, one obtains:"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:147
msgid "\\int_{\\Omega}(I + {\\nabla u}){\\hat{\\hat{\\sigma}}} : {\\nabla v}  dX = l(v)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:153
msgid "Tangent matrix"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:155
msgid ""
"The displacement :math:`u` is fixed. In order to obtain the tangent matrix, "
"one subsitutes :math:`u` with :math:`u+h`"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:157
msgid ""
"\\int_\\Omega(I + {\\nabla u} + {\\nabla h}){\\hat{\\hat{\\sigma}}}( E(u)+ "
"E(h) + \\frac{1}{2}({\\nabla h^T}{\\nabla u}+{\\nabla u^T}{\\nabla h})) : "
"{\\nabla v}  dX = l(v)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:161
msgid "and considers the linear part w.r.t. :math:`h`, which is"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:163
msgid ""
"\\int_\\Omega{\\nabla h}~{\\hat{\\hat{\\sigma}}}( E(u)) : {\\nabla v}  dX +\\\\\n"
"\\int_\\Omega \\frac{\\partial^2 W}{\\partial E^2}\\left(\\frac{{\\nabla h}+{\\nabla h^T}+{\\nabla h^T}{\\nabla u}+{\\nabla u^T}{\\nabla h}}{2}\\right) : (I+{\\nabla u}^T){\\nabla v}  dX"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:169
msgid ""
"which is symmetric w.r.t. :math:`v` and :math:`h`. It can be rewritten as"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:171
msgid ""
"\\int_\\Omega {\\nabla h}~{\\hat{\\hat{\\sigma}}}( E(u)) : {\\nabla v}  + "
"\\mathcal{A}((I+{\\nabla u^T}){\\nabla h}):(I+{\\nabla u}^T){\\nabla v}~ dX"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:175
msgid ""
"where :math:`\\mathcal{A}` is the symmetric "
":math:`3\\times3\\times3\\times3` tensor given by :math:`\\mathcal{A}_{ijkl}"
" = ((\\frac{\\partial^2 W}{\\partial E^2})_{ijkl} + (\\frac{\\partial^2 "
"W}{\\partial E^2})_{ijlk})/2`."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:178
msgid "Some classical constitutive laws"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:182
msgid "``Linearized: Saint-Venant Kirchhoff  law (small deformations)``"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:184
msgid ""
"{W} &= \\frac{\\lambda}{2}i_1( E)^2 + \\mu i_1( E^2)\\\\\n"
"{\\hat{\\hat{\\sigma}}}   &= \\lambda i_1( E)I + 2\\mu E\\\\\n"
"\\mathcal{A} &= \\lambda i_1(H)I + \\mu (H + H^T)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:191
msgid "``Three parameters Mooney-Rivlin law``"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:193
msgid "Compressible material."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:195
msgid "{W} = c_1(j_1( C) - 3) + c_2(j_2( C)-3) + d_1(i_3( C)^{1/2}-1)^2"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:199
msgid ""
"where :math:`c_1`, :math:`c_2` and :math:`d_1` are given coefficients and"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:201
msgid ""
"j_1(C) &= i_1(C) i_3(C)^{-1/3}\\\\\n"
"j_2(C) &= i_2(C) i_3(C)^{-2/3}\\\\\n"
"\\frac{\\partial j_1}{\\partial C}(C) &= i_3(C)^{-1/3}\\left(\\frac{\\partial i_1}{\\partial C}(C) - \\frac{i_1(C)}{3i_3(C)} \\frac{\\partial i_3}{\\partial C}(C)\\right)\\\\\n"
"\\frac{\\partial j_2}{\\partial C}(C) &= i_3(C)^{-2/3}\\left(\\frac{\\partial i_2}{\\partial C}(C) - \\frac{2i_2(C)}{3i_3(C)} \\frac{\\partial i_3}{\\partial C}(C)\\right)\\\\\n"
"\\frac{\\partial^2 j_1}{\\partial C^2}(C) &= i_3(C)^{-1/3}\\left(\\frac{4i_1(C)}{9i_3(C)^2} \\frac{\\partial i_3}{\\partial C}(C) \\otimes \\frac{\\partial i_3}{\\partial C}(C) - \\frac{1}{3i_3(C)}\\left(\\frac{\\partial i_3}{\\partial C}(C) \\otimes \\frac{\\partial i_1}{\\partial C}(C)\\right.\\right. \\\\\n"
"& ~~~~~~~~~~~~~~~~\\left.\\left. + \\frac{\\partial i_1}{\\partial C}(C) \\otimes \\frac{\\partial i_3}{\\partial C}(C)\\right) - \\frac{i_1(C)}{3i_3(C)} \\frac{\\partial^2 i_3}{\\partial C^2}(C)\\right)\\\\\n"
"\\frac{\\partial^2 j_2}{\\partial C^2}(C) &= i_3(C)^{-2/3}\\left(\\frac{\\partial^2 i_2}{\\partial C^2}(C) + \\frac{10i_2(C)}{9i_3(C)^2} \\frac{\\partial i_3}{\\partial C}(C) \\otimes \\frac{\\partial i_3}{\\partial C}(C) \\right. \\\\\n"
"& ~~~~~~~~~~~~~~~~\\left. - \\frac{2}{3i_3(C)}(\\frac{\\partial i_3}{\\partial C}(C) \\otimes \\frac{\\partial i_2}{\\partial C}(C) + \\frac{\\partial i_2}{\\partial C}(C) \\otimes \\frac{\\partial i_3}{\\partial C}(C)) - \\frac{2i_2(C)}{3i_3(C)} \\frac{\\partial^2 i_3}{\\partial C^2}(C)\\right)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:212
msgid "and then"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:214
msgid ""
"{\\hat{\\hat{\\sigma}}}   &= 2c_1 \\frac{\\partial j_1}{\\partial C}(C) + 2c_2 \\frac{\\partial j_2}{\\partial C}(C)  + 2d_1\\left(1-i_3(C)^{-1/2}\\right)\\frac{\\partial i_3}{\\partial C}(C) \\\\\n"
"\\mathcal{B} &= 4 c_1 \\frac{\\partial^2 j_1}{\\partial C^2}(C) + 4c_2 \\frac{\\partial^2 j_2}{\\partial C^2}(C) + 4d_1\\left(\\left(1-i_3(C)^{-1/2}\\right)\\frac{\\partial^2 i_3}{\\partial C^2}(C) + \\frac{1}{2}i_3(C)^{-3/2} \\frac{\\partial i_3}{\\partial C}(C) \\otimes \\frac{\\partial i_3}{\\partial C}(C)\\right) \\\\\n"
"\\mathcal{A}_{ijkl} &= (\\mathcal{B}_{ijkl} + \\mathcal{B}_{jikl})/2"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:220
msgid "Incompressible material."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:222
msgid ""
"{d_1} = 0\n"
"\\mbox{ with the additional constraint: }\n"
"i_3( C) = 1"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:228
msgid ""
"The incompressibility constraint :math:`i_3( C) = 1` is handled with a "
"Lagrange multiplier :math:`p` (the pressure)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:230
msgid ""
"constraint: :math:`\\sigma = -pI \\Rightarrow {\\hat{\\hat{\\sigma}}} = "
"-p\\nabla\\Phi\\nabla\\Phi^{-T}\\det\\nabla\\Phi`"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:232
msgid ""
"1 - i_3(\\nabla\\Phi) &= 0 \\\\\n"
"-\\int_{\\Omega_0} (\\det\\nabla\\Phi  -1) q  dX &= 0 ~~~ \\forall q"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:238
msgid ""
"B &= -\\int_{\\Omega_0} p(\\nabla\\Phi)^{-T} \\det \\nabla\\Phi : \\nabla v  dX \\\\\n"
"K &= \\int_{\\Omega_0} \\left( p(\\nabla\\Phi)^{-T}(\\nabla h)^{T}(\\nabla\\Phi)^{-T}\\det\\nabla\\Phi : \\nabla v  dX -\n"
"p(\\nabla\\Phi)^{-T}(\\det \\nabla\\Phi(\\nabla\\Phi)^{-T}:\\nabla h) : \\nabla v \\right)  dX\\\\\n"
"&= \\int_{\\Omega_0} p(\\nabla h^T\\nabla\\Phi^{-T}):(\\nabla\\Phi^{-1}\\nabla v)\\det\\nabla\\Phi dX - \\int_{\\Omega_0} p(\\nabla\\Phi^{-T}:\\nabla h)(\\nabla\\Phi^{-T}:\\nabla v)\\det\\nabla\\Phi dX"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:247
msgid "``Ciarlet-Geymonat law``"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:249
msgid ""
"{W} = a\\; i_1(C) + (\\frac{\\mu}{2} - a)i_2(C) + (\\frac{\\lambda}{4} - "
"\\frac{\\mu}{2} + a)i_3(C) - (\\frac{\\mu}{2}+\\frac{\\lambda}{4})\\log "
"\\det(C)"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:253
msgid ""
"with  :math:`\\lambda, \\mu` the Lame coefficients and "
":math:`\\max(0,\\frac{\\mu}{2}-\\frac{\\lambda}{4})<a<\\frac{\\mu}{2}` (see "
"[ciarlet1988]_)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:257
msgid "``Generalized Blatz-Ko law``"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:259
msgid "{W} = (a i_1(C) + b i_3(C)^{1/2} + c\\frac{i_2(C)}{i_3(C)} + d)^n"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:263
msgid ""
"Since :math:`\\frac{\\partial}{\\partial C} {W}(C) = "
"\\displaystyle\\sum_{j}\\frac{\\partial W}{\\partial i_j(C)} "
"\\frac{\\partial i_j(C)}{\\partial C}`, and "
":math:`\\frac{\\partial^2}{\\partial C^2} {W}(C) = \\displaystyle\\sum_{j} "
"\\displaystyle\\sum_{k} \\frac{\\partial^2 W}{\\partial i_j(C) \\partial "
"i_k(C)} \\frac{\\partial i_k(C)}{\\partial C} \\otimes \\frac{\\partial "
"i_j(C)}{\\partial C} + \\displaystyle\\sum_{j} \\frac{\\partial W}{\\partial"
" i_j(C)} \\frac{\\partial^2 i_j(C)}{\\partial C^2}` we must compute the "
"derivatives of the strain energy function with respect to the Cauchy-Green "
"tensor invariants (we don't need to compute the invariants derivatives with "
"respect to :math:`E` since :math:`\\frac{\\partial i_j}{\\partial E}(C;H) = "
"2 \\frac{\\partial i_j}{\\partial C}(C;H)`) :"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:265
msgid ""
"\\begin{array}{l}\n"
"\\frac{\\partial W}{\\partial i_1(C)} = naZ^{n-1}\n"
"~~~~\\mbox{with } Z = (a i_1(C) + b i_3(C)^{1/2} + c\\frac{i_2(C)}{i_3(C)} + d)\\\\\n"
"\\frac{\\partial W}{\\partial i_2(C)} = n\\frac{c}{i_3(C)}Z^{n-1}\\\\\n"
"\\frac{\\partial W}{\\partial i_3(C)} = n(\\frac{b}{2i_3(C)^{1/2}}-\\frac{ci_2(C)}{i_3(C)^2})Z^{n-1}\\\\\n"
"\\frac{\\partial W^2}{\\partial^2 i_1(C)} = n(n-1)A^2Z^{n-2}\\\\\n"
"\\frac{\\partial W^2}{\\partial i_1(C) \\partial i_2(C)} = n(n-1)A\\frac{c}{i_3(C)}Z^{n-2}\\\\\n"
"\\frac{\\partial W^2}{\\partial i_1(C) \\partial i_3(C)} = n(n-1)A(\\frac{b}{2i_3(C)^{1/2}}-\\frac{ci_2(C)}{i_3(C)^2})Z^{n-2}\\\\\n"
"\\frac{\\partial W^2}{\\partial^2 i_2(C)} = n(n-1)\\frac{c^2}{i_3(C)^2}Z^{n-2}\\\\\n"
"\\frac{\\partial W^2}{\\partial i_2(C) \\partial i_3(C)} = n(n-1)(\\frac{b}{2i_3(C)^{1/2}}-\\frac{ci_2(C)}{i_3(C)^2})Z^{n-2} - n\\frac{c^2}{i_3(C)^2}Z^{n-1}\\\\\n"
"\\frac{\\partial W^2}{\\partial i_3(C)^2} = n(n-1)(\\frac{b}{2i_3(C)^{1/2}}-\\frac{ci_2(C)}{i_3(C)^2})^2Z^{n-2} + n(-\\frac{b}{4i_3(C)^{3/2}}+2\\frac{ci_2(C)}{i_3(C)^4})Z^{n-1}\n"
"\\end{array}\n"
"\n"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:280
msgid "``Plane strain hyper-elasticity``"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:282
msgid ""
"All previous models are valid in volumic domains. Corresponding plane strain"
" 2D models can be obtained by restricting the stress tensor and the fourth "
"order tensor :math:`\\mathcal{A}` to their plane components."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:287
msgid "Add an nonlinear elasticity brick to a model"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:289
msgid ""
"This brick represents a large strain elasticity problem. It is defined in "
"the files :file:`getfem/getfem_nonlinear_elasticity.h` and "
":file:`getfem/getfem_nonlinear_elasticity.cc`. The function adding this "
"brick to a model is ::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:294
msgid ""
"where ``AHL`` is an object of type ``getfem::abstract_hyperelastic_law`` "
"which represents the considered hyperelastic law. It has to be chosen "
"between: ::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:302
msgid ""
"The Saint-Venant Kirchhoff law is a linearized law defined with the two Lame"
" coefficients, Ciarlet Geymonat law is defined with the two Lame "
"coefficients and an additional coefficient (:math:`\\lambda, \\mu, a`)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:304
msgid ""
"The Mooney-Rivlin law accepts two optional flags, the first one determines "
"if the material will be compressible (:math:`d_1 \\neq 0`) and the second "
"one determines if the material is neo Hookean (:math:`c_2 = 0`). Depending "
"on these flags one to three coefficients may be necessary. By default it is "
"defined as incompressible and non neo Hookean, thus it needs two material "
"coefficients (:math:`c_1`, :math:`c_2`). In this case, it is to be used with"
" the large strain incompressibility condition."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:306
msgid ""
"The plane strain hyperelastic law takes a pointer on a hyperelastic law as a"
" parameter and performs a 2D plane strain approximation."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:308
msgid ""
"``md`` is the model variable, ``mim`` the integration method, ``varname`` "
"the string being the name of the variable on which the term is added, "
"``dataname`` the string being the name of the data in the model representing"
" the coefficients of the law (can be constant or describe on a finite "
"element method) and ``region`` is the region on which the term is considered"
" (by default, all the mesh)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:311
msgid ""
"The program :file:`nonlinear_elastostatic.cc` in :file:`tests` directory and"
" :file:`demo_nonlinear_elasticity.m` in :file:`interface/tests/matlab` "
"directory are some examples of use of this brick with or without an "
"incompressibility condition."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:314
msgid ""
"Note that the addition of a new hyperelastic constitutive law consists in "
"furnishing the expression of the strain energy, the stress tensor and the "
"derivative of the stress tensor. See the file  "
":file:`getfem/getfem_nonlinear_elasticity.cc` for more details. In "
"particular, expression of the invariants and their derivatives are "
"available."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:317
msgid ""
"A function which computes the Von Mises or Tresca stresses is also "
"available: ::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:322
msgid ""
"It returns a vector of the degrees of freedom of the Von Mises or Tresca "
"stress on the finite element method mf_vm. ``tresca`` is a boolean whose "
"value should be ``true`` for Tresca stress and ``false`` for Von Mises "
"stress."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:327
msgid "Add a large strain incompressibility brick to a model"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:330
msgid ""
"This brick adds an incompressibility condition in a large strain problem of "
"type"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:332
msgid "\\mbox{det}(I+\\nabla u) = 1,"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:336
msgid ""
"A Lagrange multiplier representing the pressure is introduced in a mixed "
"formulation. The function adding this brick to a model is ::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:342
msgid ""
"where ``md`` is the model, ``mim`` the integration method, ``varname`` the "
"variable of the model on which the incompressibility condition is added, "
"``multanme`` the multiplier variable corresponding to the pressure (be aware"
" that at least a linear Ladyzhenskaja-Babuska-Brezzi inf-sup condition is "
"satisfied between the f.e.m. of the variable and the one of the multiplier)."
" ``region`` is an optional parameter correponding to the mesh region on "
"which the term is considered (by default, all the mesh)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:346
msgid "High-level generic assembly versions"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:348
msgid ""
"The generic weak form language (GWFL) gives access to the hyperelastic "
"potential and constitutive laws implemented in |gf|. This allows to directly"
" use them in the language, for instance using a generic assembly brick in a "
"model or for interpolation of certain quantities (the stress for instance)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:350
msgid ""
"Here is the list of nonlinear operators in the language which can be useful "
"for nonlinear elasticity::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:362
msgid "The potentials::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:384
msgid "The second Piola-Kirchhoff stress tensors::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:406
msgid ""
"Note that the derivatives with respect to the material parameters have not "
"been implemented apart for the Saint Venant Kirchhoff hyperelastic law. "
"Therefore, it is not possible to make the parameter depend on other "
"variables of a model (derivatives are not necessary complicated to implement"
" but for the moment, only a wrapper with old implementations has been "
"written)."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:408
msgid ""
"Note that the coupling of models is to be done at the weak formulation "
"level. In a general way, it is recommended not to use the potential to "
"define a problem. Main couplings cannot be obtained at the potential level. "
"Thus the use of potential should be restricted to the actual computation of "
"the potential."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:410
msgid ""
"An example of use to add a Saint Venant-Kirchhoff hyperelastic term to a "
"variable ``u`` in a model or a ga_workspace is given by the addition of the "
"following assembly string::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:414
msgid ""
"Note that in that case, ``lambda`` and ``mu`` have to be declared data of "
"the model/ga_workspace. It is of course possible to replace them by explicit"
" constants or expressions depending on several data."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:416
msgid ""
"Concerning the incompressible Mooney-Rivlin law, it has to be completed by "
"an incompressibility term. For instance by adding the following "
"incompressibility brick::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:420
msgid ""
"This brick just adds the term ``p*(1-Det(Id(meshdim)+Grad_u))`` if ``p`` is "
"the multiplier and ``u`` the variable which represents the displacement."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:422
msgid ""
"The addition of an hyperelastic term to a model can also be done thanks to "
"the following function::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:427
msgid ""
"where ``md`` is the model, ``mim`` the integration method, ``varname`` the "
"variable of the model representing the large strain displacement, "
"``lawname`` is the constitutive law name which could be "
"``Saint_Venant_Kirchhoff``, ``Generalized_Blatz_Ko``, ``Ciarlet_Geymonat``, "
"``Incompressible_Mooney_Rivlin``, ``Compressible_Mooney_Rivlin``, "
"``Incompressible_Neo_Hookean``, ``Compressible_Neo_Hookean``, "
"``Compressible_Neo_Hookean_Bonet`` or ``Compressible_Neo_Hookean_Ciarlet``. "
"``params`` is a string representing the parameters of the law defined as a "
"small vector or a vector field."
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:429
msgid "The Von Mises stress can be interpolated with the following function::"
msgstr ""

#: ../source/userdoc/model_nonlinear_elasticity.rst:434
msgid ""
"where ``md`` is the model, ``varname`` the variable of the model "
"representing the large strain displacement, ``lawname`` is the constitutive "
"law name (see previou brick), ``params`` is a string representing the "
"parameters of the law, ``mf_vm`` a (preferably discontinuous) Lagrange  "
"finite element method on which the interpolation will be done and ``VM`` a "
"vector of type ``model_real_plain_vector`` in which the interpolation will "
"be stored."
msgstr ""
