# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-04 01:40+0000\n"
"PO-Revision-Date: 2020-04-23 00:22+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/getfem-doc/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../source/matlab_octave/oocmd.rst:10
msgid "|gfm| OO-commands"
msgstr ""

#: ../source/matlab_octave/oocmd.rst:12
msgid ""
"The toolbox comes with a set of |octv| / |mlab| objects `mathworks-oo`_, "
"(look at the :file:`@gf*` sub-directories in the toolbox directory). These "
"object are no more than the getfem object handles, which are flagged by "
"|octv| / |mlab| as objects."
msgstr ""

#: ../source/matlab_octave/oocmd.rst:16
msgid ""
"In order to use these objects, you have to call their constructors: "
"``gfMesh``, ``gfMeshFem``, ``gfGeoTrans``, ``gfFem``, ``gfInteg``.  These "
"constructor just call the corresponding |gfm| function (i.e.  ``gf_mesh``, "
"``gf_mesh_fem``, ...), and convert the structure returned by these function "
"into a |octv| / |mlab| object. There is also a ``gfObject`` function which "
"converts any getfem handle into the corresponding |octv| / |mlab| object."
msgstr ""

#: ../source/matlab_octave/oocmd.rst:23
msgid ""
"With such object, the most interesting feature is that you do not have to "
"call the \"long\" functions names ``gf_mesh_fem_get(obj,...)``, "
"``gf_slice_set(obj,...)`` etc., instead you just call the shorter "
"``get(obj,...)`` or ``set(obj,...)`` whatever the type of ``obj`` is."
msgstr ""

#: ../source/matlab_octave/oocmd.rst:28
msgid ""
"A small number of \"pseudo-properties\" are also defined on these objects, "
"for example if ``m`` is a ``gfMesh`` object, you can use directly "
"``m.nbpts`` instead of ``get(m, 'nbpts')``."
msgstr ""

#: ../source/matlab_octave/oocmd.rst:32
msgid "As an example::"
msgstr ""

#: ../source/matlab_octave/oocmd.rst:78
msgid ""
"Although this interface seems more convenient, you must be aware that this "
"always induce a call to a mex-file, and additional |octv| / |mlab| code::"
msgstr ""

#: ../source/matlab_octave/oocmd.rst:91
msgid ""
"Hence you should always try to store data in |octv| / |mlab| arrays instead "
"of repetitively calling the getfem functions."
msgstr ""

#: ../source/matlab_octave/oocmd.rst:94
msgid ""
"Avalaible object types are :envvar:`gfCvStruct`, :envvar:`gfGeoTrans`, "
":envvar:`gfEltm`, :envvar:`gfInteg`, :envvar:`gfFem`, :envvar:`gfMesh`, "
":envvar:`gfMeshFem`, :envvar:`gfMeshIm`, :envvar:`gfMdBrick`, "
":envvar:`gfMdState`, :envvar:`gfModel`, :envvar:`gfSpmat`, "
":envvar:`gfPrecond`, and :envvar:`gfSlice`."
msgstr ""
