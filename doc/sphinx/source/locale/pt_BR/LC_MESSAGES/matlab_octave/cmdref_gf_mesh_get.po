# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-09 00:54+0000\n"
"PO-Revision-Date: 2020-04-26 01:50+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/getfem-doc/teams/87607/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:8
msgid "gf_mesh_get"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:10
msgid "**Synopsis**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:62
msgid "**Description :**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:65
msgid ""
"General mesh inquiry function. All these functions accept also a mesh_fem "
"argument instead of a mesh M (in that case, the mesh_fem linked mesh will be"
" used). Note that when your mesh is recognized as a Matlab object , you can "
"simply use \"get(M, 'dim')\" instead of \"gf_mesh_get(M, 'dim')\"."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:72
msgid "**Command list :**"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:76
msgid "``d = gf_mesh_get(mesh M, 'dim')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:78
msgid "Get the dimension of the mesh (2 for a 2D mesh, etc)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:81
msgid "``np = gf_mesh_get(mesh M, 'nbpts')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:83
msgid "Get the number of points of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:86
msgid "``nc = gf_mesh_get(mesh M, 'nbcvs')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:88
msgid "Get the number of convexes of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:91
msgid "``P = gf_mesh_get(mesh M, 'pts'[, ivec PIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:93
msgid "Return the list of point coordinates of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:95
msgid ""
"Each column of the returned matrix contains the coordinates of one point. If"
" the optional argument `PIDs` was given, only the points whose #id is listed"
" in this vector are returned. Otherwise, the returned matrix will have "
"gf_mesh_get(mesh M, 'max_pid') columns, which might be greater than "
"gf_mesh_get(mesh M, 'nbpts') (if some points of the mesh have been destroyed"
" and no call to gf_mesh_set(mesh M, 'optimize structure') have been issued)."
" The columns corresponding to deleted points will be filled with NaN. You "
"can use gf_mesh_get(mesh M, 'pid') to filter such invalid points."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:106
msgid "``Pid = gf_mesh_get(mesh M, 'pid')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:108
msgid "Return the list of points #id of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:110
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbpts'), especially if some points have been removed "
"from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering. Pid is a row vector."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:117
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in faces', imat CVFIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:119
msgid "Return point #id listed in `CVFIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:121
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers. On return, `PIDs` is a row vector containing "
"points #id."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:126
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in cvids', imat CVIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:128
msgid "Return point #id listed in `CVIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:130
#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:137
msgid "`PIDs` is a row vector containing points #id."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:133
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in regions', imat RIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:135
msgid "Return point #id listed in `RIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:140
msgid ""
"``PIDs = gf_mesh_get(mesh M, 'pid from coords', mat PTS[, scalar "
"radius=0])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:142
msgid "Return point #id whose coordinates are listed in `PTS`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:144
msgid ""
"`PTS` is an array containing a list of point coordinates. On return, `PIDs` "
"is a row vector containing points #id for each point found in `eps` range, "
"and -1 for those which where not found in the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:150
msgid "``{Pid, IDx} = gf_mesh_get(mesh M, 'pid from cvid'[, imat CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:152
msgid "Return the points attached to each convex of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:154
msgid ""
"If `CVIDs` is omitted, all the convexes will be considered (equivalent to "
"`CVIDs = gf_mesh_get(mesh M, 'max cvid')`). `IDx` is a row vector, "
"length(IDx) = length(CVIDs)+1. `Pid` is a row vector containing the "
"concatenated list of #id of points of each convex in `CVIDs`. Each entry of "
"`IDx` is the position of the corresponding convex point list in `Pid`. "
"Hence, for example, the list of #id of points of the second convex is "
"Pid(IDx(2):IDx(3)-1)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:163
#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:181
msgid ""
"If `CVIDs` contains convex #id which do not exist in the mesh, their point "
"list will be empty."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:167
msgid "``{Pts, IDx} = gf_mesh_get(mesh M, 'pts from cvid'[, imat CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:169
msgid "Search point listed in `CVID`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:171
msgid ""
"Return `Pts` and `IDx`. If `CVIDs` is omitted, all the convexes will be "
"considered (equivalent to `CVIDs = gf_mesh_get(mesh M, 'max cvid')`). `IDx` "
"is a row vector, length(IDx) = length(CVIDs)+1. `Pts` is a row vector "
"containing the concatenated list of points of each convex in `CVIDs`. Each "
"entry of `IDx` is the position of the corresponding convex point list in "
"`Pts`. Hence, for example, the list of points of the second convex is "
"Pts(:,IDx(2):IDx(3)-1)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:185
msgid "``CVid = gf_mesh_get(mesh M, 'cvid')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:187
msgid "Return the list of all convex #id."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:189
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbcvs'), especially if some points have been removed "
"from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering. CVid is a row vector."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:196
msgid "``m = gf_mesh_get(mesh M, 'max pid')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:198
msgid "Return the maximum #id of all points in the mesh (see 'max cvid')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:201
msgid "``m = gf_mesh_get(mesh M, 'max cvid')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:203
msgid "Return the maximum #id of all convexes in the mesh (see 'max pid')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:206
msgid "``[E,C] = gf_mesh_get(mesh M, 'edges' [, CVLST][, 'merge'])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:208
#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:223
msgid "[OBSOLETE FUNCTION! will be removed in a future release]"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:210
msgid ""
"Return the list of edges of mesh M for the convexes listed in the row vector"
" CVLST. E is a 2 x nb_edges matrix containing point indices. If CVLST is "
"omitted, then the edges of all convexes are returned. If CVLST has two rows "
"then the first row is supposed to contain convex numbers, and the second "
"face numbers, of which the edges will be returned.  If 'merge' is indicated,"
" all common edges of convexes are merged in a single edge.  If the optional "
"output argument C is specified, it will contain the convex number associated"
" with each edge."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:221
msgid "``[E,C] = gf_mesh_get(mesh M, 'curved edges', int N [, CVLST])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:225
msgid ""
"Return E and C. More sophisticated version of gf_mesh_get(mesh M, 'edges') "
"designed for curved elements. This one will return N (N>=2) points of the "
"(curved) edges. With N==2, this is equivalent to gf_mesh_get(mesh M, "
"'edges'). Since the points are no more always part of the mesh, their "
"coordinates are returned instead of points number, in the array E which is a"
" [ mesh_dim x 2 x nb_edges ] array.  If the optional output argument C is "
"specified, it will contain the convex number associated with each edge."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:236
msgid "``PIDs = gf_mesh_get(mesh M, 'orphaned pid')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:238
msgid "Return point #id which are not linked to a convex."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:241
msgid ""
"``CVIDs = gf_mesh_get(mesh M, 'cvid from pid', ivec PIDs[, bool "
"share=False])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:243
msgid "Return convex #ids related with the point #ids given in `PIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:245
msgid ""
"If `share=False`, search convex whose vertex #ids are in `PIDs`. If "
"`share=True`, search convex #ids that share the point #ids given in `PIDs`. "
"`CVIDs` is a row vector (possibly empty)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:251
msgid "``CVFIDs = gf_mesh_get(mesh M, 'faces from pid', ivec PIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:253
msgid "Return the convex faces whose vertex #ids are in `PIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:255
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). For a convex face to"
" be returned, EACH of its points have to be listed in `PIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:261
msgid "``CVFIDs = gf_mesh_get(mesh M, 'outer faces'[, dim][, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:263
msgid "Return the set of faces not shared by two elements."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:265
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). If `dim`"
" is provided, the function is forced to detect faces of elements that have "
"dimension `dim`, e.g. `dim`=2 will detect edges of surface elements, even if"
" these belong to a 3D mesh. If `CVIDs` is not given, all convexes are "
"considered, and the function basically returns the mesh boundary. If `CVIDs`"
" is given, it returns the boundary of the convex set whose #ids are listed "
"in `CVIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:276
msgid "``CVFIDs = gf_mesh_get(mesh M, 'inner faces'[, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:278
msgid ""
"Return the set of faces shared at least by two elements in CVIDs. Each face "
"is represented only once and is arbitrarily chosen between the two neighbor "
"elements."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:283
msgid "``CVFIDs = gf_mesh_get(mesh M, 'all faces'[, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:285
msgid ""
"Return the set of faces of the in CVIDs (in all the mesh if CVIDs is "
"omitted). Note that the face shared by two neighbor elements will be "
"represented twice."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:290
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces with direction', vec v, scalar "
"angle[, dim][, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:292
msgid ""
"Return the set of faces not shared by two convexes and with a mean outward "
"vector lying within an angle `angle` (in radians) from vector `v`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:294
#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:305
#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:316
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). The "
"argument `dim` works as in outer_faces(). If `CVIDs` is given, it returns "
"portion of the boundary of the convex set defined by the #ids listed in "
"`CVIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:301
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in box', vec pmin, vec pmax[, "
"dim][, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:303
msgid ""
"Return the set of faces not shared by two convexes and lying within the box "
"defined by the corner points `pmin` and `pmax`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:312
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in ball', vec center, scalar "
"radius[, dim][, CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:314
msgid ""
"Return the set of faces not shared by two convexes and lying within the ball"
" of corresponding `center` and `radius`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:323
msgid "``CVFIDs = gf_mesh_get(mesh M, 'adjacent face', int cvid, int fid)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:325
msgid ""
"Return convex face of the neighbor element if it exists. If the convex have "
"more than one neighbor relatively to the face ``f`` (think to bar elements "
"in 3D for instance), return the first face found."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:331
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'faces from cvid'[, ivec CVIDs][, 'merge'])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:333
msgid "Return a list of convex faces from a list of convex #id."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:335
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). If `CVIDs` is not "
"given, all convexes are considered. The optional argument 'merge' merges "
"faces shared by the convex of `CVIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:341
msgid ""
"``[mat T] = gf_mesh_get(mesh M, 'triangulated surface', int Nrefine "
"[,CVLIST])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:343
msgid "[DEPRECATED FUNCTION! will be removed in a future release]"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:345
msgid ""
"Similar function to gf_mesh_get(mesh M, 'curved edges') : split (if "
"necessary, i.e. if the geometric transformation if non-linear) each face "
"into sub-triangles and return their coordinates in T (see also "
"gf_compute('eval on P1 tri mesh'))"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:351
msgid ""
"``N = gf_mesh_get(mesh M, 'normal of face', int cv, int f[, int nfpt])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:353
msgid ""
"Return the normal vector of convex `cv`, face `f` at the `nfpt` point of the"
" face."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:355
msgid ""
"If `nfpt` is not specified, then the normal is evaluated at each geometrical"
" node of the face."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:359
msgid "``N = gf_mesh_get(mesh M, 'normal of faces', imat CVFIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:361
msgid "Return matrix of (at face centers) the normal vectors of convexes."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:363
msgid ""
"`CVFIDs` is supposed a two-rows matrix, the first row lists convex #ids, and"
" the second lists face numbers (local number in the convex)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:367
msgid "``CVIDs = gf_mesh_get(mesh M, 'convexes in box', vec pmin, vec pmax)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:369
msgid ""
"Return the set of convexes lying entirely within the box defined by the "
"corner points `pmin` and `pmax`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:371
msgid ""
"The output `CVIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). If "
"`CVIDs` is given, it returns portion of the boundary of the convex set "
"defined by the #ids listed in `CVIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:377
msgid "``Q = gf_mesh_get(mesh M, 'quality'[, ivec CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:379
msgid ""
"Return an estimation of the quality of each convex (:math:`0 \\leq Q \\leq "
"1`)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:382
msgid "``A = gf_mesh_get(mesh M, 'convex area'[, ivec CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:384
msgid "Return an estimate of the area of each convex."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:387
msgid "``A = gf_mesh_get(mesh M, 'convex radius'[, ivec CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:389
msgid "Return an estimate of the radius of each convex."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:392
msgid "``{S, CV2S} = gf_mesh_get(mesh M, 'cvstruct'[, ivec CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:394
msgid "Return an array of the convex structures."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:396
msgid ""
"If `CVIDs` is not given, all convexes are considered. Each convex structure "
"is listed once in `S`, and `CV2S` maps the convexes indice in `CVIDs` to the"
" indice of its structure in `S`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:401
msgid "``{GT, CV2GT} = gf_mesh_get(mesh M, 'geotrans'[, ivec CVIDs])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:403
msgid "Returns an array of the geometric transformations."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:405
msgid "See also gf_mesh_get(mesh M, 'cvstruct')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:408
msgid "``RIDs = gf_mesh_get(mesh M, 'boundaries')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:410
msgid "DEPRECATED FUNCTION. Use 'regions' instead."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:413
msgid "``RIDs = gf_mesh_get(mesh M, 'regions')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:415
msgid "Return the list of valid regions stored in the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:418
msgid "``RIDs = gf_mesh_get(mesh M, 'boundary')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:420
msgid "DEPRECATED FUNCTION. Use 'region' instead."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:423
msgid "``CVFIDs = gf_mesh_get(mesh M, 'region', ivec RIDs)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:425
msgid "Return the list of convexes/faces on the regions `RIDs`."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:427
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). (and 0 when the "
"whole convex is in the regions)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:433
msgid "``gf_mesh_get(mesh M, 'save', string filename)``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:435
msgid "Save the mesh object to an ascii file."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:437
msgid "This mesh can be restored with gf_mesh('load', filename)."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:440
msgid "``s = gf_mesh_get(mesh M, 'char')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:442
msgid "Output a string description of the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:445
msgid ""
"``gf_mesh_get(mesh M, 'export to vtk', string filename, ... "
"[,'ascii'][,'quality'])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:447
msgid "Exports a mesh to a VTK file ."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:449
msgid ""
"If 'quality' is specified, an estimation of the quality of each convex will "
"be written to the file."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:452
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to vtk'), gf_slice_get(slice "
"S, 'export to vtk')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:455
msgid ""
"``gf_mesh_get(mesh M, 'export to dx', string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:457
msgid "Exports a mesh to an OpenDX file."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:459
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to dx'), gf_slice_get(slice S,"
" 'export to dx')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:462
msgid ""
"``gf_mesh_get(mesh M, 'export to pos', string filename[, string name])``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:464
msgid "Exports a mesh to a POS file ."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:466
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to pos'), gf_slice_get(slice "
"S, 'export to pos')."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:469
msgid "``z = gf_mesh_get(mesh M, 'memsize')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:471
msgid "Return the amount of memory (in bytes) used by the mesh."
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:474
msgid "``gf_mesh_get(mesh M, 'display')``"
msgstr ""

#: ../source/matlab_octave/cmdref_gf_mesh_get.rst:476
msgid "displays a short summary for a mesh object."
msgstr ""
