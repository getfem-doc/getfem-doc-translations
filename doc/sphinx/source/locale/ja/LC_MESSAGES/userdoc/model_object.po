# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-08 02:15+0000\n"
"PO-Revision-Date: 2018-07-16 07:07+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/userdoc/model_object.rst:13
msgid "The model object"
msgstr "modelオブジェクト"

#: ../source/userdoc/model_object.rst:15
msgid ""
"The aim of the |mo| object, defined in file :file:`getfem/getfem_models.h`, "
"is to globally describe a PDE model. It mainly contains two lists: a list of"
" variables (related or not to the |mf| objects) and data (also related or "
"not to the |mf| objects) and a list of bricks. The role of the |mo| object "
"is to coordinate the module and make them produce a linear system of "
"equations. If the model is linear, this will simply be the linear system of "
"equation on the corresponding dofs. If the model is nonlinear, this will be "
"the tangent linear system. There are two versions of the |mo| object: a real"
" one and complex one."
msgstr ""
":file:`getfem/getfem_models.h` で定義されている |mo| "
"オブジェクトの目的は、微分方程式モデルをグローバルに記述することです。主に2つのリストがあります：変数のリスト（ |mf| "
"オブジェクトに関連するかどうか）とデータ（これも |mf| オブジェクトに関連するかどうか）と項のリストです。 |mo| "
"の役割はモジュールを調整しそれらに式の線形システムを生成させることです。モデルが線形の場合、これは単純に対応するdofの式の線形システムになります。モデルが非線形の場合、これは接線系になります。"
" |mo| オブジェクトは実数と複素数の2つのバージョンがあります。"

#: ../source/userdoc/model_object.rst:23
msgid "The declaration of a model object is done by::"
msgstr "modelオブジェクトは次ように宣言します。"

#: ../source/userdoc/model_object.rst:27
msgid ""
"The parameter of the constructor is a boolean which determines whether the "
"model deals with complex number or real numbers. The default is false for a "
"model dealing with real numbers."
msgstr ""
"コンストラクタのパラメータは、モデルが複素数を扱うか実数を扱うかを決定するブール値です。デフォルトはfalseで実数を扱うモデルになります。"

#: ../source/userdoc/model_object.rst:35
msgid "The (tangent) linear system"
msgstr "線形（接線）システム"

#: ../source/userdoc/model_object.rst:37
msgid ""
"There are different kinds of variables/data in the model. The variables are "
"the unknown of the model. They will be (generally) computed by solving the "
"(tangent) linear system built by the model. Generally, the model will have "
"several variables. Each variable has a certain size (number of degrees of "
"freedom) and the different variables are sorted in alphanumeric order to "
"form the global unknown (:math:`U` in Fig. :ref:`ud-fig-syslin`). Each "
"variable will be associated to an interval :math:`I = [n_1, n_2]` which will"
" represent the degrees of freedom indices corresponding to this variable in "
"the global system. The model stores also some data (in the same format as "
"the variables). The difference between data and variables is that data is "
"not an unknown of the model. The value of the data should be provided. In "
"some cases (nonlinear models) some variables can be considered as some data "
"for certain terms. Variables and data are of two kinds. They can have a "
"fixed size, or they can depend on a finite element method (be the d.o.f. of "
"a finite element method)."
msgstr ""
"モデルにはさまざまな種類の変数/データがあります。変数はモデルの未知数です。これらは、モデルによって構築された（接線）線形システムを解くことによって（汎用的に）計算されます。一般に、モデルにはいくつかの変数があります。各変数は一定の大きさ（自由度の数）を持ち、さまざまな変数は英数字順にソートされ、グローバルな未知数（図"
" :ref:`ud-fig-syslin` の :math:`U` ）を形成します。各変数はグローバルシステム内のこの変数に対応する自由度指標を表す "
":math:`I = [n_1, n_2]` "
"という区間に関連付けられます。また、モデルはいくつかのデータを（変数と同じフォーマットで）保存します。データと変数の違いは、データがモデルの未知数ではないということです。データの値は提供する必要があります。いくつかの（非線形モデル）の場合によっては、いくつかの変数はある種のデータとして考えることができます。変数とデータは2種類あります。それらは固定サイズを有することができ、または有限積分法（有限積分法の自由度）に依存することができます。"

#: ../source/userdoc/model_object.rst:52
msgid ""
"For instance, in the situation described in Fig. :ref:`ud-fig-syslin`, there"
" are four variables in the model, namely :math:`X, Y, V` and :math:`W`. The "
"role of the model object will be to assemble the linear system, i.e. to fill"
" the sub matrices corresponding to each variable (:math:`R_{X,X}, R_{Y,Y}, "
"R_{V,V}`, and :math:`R_{W,W}`) and the coupling terms between two variables "
"(:math:`R_{X,Y}, R_{X,V}, R_{W,V}, \\cdots`). This different contributions "
"will be given by the different bricks added to the model."
msgstr ""
"例えば、図 :ref:`ud-fig-syslin` の場合モデルには4つの変数、すなわち、 :math:`X, Y, V` と :math:`W` "
"があります。modelオブジェクトの役割は、線形システムを構築すること、すなわち、各変数に対応する部分行列（ :math:`R_{X,X}, "
"R_{Y,Y}, R_{V,V}`, と :math:`R_{W,W}`）を満たすことと2つの変数の間の項（ :math:`R_{X,Y}, "
"R_{X,V}, R_{W,V}, \\cdots` ）を結合することです。これははモデルに追加された様々なブリックによって構築されます。"

#: ../source/userdoc/model_object.rst:59
msgid "The main useful methods on a |mo| object are"
msgstr "|mo| オブジェクトの主な便利なメソッドは以下の通りです。"

#: ../source/userdoc/model_object.rst:63
msgid ""
"A boolean which says if the model deals with real or complex unknowns and "
"data."
msgstr "モデルが実数または複素数の未知数とデータを扱うかどうかを示すブール値です。"

#: ../source/userdoc/model_object.rst:67
msgid ""
"Add a variable of fixed size. ``name`` is a string which designate the "
"variable. ``niter`` is the number of copy of the variable."
msgstr "固定サイズの変数を追加します。 ``name`` は変数を指定する文字列です。 ``niter`` は変数のコピー数です。"

#: ../source/userdoc/model_object.rst:72
msgid ""
"Add a variable of fixed size. ``name`` is a string which designate the "
"variable. ``sizes`` is a vector of dimension for matrix or tensor fixed size"
" variables. ``niter`` is the number of copy of the variable."
msgstr ""
"固定サイズの変数を追加します。 ``name`` は変数を指定する文字列です。 ``sizes`` "
"は行列やテンソルの固定サイズ変数の次元のベクトルです。 ``niter`` は変数のコピー数です。"

#: ../source/userdoc/model_object.rst:78
msgid ""
"Add a data of fixed size. ``name`` is a string which designate the data. "
"``niter`` is the number of copy of the data."
msgstr "固定サイズのデータを追加します。 ``name`` はデータを指定する文字列です。 ``niter`` はデータのコピー数です。"

#: ../source/userdoc/model_object.rst:83
msgid ""
"Add a data of fixed size. ``name`` is a string which designate the data. "
"``sizes`` is a vector of dimension for matrix or tensor fixed size "
"variables. ``niter`` is the number of copy of the data."
msgstr ""
"固定サイズのデータを追加します。 ``name`` はデータを指定する文字列です。 ``sizes`` "
"は行列やテンソルの固定サイズ変数の次元のベクトルです。 ``niter`` はデータのコピー数です。"

#: ../source/userdoc/model_object.rst:89
msgid ""
"Add a data of fixed size initialized with the given vector ``V``. ``name`` "
"is a string which designate the data."
msgstr "与えられたベクトル ``V`` で初期化された固定サイズのデータを追加します。 ``name`` はデータを指定する文字列です。"

#: ../source/userdoc/model_object.rst:94
msgid ""
"Add a data of size 1 initialized with the given scalar value ``e``. ``name``"
" is a string which designate the data."
msgstr "与えられたスカラー値 ``e`` で初期化されたサイズ1のデータを追加します。 ``name`` はデータを指定する文字列です。"

#: ../source/userdoc/model_object.rst:99
msgid ""
"Add a variable being the dofs of a finite element method ``mf``. ``name`` is"
" a string which designate the variable. ``niter`` is the number of copy of "
"the variable."
msgstr ""
"有限積分法 ``mf`` の自由度である変数を追加します。 ``name`` は変数を指定する文字列です。 ``niter`` は変数のコピー数です。"

#: ../source/userdoc/model_object.rst:105
msgid ""
"Add a variable being the dofs of a finite element method ``mf`` only "
"specific to a given region. (The standard way to define ``mf`` in |gf| is to"
" define in the whole domain.) ``name`` is a string which designate the "
"variable. ``region`` is the region number. This function will select the "
"degree of freedom whose shape function is non-zero on the given region. "
"Internally, a ``partial_mesh_fem`` object will be used. The method "
"``mesh_fem_of_variable('name')`` allows to access to the "
"``partial_mesh_fem`` built."
msgstr ""
"与えられた領域に特有な有限要素法 ``mf`` の自由度である変数を追加してください。( |gf| で ``mf`` "
"を定義する標準的な方法は、ドメイン全体で定義することです。) ``name`` は、変数を指定する文字列です。 ``region`` "
"は領域番号です。与えられた領域で形状関数がゼロでない自由度を選択します。内部的には ``partial_mesh_fem`` "
"オブジェクトが使用されます。メソッド ``mesh_fem_of_variable('name')`` は、構築された "
"``partial_mesh_fem`` へのアクセスを可能にします。"

#: ../source/userdoc/model_object.rst:116
msgid ""
"Add a data being the dofs of a finite element method ``mf``. ``name`` is a "
"string which designate the data. ``niter`` is the number of copy of the "
"data."
msgstr ""
"有限積分法 ``mf`` の自由度数のデータ追加します。 ``name`` はデータを指定する文字列です。 ``niter`` はデータのコピー数です。"

#: ../source/userdoc/model_object.rst:121
msgid ""
"Add a data being the dofs of a finite element method ``mf`` initialized with"
" the given vector ``V``. ``name`` is a string which designate the data. "
"``niter`` is the number of copy of the data."
msgstr ""
"与えられたベクトル ``V`` で初期化された有限積分法 ``mf`` の自由度数のデータを追加します。 ``name`` "
"はデータを指定する文字列です。 ``niter`` はデータのコピー数です。"

#: ../source/userdoc/model_object.rst:127
msgid ""
"Add a special variable linked to the finite element method ``mf`` and being "
"a multiplier for certain constraints (Dirichlet condition for instance) on a"
" primal variable ``primal_name``. The most important is that the degrees of "
"freedom will be filtered thanks to a ``partial_mesh_fem`` object in order to"
" retain only a set of linearly independent constraints. To ensure this, a "
"call to the bricks having a term linking the multiplier and the primal "
"variable is done and a special algorithm is called to extract independent "
"constraints. This algorithm is optimized for boundary multipliers (see "
"gmm::range_basis). Use it with care for volumic multipliers. ``niter`` is "
"the number of copy of the variable. Note that for complex terms, only the "
"real part is considered to filter the multiplier."
msgstr ""
"有限積分法 ``mf`` にリンクされ、第一変数 ``primal_name`` "
"上の特定の制約（例えば、Dirichlet条件）のための乗数である特別な変数を追加します。最も重要なことは、線形独立の制約の集合だけを保持するために、 "
"``partial_mesh_fem`` "
"オブジェクトにより自由度がフィルタリングされることです。これを確実にするために、乗数と原変数を結ぶ項を持つ項への呼び出しが行われ、独立した制約を抽出するための特別なアルゴリズムが呼び出されます。このアルゴリズムは、境界乗数に最適化されています（"
" gmm::range_basis を参照）。体積の積に注意して使用してください。 ``niter`` "
"は変数のコピー数です。複素数項については、実部のみが乗数をフィルタリングするとみなされることに留意してください。"

#: ../source/userdoc/model_object.rst:141
msgid ""
"Gives the access to the vector value of a variable or data. Real version."
msgstr "変数またはデータのベクトル値にアクセスできます。実数バージョンです。"

#: ../source/userdoc/model_object.rst:145
msgid ""
"Gives the access to the vector value of a variable or data. Complex version."
msgstr "変数またはデータのベクトル値にアクセスできます。複素数バージョンです。"

#: ../source/userdoc/model_object.rst:149
msgid ""
"Gives a reference on the |mf| on which the variable is defined. Throw an "
"exception if this is not a fem variable."
msgstr "定義されている変数の |mf| のリファレンスが与えられます。有限積分法変数でない場合は例外を返します。"

#: ../source/userdoc/model_object.rst:154
msgid ""
"Gives the access to tangent matrix. Real version. A computation of the "
"tangent system have to be done first."
msgstr "接線行列へのアクセスが与えられます。実数バージョンです。最初に接線系の計算を行う必要があります。"

#: ../source/userdoc/model_object.rst:159
msgid ""
"Gives the access to tangent matrix. Complex version. A computation of the "
"tangent system have to be done first."
msgstr "接線行列へのアクセスが与えられます。複素数バージョンです。最初に接線系の計算を行う必要があります。"

#: ../source/userdoc/model_object.rst:164
msgid ""
"Gives the access to right hand side vector of the linear system. real "
"version. A computation of the tangent system have to be done first."
msgstr "線形システムの右辺ベクトルへのアクセスが与えられます。実数バージョンです。最初に接線系の計算を行う必要があります。"

#: ../source/userdoc/model_object.rst:169
msgid ""
"Gives the access to right hand side vector of the linear system. Complex "
"version. A computation of the tangent system have to be done first."
msgstr "線形システムの右辺ベクトルへのアクセスが与えられます。複素数バージョンです。最初に接線系の計算を行う必要があります。"

#: ../source/userdoc/model_object.rst:174
msgid "The |br| object"
msgstr "|br| オブジェクト"

#: ../source/userdoc/model_object.rst:176
msgid ""
"A model brick is an object that is supposed to represent a part of a model. "
"It aims to represent some integral terms in a weak formulation of a PDE "
"model. The model object will contain a list of bricks. All the terms "
"described by the brick will be finally assembled to build the linear system "
"to be solved (the tangent linear system for a nonlinear problem). For "
"instance if a term :math:`\\Delta u` is present on the pde model (Laplacian "
"of :math:`u`) then the weak formulation will contain the term "
":math:`\\int_{\\Omega}\\nabla u\\cdot\\nabla v\\ dx`, where :math:`v` is the"
" test function corresponding to :math:`u`. Then the role of the "
"corresponding brick is to assemble the term "
":math:`\\int_{\\Omega}\\nabla\\varphi_i \\cdot\\nabla\\varphi_j\\ dx`, where"
" :math:`\\varphi_i` and :math:`\\varphi_j` are the shape functions of the "
"finite element method describing :math:`u`. This term will be added by the "
"model object to the global linear system on a diagonal block corresponding "
"to the variable :math:`u`. The only role of the brick is thus to call the "
"corresponding assembly procedure when the model object asks for it. The "
"construction of a brick for such a linear term is thus very simple."
msgstr ""
"model "
"brickとはモデルの部分を表すオブジェクトです。このオブジェクトは微分方程式モデルの弱定式化でいくつかの積分項を表現するためにあります。modelオブジェクトにはブリック要素のリストが含まれます。ブリック要素によって記述されたすべての項は最終的に線形システム（非線形問題のための接線系）を構築するために構築られます。例えばもし項"
" :math:`\\Delta u` が微分方程式モデル上に存在します（ :math:`u` "
"のLaplacian）、次いで弱定式化には:math:`\\int_{\\Omega}\\nabla u\\cdot\\nabla v\\ dx` "
"項が含まれます。ここで :math:`v` は :math:`u` "
"に対応する試行関数です。対応するブリック要素の役割は:math:`\\int_{\\Omega}\\nabla\\varphi_i "
"\\cdot\\nabla\\varphi_j\\ dx` 項をアセンブルすることです、 :math:`\\varphi_i` と "
":math:`\\varphi_j` は :math:`u` を記述する有限積分法の形状関数です。この項はmodelオブジェクトによって変数  "
":math:`u` "
"に対応する対角ブロック上の全体線形システムに追加されます。したがって、ブリック要素の唯一の役割はmodelオブジェクトがそれを求めるときに対応する構築手順を呼び出すことです。このように線形項のための項の構築は非常に簡単です。"

#: ../source/userdoc/model_object.rst:192
msgid ""
"Basically, the brick object will derive from the object ``virtual_brick`` "
"defined in :file:`getfem/getfem_models.h` and should redefine the method "
"``asm_real_tangent_terms`` or ``asm_complex_tangent_terms`` depending on "
"whether it is a real term or an intrinsic complex term."
msgstr ""
"基本的には、brickオブジェクトは :file:`getfem/getfem_models.h` で定義された ``virtual_brick`` "
"オブジェクトから派生し、 実数項か固有の複素数項かによって ``asm_real_tangent_terms`` または "
"``asm_complex_tangent_terms`` メソッドを再定義する必要があります。"

#: ../source/userdoc/model_object.rst:199
msgid "How to build a new brick"
msgstr "新しいブリックを作る方法"

#: ../source/userdoc/model_object.rst:201
msgid ""
"Note first that the design of a new brick is only necessary for special "
"terms not covered by existing bricks and not covered by the wide range of "
"accessible terms (including complex coupling terms) of the generic assembly "
"brick (see :ref:`ud-model-generic-assembly`)."
msgstr ""
"まず最初に、新しい項の設計は、既存の項ではカバーされず、汎用的な構築項の幅広いアクセシブルな項（複雑な結合条件を含む）でカバーされていない特別な項に対してのみ必要である点に注意してください（"
" :ref:`ud-model-generic-assembly` ）。"

#: ../source/userdoc/model_object.rst:206
msgid ""
"According to the spirit in which the brick has been designed, a brick should"
" avoid as much as possible to store additional data. The parameters of a "
"brick should be contained in the variable and data of the model. For "
"instance, the parameters of a linear elasticity brick are the elasticity "
"coefficient. This coefficients have to be some data of the model. When the "
"brick is called by the model object, a list of variables and data is given "
"to the brick. The great majority of the predefined bricks do not store any "
"data. This allows to instantiate such a bricks only once."
msgstr ""
"設計思想によれば、項は追加のデータをできるだけ保存しないようにすべきです。ブリック要素のパラメータはモデルの変数とデータに含める必要があります。例えば、線形弾性ブリック要素のパラメータは弾性係数です。この係数はモデルの何らかのデータでなければなりません。項がmodelオブジェクトによって呼び出されると、変数とデータのリストが項に与えられます。あらかじめ定義された項の大部分はデータを格納しません。これにより、そのような項を一度だけインスタンス化することができます。"

#: ../source/userdoc/model_object.rst:214
msgid ""
"An example of a brick corresponding to the laplacian term is the following "
"(other examples can be found in the file :file:`getfem_models.cc` which "
"contains the very standard bricks)::"
msgstr ""
"Laplacian項に対応するブリック要素の例は次のとおりです（他の例は標準的な項を含むファイル :file:`getfem_models.cc` "
"で確認できます）。"

#: ../source/userdoc/model_object.rst:252
msgid ""
"The constructor of a brick should call the method ``set_flags``. The first "
"parameter of this method is a name for the brick (this allows to list the "
"bricks of a model and facilitate their identification). The other parameters"
" are some flags, respectively:"
msgstr ""
"項のコンストラクタは ``set_flags`` "
"メソッドを呼び出す必要があります。このメソッドの最初のパラメータは項の名前です（これにより、モデルの項をリストしその識別を容易にすることができます）。その他のパラメータは、それぞれ次のフラグです。"

#: ../source/userdoc/model_object.rst:257
msgid "if the brick terms are all linear or not."
msgstr "ブリック要素項がすべて線形であるかどうかを示します。"

#: ../source/userdoc/model_object.rst:259
msgid ""
"if the brick terms are globally symmetric (conjugated in the complex "
"version) or at least do not affect the symmetry. The terms corresponding to "
"two different variables and declared symmetric are added twice in the global"
" linear system (the term and the transpose of the term)."
msgstr ""
"ブリック要素項が全体的に対称（複素数の場合で共役）か、少なくとも対称性に影響を与えていないか。 "
"2つの異なる変数にで対称に宣言された項は全体線形システム（項と項の転置）で2回追加されます。"

#: ../source/userdoc/model_object.rst:264
msgid "if the terms do not affect the coercivity."
msgstr "その項が保磁力に影響を与えないか。"

#: ../source/userdoc/model_object.rst:266
msgid ""
"if the terms have a real version or not. If yes, the method "
"``asm_real_tangent_terms`` should be redefined."
msgstr ""
"項が実数のバージョンを持っているかどうか。もしそうなら、 ``asm_real_tangent_terms`` メソッドを再定義する必要があります。"

#: ../source/userdoc/model_object.rst:269
msgid ""
"if the terms have a complex version or not. If yes, the method "
"``asm_complex_tangent_terms`` should be redefined."
msgstr ""
"項が複素数バージョンを持っているかどうか。もしそうなら、 ``asm_complex_tangent_terms`` "
"メソッドを再定義する必要があります。"

#: ../source/userdoc/model_object.rst:272
msgid ""
"The method ``asm_real_tangent_terms`` will be called by the model object for"
" the assembly of the tangent system. The model object gives the whole "
"framework to the brick to build its terms. The parameter ``md`` of the "
"``asm_real_tangent_terms`` method is the model that called the brick, ``ib``"
" being the brick number in the model. The parameter ``varl`` is an array of "
"variable/data names defined in this model and needed in the brick. ``mims`` "
"is an array of |mim| pointers. It corresponds to the integration methods "
"needed to assemble the terms. ``matl`` is an array of matrices to be "
"computed. ``vecl`` is an array of vectors to be computed (rhs or residual "
"vectors).  ``vecl_sym`` is an array of vectors to be computed only for "
"symmetric terms and corresponding to the rhs of the second variable. A brick"
" can have an arbitrary number of terms. For each term, at least the "
"corresponding matrix or the corresponding vector has to be filled (or both "
"the two, but only in the nonlinear case, see the description of the terms "
"below, next section). ``region`` is a mesh region number indicated that the "
"terms have to be assembled on a certain region. ``nl`` is for nonlinear "
"bricks only. It says if the tangent matrix or the residual or both the two "
"are to be computed (for linear bricks, all is to be computed at each call)."
msgstr ""
"``asm_real_tangent_terms`` "
"メソッドは、タンジェントシステムの構築のためのmodelオブジェクトによって呼び出されます。modelオブジェクトはブリック要素にフレームワーク全体を渡してその項を構築します。"
" ``asm_real_tangent_terms`` メソッドのパラメータ ``md`` は項を呼び出すモデルであり、 ``ib`` "
"はモデルの項数です。パラメータ ``varl`` はこのモデルで定義される項で必要とされる変数/データ名の配列です。 ``mims`` は |mim| "
"ポインタの配列です。これは、項を構築するために必要な積分法に対応します。 ``matl`` は計算された行列の配列です。 ``vecl`` "
"は計算されるベクトルの配列です（rhsまたは残差ベクトル）。 ``vecl_sym`` "
"は対称項に対してのみ計算され、第2の変数のrhsに対応するベクトルの配列です。項は任意の数の項を持つことができます。それぞれの項について、少なくとも対応する行列または対応するベクトルを満たされなければなりません（または2つとも、非線形の場合のみ、次のセクションを参照）。"
" ``region`` は、特定の領域に項を構築することを示すメッシュ領域番号です。 ``nl`` "
"は非線形項のみです。これは接線行列または残差または両方を計算するか（線形項の場合は、すべての呼び出しごとに計算されます）を示します。"

#: ../source/userdoc/model_object.rst:290
msgid ""
"For the very simple Laplacian brick defined above, only one variable is used"
" and no data and there is only one term. The lines::"
msgstr "上で定義した非常に単純なLaplacian項の場合、1つの変数のみが使用され、データはなく、1つの項しか存在しません。行"

#: ../source/userdoc/model_object.rst:300
msgid ""
"are not mandatory and just verify that the good number of terms (1), "
"integration methods (1), variables(1), data(0) are passed to the "
"``asm_real_tangent_terms`` method."
msgstr ""
"は必須ではなく、項の数（1）、積分法（1）、変数（1）、データ（0）が  ``asm_real_tangent_terms`` "
"メソッドに渡されるのに問題ない値であることを確認するだけです。"

#: ../source/userdoc/model_object.rst:304
#: ../source/userdoc/model_object.rst:405
#: ../source/userdoc/model_object.rst:414
msgid "The lines::"
msgstr "行"

#: ../source/userdoc/model_object.rst:309
msgid ""
"takes the |mf| object from the variable on which the Laplacian term will be "
"added and the |mim| object in the list of integrations methods. Finally, the"
" lines::"
msgstr "はLaplacian項が追加される変数の |mf| オブジェクトで |mim| オブジェクトは積分法のリストです。最後に"

#: ../source/userdoc/model_object.rst:316
msgid ""
"call a standard assembly procedure for the Laplacian term defined in the "
"file :file:`getfem/getfem_assembling.h`. The clear method is necessary "
"because although it is guaranteed that the matrices in ``matl`` have good "
"sizes they maybe not cleared before the call of ``asm_real_tangent_terms``."
msgstr ""
"はファイル :file:`getfem/getfem_assembling.h` で定義されているLaplacian項の標準構築手順を呼び出します。 "
"``matl`` の行列は適切なサイズであることが保証されていますが、 ``asm_real_tangent_terms`` "
"の呼び出しの前に初期化されない可能性があるので、初期化メソッドが必要です。"

#: ../source/userdoc/model_object.rst:321
msgid ""
"Note that this simple brick has only one term and is linear. In the case of "
"a linear brick, either the matrix or the right hand side vector have to be "
"filled but not both the two. Depending on the declaration of the term. See "
"below the integration of the brick to the model."
msgstr ""
"この単純な項は項が1つしかなく、線形であることに注意してください。線形ブリック要素の場合、行列または右辺のベクトルのどちらか一方を埋める必要がありますが、両方を埋める必要はありません。項の宣言に応じて。モデルにブリック要素を積分する方法は以下を参照してください。"

#: ../source/userdoc/model_object.rst:326
msgid ""
"Let us see now a second example of a simple brick which prescribes a "
"Dirichlet condition thanks to the use of a Lagrange multiplier. The "
"Dirichlet condition is of the form"
msgstr "Lagrange乗数の使用によりDirichlet条件を規定する単純な項の2番目の例を見てみましょう。Dirichlet条件は、"

#: ../source/userdoc/model_object.rst:330
msgid "u = u_D \\text{ on } \\Gamma,"
msgstr "u = u_D \\text{ on } \\Gamma,"

#: ../source/userdoc/model_object.rst:334
msgid ""
"where :math:`u` is the variable, :math:`u_D` is a given value and "
":math:`\\Gamma` is a part on the boundary of the considered domain. The weak"
" terms corresponding to this condition prescribed with a Lagrange multiplier"
" are"
msgstr ""
"ここで、 :math:`u` は変数で、 :math:`u_D` は与えられた値で、:math:`\\Gamma` "
"は対象とする領域の境界上にある部分です。Lagrange乗数で規定されたこの条件に対応する弱定式項は、"

#: ../source/userdoc/model_object.rst:338
msgid "\\int_{\\Gamma} u \\mu\\ d\\Gamma = \\int_{\\Gamma} u_D \\mu\\ d\\Gamma, \\forall \\mu \\in M,"
msgstr "\\int_{\\Gamma} u \\mu\\ d\\Gamma = \\int_{\\Gamma} u_D \\mu\\ d\\Gamma, \\forall \\mu \\in M,"

#: ../source/userdoc/model_object.rst:342
msgid ""
"where :math:`M` is an appropriate multiplier space. The contributions to the"
" global linear system can be viewed in Fig. :ref:`ud-fig-syslinDir`. The "
"matrix :math:`B` is the \"mass matrix\" between the finite element space of "
"the variable :math:`u` and the finite element space of the multiplier "
":math:`\\mu`. :math:`L_{u}` is the right hand side corresponding to the data"
" :math:`u_D`."
msgstr ""
"ここで、 :math:`M` は適切な乗数空間です。グローバル線形システムへの寄与は、図 :ref:`ud-fig-syslinDir` "
"で見ることができます。行列 :math:`B` は変数の有限要素空間 :math:`u` と乗数の有限要素空間 :math:`\\mu` の間の "
"\"質量行列\" です。 :math:`L_{u}` はデータ :math:`u_D` に対応する右辺です。"

#: ../source/userdoc/model_object.rst:353
msgid "Contributions of the simple Dirichlet brick"
msgstr "シンプルなDirichletブリック要素の寄与"

#: ../source/userdoc/model_object.rst:355
msgid "The brick can be defined as follows::"
msgstr "項は次のように定義できます。"

#: ../source/userdoc/model_object.rst:398
msgid ""
"This brick has again only one term but defines both the matrix and the right"
" hand side parts. Two variables are concerned, the primal variable on which "
"the Dirichlet condition is prescribed, and the multiplier variable which "
"should be defined on a mesh region corresponding to a boundary (it should be"
" added to the model with the method ``add_multiplier``). The term of the "
"brick will be declared symmetric (see the next section)."
msgstr ""
"このブリック要素にも項が1つしかありませんが、マトリックス部分と右辺部分の両方が定義されています。Dirichlet条件が規定されているプライマリ変数と、境界に対応するメッシュ領域に定義される乗数変数（"
" ``add_multiplier`` "
"メソッドでモデルに追加する必要があります）の2つの変数が関係しています。項は対称であると宣言されます（次のセクションを参照）。"

#: ../source/userdoc/model_object.rst:410
msgid ""
"allow to have the access to the value of the data corresponding to the right"
" hand side of the Dirichlet condition and to the |mf| on which this data is "
"defined. If the data is constant (not described on a fem) then ``mf_data`` "
"is a null pointer."
msgstr ""
"はDirichlet状態の右辺に対応するデータの値とこのデータが定義されている |mf| "
"にアクセスすることを許可します。データが一定である場合（有限要素法で記述されていない場合）、 ``mf_data`` はヌルポインタです。"

#: ../source/userdoc/model_object.rst:421
msgid ""
"make the assembly of the right hand side. The two versions correspond to a "
"data defined on a finite element method or constant size data."
msgstr "は右辺を構築します。 2つのバージョンは有限要素法または一定サイズのデータで定義されたデータに対応します。"

#: ../source/userdoc/model_object.rst:424
msgid "( + some example with a nonlinear term ... )"
msgstr "（+非線形項を持ついくつかの例...）"

#: ../source/userdoc/model_object.rst:428
msgid "How to add the brick to a model"
msgstr "モデルに項を追加する方法"

#: ../source/userdoc/model_object.rst:430
msgid ""
"In order to add a brick to a model, a certain information have to be passed "
"to the model:"
msgstr "モデルに項を追加するには、モデルに特定の情報を渡す必要があります。"

#: ../source/userdoc/model_object.rst:433
msgid "A pointer to the brick itself."
msgstr "ブリック要素自体へのポインタ。"

#: ../source/userdoc/model_object.rst:434
msgid "The set of variable names concerned with the terms of the brick."
msgstr "ブリック要素の項に関係する一連の変数名。"

#: ../source/userdoc/model_object.rst:435
msgid "The set of data names concerned with the terms of the brick."
msgstr "データ名の集合は、ブリック要素の項に関係します。"

#: ../source/userdoc/model_object.rst:436
msgid "A list of terms description."
msgstr "項の説明のリスト。"

#: ../source/userdoc/model_object.rst:437
msgid "A list of integration methods."
msgstr "積分法のリスト。"

#: ../source/userdoc/model_object.rst:438
msgid "Eventually the concerned mesh region."
msgstr "最終的に関連するメッシュ領域。"

#: ../source/userdoc/model_object.rst:440
msgid "This is done by the call of the |mo| object method::"
msgstr "これは、オブジェクトメソッド |mo| の呼び出しによって行われます。"

#: ../source/userdoc/model_object.rst:448
msgid ""
"The method returns the index of the brick in the model. The call of this "
"method is rather complex because it can be adapted to many situations. The "
"construction of a new brick should be accompagned to the definition of a "
"function that adds the new brick to the model calling this method and more "
"simple to use."
msgstr ""
"このメソッドは、モデル内の項のインデックスを返します。このメソッドの呼び出しは、多くの状況に適応できるため、かなり複雑です。新しいブリック要素の構築は、このメソッドを呼び出すモデルに新しいブリック要素を追加し、より簡単に使用できる関数の定義に従わなければなりません。"

#: ../source/userdoc/model_object.rst:453
msgid ""
"For instance, for the simple Laplacian brick described above, this function "
"can be defined as folows::"
msgstr "例えば、上記の単純なLaplacian項の場合、この関数は次のように定義することができます。"

#: ../source/userdoc/model_object.rst:468
msgid ""
"This function will be called by the user of your brick. The type "
"``getfem::model::varnamelist`` is a ``std::vector<std::string>`` and "
"represent an array of variable names. The type ``getfem::model::mimlist`` is"
" a ``std::vector<const getfem::mesh_im *>`` and represent an array of "
"pointers to integration methods. The type ``getfem::model::termlist`` is an "
"array of terms description. There is two kind of terms. The terms adding "
"only a right hand side to the linear (tangent) system which have to be added"
" to the list by::"
msgstr ""
"この関数はあなたのブリック要素のユーザーによって呼び出されます。 ``getfem::model::varnamelist`` 型は "
"``std::vector<std::string>`` であり、変数名の配列を表します。 ``getfem::model::mimlist`` 型は "
"``std::vector<const getfem::mesh_im *>`` であり、積分法へのポインタの配列を表します。 "
"``getfem::model::termlist`` "
"は項の記述の配列です。項には2種類あります。線形（接線）システムに右辺のみを追加する項は次のようにリストに追加する必要があります。"

#: ../source/userdoc/model_object.rst:478
msgid ""
"and the terms having a contribution to the matrix of the linear system which"
" have to be added to the list by::"
msgstr "そして、線形システムの行列に寄与する項は次のようにリストに追加する必要があります。"

#: ../source/userdoc/model_object.rst:483
msgid ""
"In this case, the matrix term is added in the rows corresponding to the "
"variable ``varname1`` and the columns corresponding to the variable "
"``varname2``. The boolean being the third parameter is to declare whether "
"the term is symmetric or not. If it is symmetric and if the two variables "
"are different then the assembly procedure adds the corresponding term AND "
"its transpose. The number of terms is arbitrary. For each term declared, the"
" brick has to fill the corresponding right hand side vector (parameter "
"``vecl`` of ``asm_real_tangent_terms`` above) or/and the matrix term "
"(parameter ``matl`` of ``asm_real_tangent_terms``) depending on the "
"declaration of the term. Note that for nonlinear bricks, both the matrix and"
" the right hand side vectors have to be filled. For linear bricks, if the "
"right hand side is filled for a term declared to be a matrix term, it is "
"IGNORED."
msgstr ""
"この場合、行列項は変数 \"varname1\" に対応する行と変数 \"varname2\" "
"に対応する列に追加されます。第3のパラメータであるブール値はその項が対称であるかどうかを宣言します。対称であり、2つの変数が異なる場合、構築手順は対応する項およびその転置を加えます。項の数は任意です。宣言された各項に対して、項は対応する右辺のベクトル（上の"
" ``asm_real_tangent_terms`` のパラメータ ``vecl`` ）または/および行列の項（ "
"``asm_real_tangent_terms`` のパラメータ ``matl`` "
"）を宣言します。非線形項では、行列と右辺ベクトルの両方を満たす必要があることに注意してください。線形項の場合、行列項と宣言された項の右辺が式を満たしている場合は無視されます。"

#: ../source/userdoc/model_object.rst:495
msgid ""
"The variable names and the data names are given in two separate arrays "
"because the dependence of the brick is not the same in both cases. A linear "
"term has to be recomputed if the value of a data is changed but not if the "
"value of a variable is changed."
msgstr ""
"変数名とデータ名は2つの別々の配列で与えられます。これは、どちらの場合でも項の依存関係が同じではないためです。線形項は、データの値が変更された場合には再計算されなければなりませんが、変数の値が変更された場合は再計算されません。"

#: ../source/userdoc/model_object.rst:500
msgid ""
"The function allowing to add the simple Dirichlet brick described above can "
"be defined as follows::"
msgstr "上記の単純なDirichlet項を追加する関数は、次のように定義することができます。"

#: ../source/userdoc/model_object.rst:518
msgid ""
"Again, here, the term is declared symmetric and then the matrix term and its"
" transpose will be added."
msgstr "再びここでは、この項は対称であると宣言され、次に行列項とその転置が追加されます。"
