# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Pythonで学ぶ有限要素法 <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 01:09+0000\n"
"PO-Revision-Date: 2018-07-16 07:04+0000\n"
"Last-Translator: Pythonで学ぶ有限要素法 <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/userdoc/convect.rst:10
msgid "A pure convection method"
msgstr "純対流法"

#: ../source/userdoc/convect.rst:12
msgid ""
"A method to compute a pure convection is defined in the file "
":file:`getfem/getfem_convect.h`. The call of the function is::"
msgstr ""
"純粋な対流を計算する方法は，ファイル :file:`getfem/getfem_convect.h` で定義されています．関数の呼び出しは::"

#: ../source/userdoc/convect.rst:17
msgid ""
"where ``mf`` is a variable of type |gf_mf|, ``U`` is a vector which "
"represent the field to be convected, ``mf_v`` is a |gf_mf| for the velocity "
"field, ``V`` is the dof vector for the velocity field, ``dt`` is the pseudo "
"time of convection and ``nt`` the number of iterations for the computation "
"of characteristics. ``option`` is an option for the boundary condition where"
" there is a re-entrant convection. The possibilities are "
"getfem::CONVECT_EXTRAPOLATION (extrapolation of the field on the nearest "
"element) or getfem::CONVECT_UNCHANGED (no change of the value on the "
"boundary)."
msgstr ""
"ここで ``mf`` は |gf_mf| 型の変数です， ``U`` は対流するフィールドを表すベクトル， ``mf_v`` は |gf_mf| "
"速度場の場合， ``V`` は速度場の自由度ベクトルであり， ``dt`` は対流の擬似時間であり， ``nt`` は特性計算のための反復回数です． "
"``option`` は境界条件が再流対流である場合のオプションです．可能なものは ``getfem::CONVECT_EXTRAPOLATION``"
"  （最も近い要素のフィールドの外挿）または ``getfem::CONVECT_UNCHANGED`` （境界の値の変更なし）です．"

#: ../source/userdoc/convect.rst:22
msgid "The method integrate the partial differential equation"
msgstr "この方法は，偏微分方程式"

#: ../source/userdoc/convect.rst:24
msgid "\\frac{\\partial U}{\\partial t} + V\\cdot\\nabla U = 0,"
msgstr "\\frac{\\partial U}{\\partial t} + V\\cdot\\nabla U = 0,"

#: ../source/userdoc/convect.rst:28
msgid "on the time intervall :math:`[0, dt]`."
msgstr "の時間間隔 :math:`[0, dt]` を積分します．"

#: ../source/userdoc/convect.rst:30
msgid ""
"The method used is of Galerkin-Characteristic kind. It is a very simple "
"version which is inconditionnally stable but rather dissipative. See "
"[ZT1989]_ and also the Freefem++ documentation on convect command."
msgstr ""
"使用される方法はGalerkin-Characteristicのものです．この方法は無条件に安定しているものの，散逸的で非常に簡単なバージョンです． "
"[ZT1989]_ およびconvectコマンドに関するFreefem ++のドキュメントを参照してください．"

#: ../source/userdoc/convect.rst:34
msgid ""
"The defined method works only if ``mf`` is a pure Lagrange finite element "
"method for the moment. The principle is to convect backward the finite "
"element nodes by solving the ordinary differential equation:"
msgstr ""
"定義されたメソッドは ``mf`` "
"がその時点の純粋なLagrange有限要素法である場合にのみ機能します．原理は常微分方程式を解くことによって有限要素節点を逆方向に対流させることです．"

#: ../source/userdoc/convect.rst:37
msgid "\\frac{d X}{d t} = -V(X),"
msgstr "\\frac{d X}{d t} = -V(X),"

#: ../source/userdoc/convect.rst:41
msgid ""
"with an initial condition corresponding to each node. This convection is "
"made with ``nt`` steps. Then the solution is interploated on the convected "
"nodes."
msgstr "各節点に対応する初期条件を有します．この対流は ``nt`` ステップで行われます．次に，対流節点上で解を補間します．"

#: ../source/userdoc/convect.rst:44
msgid ""
"In order to make the extrapolation not too expensive, the product "
":math:`dt\\times V` should not be too large."
msgstr "外挿をそれほど高コストにしないために，積 :math:`dt\\times V` は大きすぎてはいけません．"

#: ../source/userdoc/convect.rst:47
msgid ""
"Note that this method can be used to solve convection dominant problems "
"coupling it with a splitting scheme."
msgstr "この方法は分割スキームと結合する対流優位問題を解決するために使用することができることに留意してください．"
