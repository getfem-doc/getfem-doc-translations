# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-12 01:16+0000\n"
"PO-Revision-Date: 2018-07-16 07:05+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/userdoc/model_time_integration.rst:14
msgid "The model tools for the integration of transient problems"
msgstr "過渡問題の積分のためのモデルツール"

#: ../source/userdoc/model_time_integration.rst:16
msgid ""
"Although time integration scheme can be written directly using the model "
"object by describing the problem to be solved at each iteration, the model "
"object furnishes some basic tools to facilitate the writing of such schemes."
" These tools are based on the following basic principles:"
msgstr ""
"時間積分法は各反復で求解する問題を記述することによってmodelオブジェクトを使用して直接書くことができますが，modelオブジェクトはそのような方法の記述を容易にするためのいくつかの基本的なツールを備えています．これらのツールは，次の基本原則に基づいています．"

#: ../source/userdoc/model_time_integration.rst:18
msgid ""
"The original variables of the model represent the state of the system to be "
"solved at the current time step (say step n). This is the case even for a "
"middle point scheme, mainly because if one needs to apply different schemes "
"to different variables of the system, all variable should describe the "
"system at a unique time step."
msgstr ""
"モデルの元の変数は，現在の時間ステップ（例えば，ステップn）で解かれるべきシステムの状態を表します．これは，中点法の場合でも，主にシステムの異なる変数に異なる方法を適用する必要がある場合，すべての変数は固有の時間ステップでシステムを記述する必要があるためです．"

#: ../source/userdoc/model_time_integration.rst:20
msgid ""
"Some data are added to the model to represent the state of the system at "
"previous time steps. For classical one-step schemes (for the moment, only "
"one-step schemes are provided), only the previous time step is stored. For "
"instance if `u` is a variable (thus represented at step n), `Previous_u`, "
"`Previous2_u`, `Previous3_u` will be the data representing the state of the "
"variable at the previous time step (step n-1, n-2 and n-3)."
msgstr ""
"前のタイムステップにおけるシステムの状態を表すために，一部のデータがモデルに追加されます．従来のワンステップ方式(現時点では，1ステップのスキームのみが提供されています)では，直前のタイムステップのみが保存されます．例えば，"
" `u` が変数である場合(このようにステップnで表される)， `Previous_u` ， `Previous2_u` ， `Previous3_u`"
" は，前の時間ステップ(ステップn-1，n-2およびn-3)における変数の状態を表すデータとなります．"

#: ../source/userdoc/model_time_integration.rst:22
msgid ""
"Some intermediate variables are added to the model to represent the time "
"derivative (and the second order time derivative for second order problem). "
"For instance, if `u` is a variable, `Dot_u` will represent the first order "
"time derivative of `u` and `Dot2_u` the second order one. One can refer to "
"these variables in the model to add a brick on it or to use it in GWFL, the "
"generic weak form language. However, these are not considered to be "
"independent variables, they will be linked to their corresponding original "
"variable (in an affine way) by the time integration scheme. Most of the "
"schemes need also the time derivative at the previous time step and add the "
"data `Previous_Dot_u` and possibly `Previous_Dot2_u` to the model."
msgstr ""
"いくつかの中間変数は，時間導関数（および2次問題の2次時間導関数）を表すためにモデルに追加されます．例えば， `u` が変数であれば， `Dot_u` "
"は `u` の一次時間導関数を表し， `Dot2_u` "
"は2次のものを表します．モデル内のこれらの変数を参照して，要素を追加するか，GWFL，汎用弱形式言語で使用することができます．しかし，これらは独立変数とはみなされず，時間積分法によって対応する元の変数に（Affine方式で）リンクされます．アルゴリズムの大部分は前の時間ステップで時間微分を必要とし，"
" `Previous_Dot_u` と `Previous_Dot2_u` データをモデルに加えることが可能です．"

#: ../source/userdoc/model_time_integration.rst:24
msgid ""
"A different time integration scheme can be applied on each variable of the "
"model. Note that most of the time, multiplier variable and more generally "
"variables for which no time derivative is used do not need a time "
"integration scheme."
msgstr ""
"異なる時間積分法は，モデルの各変数に適用することができます．ほとんどの場合，乗数変数，より一般的には時間微分が使用されない変数は時間積分法を必要としないことに注意してください．"

#: ../source/userdoc/model_time_integration.rst:26
msgid ""
"The data `t` represent the time parameter and can be used (either in GWFL or"
" as parameter of some bricks). Before the assembly of the system, the data "
"`t` is automatically updated to the time step `n`."
msgstr ""
"データ `t` は時間パラメータを表し，（GWFLで，またはいくつかの要素のパラメータとして）使用することができます．システムの構築前に，データ `t`"
" は自動的に時間ステップ `n` に更新されます．"

#: ../source/userdoc/model_time_integration.rst:28
msgid ""
"The problem to be solved at each iteration correspond to the formulation of "
"the transient problem in its natural (weak) formulation in which the "
"velocity and the acceleration are expressed by the intermediate variables "
"introduced. For instance, the translation into GWFL of the problem"
msgstr ""
"各イテレーションで解くべき問題は，速度と加速度が導入された中間変数によって表されるその自然（弱）定式化における過渡問題の定式化に対応します．例えば，問題をGWFLに訳すと"

#: ../source/userdoc/model_time_integration.rst:30
msgid "\\dot{u}(t,x) - \\Delta u(t,x) = \\sin(t)"
msgstr "\\dot{u}(t,x) - \\Delta u(t,x) = \\sin(t)"

#: ../source/userdoc/model_time_integration.rst:34
msgid "can simply be::"
msgstr "の弱形式言語による表現は以下のように記述することができます．"

#: ../source/userdoc/model_time_integration.rst:38
msgid ""
"(even though, of course, in this situation, the use of linear bricks is "
"preferable for efficiency reasons)"
msgstr "（もちろん，このような状況では，効率の理由から線形要素の使用が望ましいです．）"

#: ../source/userdoc/model_time_integration.rst:40
msgid ""
"For all implemented one-step schemes, the time step can be changed from an "
"iteration to another for both order one and order two in time problems (or "
"even quasi-static problems)."
msgstr "実装されたすべての1ステップ法では，時間の問題は1次と2次の両方の問題（または準静的問題）でも反復から変更することができます．"

#: ../source/userdoc/model_time_integration.rst:42
msgid ""
"A scheme for second order in time problem (resp. first order in time) can be"
" applied to a second or first order in time or even to a quasi-static "
"problem (resp. to a first order or quasi-static problem) without any problem"
" except that the initial data corresponding to the velocity/displacement "
"have to be initialized with respect ot the order of the scheme. Conversely, "
"of course, a scheme for first order problem cannot be applied to a second "
"order in time problem."
msgstr ""
"2次時間問題（1次時間）に対する計算法は，2次または1次の時間に，あるいは準静的問題（1次または準静的問題へ）に適用することもできます．速度/変位に対応する初期データを計算法の次数に関して初期化しなければならないという点を除いて，1次問題の理論は，2次問題の時間問題に適用することはできません．"

#: ../source/userdoc/model_time_integration.rst:46
msgid "The implicit theta-method for first-order problems"
msgstr "1次の陰的Theta法問題"

#: ../source/userdoc/model_time_integration.rst:48
#: ../source/userdoc/model_time_integration.rst:124
#: ../source/userdoc/model_time_integration.rst:178
#: ../source/userdoc/model_time_integration.rst:229
msgid "For a problem which reads"
msgstr "次の問題を見てください．"

#: ../source/userdoc/model_time_integration.rst:50
#: ../source/userdoc/model_time_integration.rst:107
msgid "M\\dot{U} = F(U)"
msgstr "M\\dot{U} = F(U)"

#: ../source/userdoc/model_time_integration.rst:54
msgid ""
"where :math:`F(U)` might be nonlinear (and may depend on some other "
"variables for coupled problems), for :math:`dt` a time step, :math:`V = "
"\\dot{U}` and :math:`U^n, V^n` the approximation of :math:`U, V` at time "
":math:`ndt`, theta-method reads"
msgstr ""
"ここで， `F(U)` は非線形である可能性があります（結合問題の他の変数に依存するかもしれません） :math:`dt` は時間ステップ， "
":math:`V = \\dot{U}` と :math:`U^n, V^n` は時刻 :math:`ndt` における :math:`U, V` "
"の近似です．Theta法は次の式になります．"

#: ../source/userdoc/model_time_integration.rst:56
msgid ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dt(\\theta V^n + (1-\\theta) V^{n-1}), \\\\\n"
"MV^n = F(U^n),\n"
"\\end{array}\\right."
msgstr ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dt(\\theta V^n + (1-\\theta) V^{n-1}), \\\\\n"
"MV^n = F(U^n),\n"
"\\end{array}\\right."

#: ../source/userdoc/model_time_integration.rst:63
msgid ""
"for :math:`\\theta \\in (0, 1]` the parameter of the theta-method (for "
":math:`\\theta = 0`, the method corresponds to the forward Euler method and "
"is not an implicit scheme) and for :math:`U^{n-1}, V^{n-1}` given."
msgstr ""
"Theta法のパラメータである :math:`\\theta \\in (0, 1]` （ :math:`\\theta = 0` "
"法は前方Euler法に対応し，陰解法ではありません）そして， :math:`U^{n-1}, V^{n-1}` が与えられます．"

#: ../source/userdoc/model_time_integration.rst:65
msgid ""
"Before the first time step, :math:`U^0` should be initialized, however, "
":math:`V^0` is also needed (except for :math:`\\theta = 1`). In this "
"example, it should correspond to :math:`M^{-1}F(U^0)`. For a general coupled"
" problem where :math:`M` might be singular, a generic precomputation of "
":math:`V^0` is difficult to obtain. Thus :math:`V^0` have to be furnisded "
"also. Alternatively (see below) the model object (and the standard solve) "
"furnishes a mean to evaluate them thanks to the application of a Backward "
"Euler scheme on a (very) small time step."
msgstr ""
"最初の時間ステップの前に :math:`U^0` を初期化する必要があります，しかし， :math:`V^0` も必要です（ "
":math:`\\theta = 1` の場合を除く）．この例では，それは :math:`M^{-1}F(U^0)` "
"に対応するはずです．汎用的な結合問題 :math:`M` は特異であり，汎用的な事前計算 :math:`V^0` を得ることは困難です．したがって "
":math:`V^0` もまた準備しなければいけません．代替的に（以下を参照），modelオブジェクト（および標準解）は（非常に）小さな時間ステップで "
"Backward Euler 法を適用することによりそれらを評価するための平均値を計算します．"

#: ../source/userdoc/model_time_integration.rst:68
#: ../source/userdoc/model_time_integration.rst:144
#: ../source/userdoc/model_time_integration.rst:198
msgid "The following formula can be deduced for the time derivative:"
msgstr "次の式は時間微分により導き出すことができます："

#: ../source/userdoc/model_time_integration.rst:70
msgid "V^n = \\frac{U^n - U^{n-1}}{\\theta dt} - \\frac{1-\\theta}{\\theta}V^{n-1}"
msgstr "V^n = \\frac{U^n - U^{n-1}}{\\theta dt} - \\frac{1-\\theta}{\\theta}V^{n-1}"

#: ../source/userdoc/model_time_integration.rst:74
msgid ""
"When applying this scheme to a variable \"u\" of the model, the following "
"affine dependent variable is added to the model::"
msgstr "この方法をモデルの変数 \"u\" に適用すると，次の Affine 依存変数がモデルに追加されます::"

#: ../source/userdoc/model_time_integration.rst:78
msgid ""
"which represent the time derivative of the variable and can be used in some "
"brick definition."
msgstr "これは変数の時間微分を表し，いくつかのブリック要素定義で使用することができます．"

#: ../source/userdoc/model_time_integration.rst:80
#: ../source/userdoc/model_time_integration.rst:158
#: ../source/userdoc/model_time_integration.rst:212
#: ../source/userdoc/model_time_integration.rst:249
msgid "The following data are also added::"
msgstr "以下のデータも追加されています．"

#: ../source/userdoc/model_time_integration.rst:84
msgid ""
"which correspond to the values of \"u\" and \"Dot_u\" at the previous time "
"step."
msgstr "これは前回の時間ステップにおける \"u\" と \"Dot_u\" の値に対応します．"

#: ../source/userdoc/model_time_integration.rst:86
msgid ""
"Before the solve, the data  \"Previous_u\" (corresponding to :math:`U^0` in "
"the example) has to be initialized (except for :math:`\\theta = 1`). Again, "
"\"Previous_Dot_u\" has to be either initialized or pre-computed as described"
" in the next section. The affine dependence of \"Dot_u\" is thus given by::"
msgstr ""
"解く前にデータ \"Previous_u\" （例 :math:`U^0` を除く）を初期化する必要があります．ここでも， "
"\"Previous_Dot_u\" は，次のセクションで説明するように，初期化されるか事前計算される必要があります．したがって， \"Dot_u\" "
"のAffine依存性は，次のように与えられます．"

#: ../source/userdoc/model_time_integration.rst:90
msgid ""
"Which means that \"Dot_u\" will be replaced at assembly time by its "
"expression in term of \"u\" (multipied by :math:`1/(\\theta*dt)`) and in "
"term of a constant remaining part depending on the previous time step. The "
"addition of this scheme to a variable is to be done thanks to::"
msgstr ""
"つまり， \"Dot_u\" は構築時に \"u\" （ :math:`1/(\\theta*dt)` "
"を掛けたもの）と前の時間ステップに依存する残りの定数項による表現で置き換えられます．変数へのこの方法の追加は次のように行います．::"

#: ../source/userdoc/model_time_integration.rst:98
msgid "Precomputation of velocity/acceleration"
msgstr "速度/加速度の事前計算"

#: ../source/userdoc/model_time_integration.rst:100
msgid ""
"Most of the time integration schemes (except, for instance, the backward "
"Euler scheme) needs the pre-computation of the first or second order time "
"derivative before the initial time step (for instance :math:`V^0` for the "
"theta-method for first order problems, :math:`A^0` for second order problems"
" ...)."
msgstr ""
"大部分の時間積分法（例えば，後方Euler法を除く）は，最初の時間ステップの前に第1または第2の時間微分の事前計算を必要とします（例えば，1次元問題のためのTheta法，第2次問題のための"
" :math:`A^0` ...）．"

#: ../source/userdoc/model_time_integration.rst:102
msgid ""
"The choice is let to the user to either initialize these derivative or to "
"ask to the model to automatically approximate them."
msgstr "ユーザーはこれらの導関数を初期化するか，モデルに自動的に近似するよう依頼するか選択できます．"

#: ../source/userdoc/model_time_integration.rst:105
msgid ""
"The method used (for the moment) to approximate the supplementary "
"derivatives may be explained in the example of the solve of"
msgstr "補完的な導関数を近似するために（現時点で）使用されている方法は次の通りです．"

#: ../source/userdoc/model_time_integration.rst:111
msgid ""
"with a theta-method (see the previous section). In order to approximate "
":math:`V_0`, the theta-method is applied for :math:`\\theta = 1` (i.e. a "
"backward Euler scheme) on a very small time step. This is possible since the"
"  backward Euler do not need an initial time derivative. Then the time "
"derivative computed thanks to the  backward Euler at the end of the very "
"small time step is simply used as an approximation of the initial time "
"derivative."
msgstr ""
"Theta法（前のセクションを参照）を使用します． :math:`V_0` を近似するために，Theta法は，非常に小さな時間ステップで， "
":math:`\\theta = 1` "
"（すなわち，後方Euler法）に適用されます．これは，後退Eulerが初期時間微分を必要としないので可能です．その後，非常に小さな時間ステップの終了時の後方Eulerのおかげで計算された時間微分は，単純に初期時間微分の近似値として使用されます．"

#: ../source/userdoc/model_time_integration.rst:114
msgid "For a model `md`, the following instructions::"
msgstr "モデル `md` について，以下の命令は"

#: ../source/userdoc/model_time_integration.rst:119
msgid ""
"allows to perform automatically the approximation of the initial time "
"derivative. The parameter `ddt` corresponds to the small time step used to "
"perform the aproximation. Typically, `ddt = dt/20` could be used where  `dt`"
" is the time step used to approximate the transient problem (see the example"
" below)."
msgstr ""
"初期時間導関数の近似を自動的に実行することを可能にします．パラメータ `ddt` "
"は，近似を実行するために使用される小さな時間ステップに対応します．典型的には，`dtt = dt / 20` を使用します，ここで， `dt` "
"は過渡問題を近似するために使用される時間ステップです（以下の例を参照）．"

#: ../source/userdoc/model_time_integration.rst:122
msgid "The implicit theta-method for second-order problems"
msgstr "2次問題の陰的Theta法"

#: ../source/userdoc/model_time_integration.rst:126
#: ../source/userdoc/model_time_integration.rst:180
msgid "M\\ddot{U} = F(U)"
msgstr "M\\ddot{U} = F(U)"

#: ../source/userdoc/model_time_integration.rst:130
#: ../source/userdoc/model_time_integration.rst:184
msgid ""
"where :math:`F(U)` might be nonlinear (and may depend on some othere "
"variables for coupled problems), for :math:`dt` a time step, :math:`V = "
"\\dot{U}`, :math:`A = \\ddot{U}` and :math:`U^n, V^n, A^n` the approximation"
" of :math:`U, V, A` at time :math:`ndt`, the first oder theta-method reads"
msgstr ""
":math:`dt` は時間ステップ， :math:`V = \\dot{U}`, :math:`A = \\ddot{U}` と "
":math:`U^n, V^n, A^n` は時刻 :math:`ndt` における :math:`U, V, A` "
"の近似です，Theta法は次の式になります．"

#: ../source/userdoc/model_time_integration.rst:132
msgid ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dt(\\theta V^n + (1-\\theta) V^{n-1}), \\\\\n"
"V^n = V^{n-1} + dt(\\theta A^n + (1-\\theta) A^{n-1}), \\\\\n"
"MA^n = F(U^n),\n"
"\\end{array}\\right."
msgstr ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dt(\\theta V^n + (1-\\theta) V^{n-1}), \\\\\n"
"V^n = V^{n-1} + dt(\\theta A^n + (1-\\theta) A^{n-1}), \\\\\n"
"MA^n = F(U^n),\n"
"\\end{array}\\right."

#: ../source/userdoc/model_time_integration.rst:140
msgid ""
"for :math:`\\theta \\in (0, 1]` the parameter of the theta-method (for "
":math:`\\theta = 0`, the method correspond to the forward Euler method and "
"is not an implicit scheme) and for :math:`U^{n-1}, V^{n-1}, A^{n-1}` given."
msgstr ""
"Theath法のパラメータは :math:`\\theta \\in (0, 1]` であり( :math:`\\theta = 0` "
"，計算法は前方Euler法に対応し，陰解法ではありません） :math:`U^{n-1}, V^{n-1}, A^{n-1}` が与えられています．"

#: ../source/userdoc/model_time_integration.rst:142
msgid ""
"At the first time step, :math:`U^0, V^0` should be given and :math:`A^0` is "
"to be given or pre-computed (except for :math:`\\theta = 1`)."
msgstr ""
"最初のステップでは， :math:`U^0, V^0` が与えられ， :math:`A^0` が与えられるか，あらかじめ計算されている必要があります（ "
":math:`\\theta = 1` を除く）．"

#: ../source/userdoc/model_time_integration.rst:146
msgid ""
"V^n = \\frac{U^n - U^{n-1}}{\\theta dt} - \\frac{1-\\theta}{\\theta}V^{n-1}\n"
"\n"
"A^n = \\frac{U^n - U^{n-1}}{\\theta^2 dt^2} - \\frac{1}{\\theta^2dt}V^{n-1} - \\frac{1-\\theta}{\\theta}A^{n-1}"
msgstr ""
"V^n = \\frac{U^n - U^{n-1}}{\\theta dt} - \\frac{1-\\theta}{\\theta}V^{n-1}\n"
"\n"
"A^n = \\frac{U^n - U^{n-1}}{\\theta^2 dt^2} - \\frac{1}{\\theta^2dt}V^{n-1} - \\frac{1-\\theta}{\\theta}A^{n-1}"

#: ../source/userdoc/model_time_integration.rst:152
#: ../source/userdoc/model_time_integration.rst:206
#: ../source/userdoc/model_time_integration.rst:243
msgid ""
"When aplying this scheme to a variable \"u\" of the model, the following "
"affine dependent variables are added to the model::"
msgstr "この法をモデルの変数 \"u\"に適用すると，以下のAffine依存変数がモデルに追加されます::"

#: ../source/userdoc/model_time_integration.rst:156
#: ../source/userdoc/model_time_integration.rst:210
#: ../source/userdoc/model_time_integration.rst:247
msgid ""
"which represent the first and second order time derivative of the variable "
"and can be used in some brick definition."
msgstr "変数の1次および2次の時間微分を表し，いくつかのブリック要素定義で使用できます．"

#: ../source/userdoc/model_time_integration.rst:162
#: ../source/userdoc/model_time_integration.rst:216
msgid ""
"which correspond to the values of \"u\", \"Dot_u\"  and \"Dot2_u\" at the "
"previous time step."
msgstr "前回の時間ステップにおける \"u\"， \"Dot_u\"， \"Dot2_u\"の値に対応します．"

#: ../source/userdoc/model_time_integration.rst:164
msgid ""
"Before the solve, the data  \"Previous_u\" and \"Previous_Dot_u\" "
"(corresponding to :math:`U^0` in the example) have to be initialized and "
"\"Previous_Dot2_u\" should be either initialized or precomputed (see the "
"previous section, and except for :math:`\\theta = 1`). The affine "
"dependences are thus given by::"
msgstr ""
"解く前に，データ \"Previous_u\"と \"Previous_Dot_u\"（例では :math:`U^0` ）を初期化し，\" "
"Previous_Dot2_u \"を初期化または事前計算する必要があります :math:`\\theta = 1` "
"）．したがって，Affine依存性は次のように与えられます．"

#: ../source/userdoc/model_time_integration.rst:169
#: ../source/userdoc/model_time_integration.rst:221
#: ../source/userdoc/model_time_integration.rst:257
msgid "The addition of this scheme to a variable is to be done thanks to::"
msgstr "変数へのこの計算法の追加は次のように行います．"

#: ../source/userdoc/model_time_integration.rst:176
msgid "The implicit Newmark scheme for second order problems"
msgstr "2次問題の陰的Newmark法"

#: ../source/userdoc/model_time_integration.rst:186
msgid ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dtV^n + \\frac{dt^2}{2}(2\\beta V^n + (1-2\\beta) V^{n-1}), \\\\\n"
"V^n = V^{n-1} + dt(\\gamma A^n + (1-\\gamma) A^{n-1}), \\\\\n"
"MA^n = F(U^n),\n"
"\\end{array}\\right."
msgstr ""
"\\left\\{ \\begin{array}{l}\n"
"U^n = U^{n-1} + dtV^n + \\frac{dt^2}{2}(2\\beta V^n + (1-2\\beta) V^{n-1}), \\\\\n"
"V^n = V^{n-1} + dt(\\gamma A^n + (1-\\gamma) A^{n-1}), \\\\\n"
"MA^n = F(U^n),\n"
"\\end{array}\\right."

#: ../source/userdoc/model_time_integration.rst:194
msgid ""
"for :math:`\\beta \\in (0, 1]` and :math:`\\gamma \\in [1/2, 1]` are the "
"parameters of the Newmark scheme and for :math:`U^{n-1}, V^{n-1}, A^{n-1}` "
"given."
msgstr ""
":math:`\\beta \\in (0, 1]`  と :math:`\\gamma \\in [1/2, 1]` "
"はNewmark法のパラメータであり， :math:`U^{n-1}, V^{n-1}, A^{n-1}` が与えられています．"

#: ../source/userdoc/model_time_integration.rst:196
msgid ""
"At the first time step, :math:`U^0, V^0` should be given and :math:`A^0` is "
"to be given or pre-computed (except for :math:`\\beta = 1/2, \\gamma = 1`)."
msgstr ""
"最初のステップでは， :math:`U^0, V^0` が与えられているとします．そして( :math:`\\beta = 1/2, \\gamma ="
" 1` の場合を除いて) :math:`A^0` が与えられているか事前計算されているとします．"

#: ../source/userdoc/model_time_integration.rst:200
msgid ""
"V^n = \\frac{\\gamma}{\\beta dt}(U^n - U^{n-1}) + \\frac{\\beta-\\gamma}{\\beta}V^{n-1} + dt(1-\\frac{\\gamma}{2\\beta})A^{n-1}\n"
"\n"
"A^n = \\frac{U^n - U^{n-1}}{\\beta dt^2} - \\frac{1}{\\beta dt}V^{n-1} - (1/2-\\beta)A^{n-1}"
msgstr ""
"V^n = \\frac{\\gamma}{\\beta dt}(U^n - U^{n-1}) + \\frac{\\beta-\\gamma}{\\beta}V^{n-1} + dt(1-\\frac{\\gamma}{2\\beta})A^{n-1}\n"
"\n"
"A^n = \\frac{U^n - U^{n-1}}{\\beta dt^2} - \\frac{1}{\\beta dt}V^{n-1} - (1/2-\\beta)A^{n-1}"

#: ../source/userdoc/model_time_integration.rst:218
msgid ""
"Before the first solve, the data  \"Previous_u\" and \"Previous_Dot_u\" "
"(corresponding to :math:`U^0` in the example) have to be initialized. The "
"data \"Previous_Dot2_u\" is to be given or precomputed (see "
":ref:`precomp_time_der_section` and except for :math:`\\beta = 1/2, \\gamma "
"= 1`)."
msgstr ""
"最初の球解の前に，データ \"Previous_u\"と \"Previous_Dot_u\" （この例では :math:`U^0` "
"に対応）を初期化する必要があります．データ \"Previous_Dot2_u\" は与えられているか，事前計算されています（ "
":ref:`precomp_time_der_section` を参照してください  :math:`\\beta = 1/2, \\gamma = 1`"
" を除きます）．"

#: ../source/userdoc/model_time_integration.rst:227
msgid "The implicit Houbolt scheme"
msgstr "Houbolt陰解法"

#: ../source/userdoc/model_time_integration.rst:231
msgid ""
"(K+\\frac{11}{6 dt}C+\\frac{2}{dt^2}M) u_{n} = F_{n} + (\\frac{5}{dt^2} M + \\frac{3}{  dt} C) u_{n-1}\n"
"                                                   - (\\frac{4}{dt^2} M + \\frac{3}{2 dt} C) u_{n-2}\n"
"                                                   + (\\frac{1}{dt^2} M + \\frac{1}{3 dt} C) u_{n-3}"
msgstr ""
"(K+\\frac{11}{6 dt}C+\\frac{2}{dt^2}M) u_{n} = F_{n} + (\\frac{5}{dt^2} M + \\frac{3}{  dt} C) u_{n-1}\n"
"                                                   - (\\frac{4}{dt^2} M + \\frac{3}{2 dt} C) u_{n-2}\n"
"                                                   + (\\frac{1}{dt^2} M + \\frac{1}{3 dt} C) u_{n-3}"

#: ../source/userdoc/model_time_integration.rst:237
msgid ""
"where :math:`dt` means a time step, :math:`M` the matrix in term of "
"\"Dot2_u\", :math:`C` the matrix in term of \"Dot_u\" and :math:`K` the "
"matrix in term of \"u\". The affine dependences are thus given by::"
msgstr ""
"ここで， :math:`dt` は時間ステップを意味し， :math:`M` は \"Dot2_u\" の項の行列， :math:`C` は "
"\"Dot_u\" の項の行列， :math:`K` は \"u\" の項の行列を意味します．したがって，affine 依存関係は次のようになります．"

#: ../source/userdoc/model_time_integration.rst:253
msgid "which correspond to the values of \"u\" at the time step n-1, n-2 n-3."
msgstr "これは，時間ステップ n-1, n-2 n-3 における \"u\" の値に対応します．"

#: ../source/userdoc/model_time_integration.rst:255
msgid ""
"Before the solve, the data \"Previous_u\", \"Previous2_u\" and "
"\"Previous3_u\" (corresponding to :math:`U^0` in the example) have to be "
"initialized."
msgstr ""
"ソルバを実行する前に，(例では :math:`U^0` に対応する)データ \"Previous_u\" ， \"Previous2_u\" ， "
"\"Previous3_u\" を初期化する必要があります．"

#: ../source/userdoc/model_time_integration.rst:262
msgid "Transient terms"
msgstr "過渡項"

#: ../source/userdoc/model_time_integration.rst:264
msgid ""
"As it has been explained in previous sections, some intermediate variables "
"are added to the model in order to represent the time derivative of the "
"variables on which the scheme is applied. Once again, if \"u\" is such a "
"variable, \"Dot_u\" will represent the time derivative of \"u\" approximated"
" by the used scheme."
msgstr ""
"これまでのセクションで説明したように，手法が適用される変数の時間微分を表すために，いくつかの中間変数がモデルに追加されています．再度， \"u\" "
"がそのような変数である場合， \"Dot_u\" は，使用された法によって近似された \"u\" の時間微分を表します．"

#: ../source/userdoc/model_time_integration.rst:266
msgid ""
"This also mean that \"Dot_u\" (and \"Dot2_u\" in order two in time problems)"
" can be used to express the transient terms. In GWFL, the term:"
msgstr ""
"これはまた，過渡項を表現するために \"Dot_u\" ( および2次の時間問題において \"Dot2_u\" "
"）を使用できることを意味します．GWFLでは，"

#: ../source/userdoc/model_time_integration.rst:268
msgid "\\int_{\\Omega} \\dot{u} v dx"
msgstr "\\int_{\\Omega} \\dot{u} v dx"

#: ../source/userdoc/model_time_integration.rst:272
msgid "can be simply expressed by::"
msgstr "次のように単純に表現することができます．"

#: ../source/userdoc/model_time_integration.rst:276
msgid ""
"Similarly, every existing model brick of |gf| can be applied to \"Dot_u\". "
"This is the case for instance with::"
msgstr "同様に， |gf| は \"Dot_u\" に適用できます．たとえば，次のような場合です．"

#: ../source/userdoc/model_time_integration.rst:280
msgid "which adds the same transient term."
msgstr "同じ過渡項を追加します．"

#: ../source/userdoc/model_time_integration.rst:282
msgid ""
"VERY IMPORTANT: When adding an existing model brick applied to an affine "
"dependent variable such as \"Dot_u\", it is always assumed that the "
"corresponding test function is the one of the corresponding original "
"variable (i.e. \"Test_u\" here). In other words, \"Test_Dot_u\", the test "
"variable corresponding to the velocity, is not used. This corresponds to the"
" choice made to solve the problem in term of the original variable, so that "
"the test function corresponds to the original variable."
msgstr ""
"非常に重要： \"Dot_u\" "
"のようなAffine依存変数に適用された既存のモデルブリック要素を追加する場合，対応する試験関数が，対応する元の変数（ここでは \"Test_u\" "
"）のものであると常に仮定されます．言い換えれば，速度に対応する試行変数である \"Test_Dot_u\" "
"は使用されません．これは，試験関数が元の変数に対応するように，元の変数の項で問題を解決するために行われた選択に対応します．"

#: ../source/userdoc/model_time_integration.rst:284
msgid ""
"Another example of model brick which can be used to account for a Kelvin-"
"Voigt linearized viscosity term is the linearized elasticity brick::"
msgstr "Kelvin-Voigt線形化粘度項を説明するために使用できるモデルブリック要素の別の例は，線形弾性ブリック要素となります．"

#: ../source/userdoc/model_time_integration.rst:288
msgid "when applied to an order two transient elasticity problem."
msgstr "2次の過渡の弾性の問題に適用します．"

#: ../source/userdoc/model_time_integration.rst:291
msgid "Computation on the sequence of time steps"
msgstr "時間ステップのシーケンスに対する計算"

#: ../source/userdoc/model_time_integration.rst:293
msgid ""
"Typically, the solve on the different time steps will take the following "
"form::"
msgstr "一般に，異なる時間ステップでの解法は次の形式をとります．"

#: ../source/userdoc/model_time_integration.rst:308
msgid "Note that the call of the method::"
msgstr "手法の呼び出しは次の通りです．"

#: ../source/userdoc/model_time_integration.rst:312
msgid ""
"is needed between two time step since it will copy the current value of the "
"variables (`u` and `Dot_u` for instance) to the previous ones (`Previous_u` "
"and `Previous_Dot_u`)."
msgstr ""
"変数の現在の値（例えば `u` と `Dot_u` ）を前ステップの値（ `Previous_u` と `Previous_Dot_u` "
"）にコピーするので，2つの時間ステップの間に呼び出す必要があります．"

#: ../source/userdoc/model_time_integration.rst:315
msgid "Boundary conditions"
msgstr "境界条件"

#: ../source/userdoc/model_time_integration.rst:317
msgid ""
"Standard boundary conditions can of course be applied normally to the "
"different variables of the unknown. By default, applying Dirichlet, Neumann "
"or contact boundary conditions to the unknown simply means that the "
"conditions are prescribed on the variable at the current time step n."
msgstr ""
"もちろん，標準的な境界条件は，未知の様々な変数に通常適用することができます．デフォルトでは，Dirichlet，Neumannまたは接触境界条件を未知数に適用するということは，現在の時間ステップnで変数に条件が規定されていることを意味します．"

#: ../source/userdoc/model_time_integration.rst:321
msgid "Small example: heat equation"
msgstr "小さな例：熱方程式"

#: ../source/userdoc/model_time_integration.rst:323
msgid ""
"The complete compilable program corresponds to the test program "
":file:`tests/heat_equation.cc` of |gf| distribution. See also "
":file:`/interface/tests/matlab/demo_wave_equation.m` for an example of order"
" two in time problem with the Matlab interface."
msgstr ""
"|gf| ディストリビューションの完全なコンパイル可能なプログラム :file:`tests/heat_equation.cc` "
"がテストプログラムに対応しています．matlabインタフェースの2次時間ステップ問題の例については， "
":file:`/interface/tests/matlab/demo_wave_equation.m` を参照してください．"

#: ../source/userdoc/model_time_integration.rst:325
msgid ""
"Assuming that `mf_u` and `mim` are valid finite element and integration "
"methods defined on a valid mesh, the following code will perform the "
"approximation of the evolution of the temperature on the mesh assuming a "
"unitary diffusion coefficient::"
msgstr ""
"`mf_u` と `mim` "
"が有効なメッシュに定義された有効な有限要素と積分法であると仮定すると，次のコードは単位拡散係数を仮定したメッシュ上の温度の進展を近似します．"

#: ../source/userdoc/model_time_integration.rst:374
msgid "Implicit/explicit some terms"
msgstr "陰的/陽的な項"

#: ../source/userdoc/model_time_integration.rst:376
#: ../source/userdoc/model_time_integration.rst:382
#: ../source/userdoc/model_time_integration.rst:388
#: ../source/userdoc/model_time_integration.rst:393
msgid "..."
msgstr "..."

#: ../source/userdoc/model_time_integration.rst:380
msgid "Explicit schemes"
msgstr "陽解法"

#: ../source/userdoc/model_time_integration.rst:386
msgid "Time step adaptation"
msgstr "時間ステップ適応"

#: ../source/userdoc/model_time_integration.rst:391
msgid "Quasi-static problems"
msgstr "準静的問題"
