# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-18 20:31+0000\n"
"PO-Revision-Date: 2018-07-16 07:04+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/userdoc/model_bilaplacian.rst:13
msgid "Bilaplacian and Kirchhoff-Love plate bricks"
msgstr "BilaplacianとKirchhoff-Loveプレートブリック要素"

#: ../source/userdoc/model_bilaplacian.rst:15
msgid "The following function ::"
msgstr "以下の関数となります。"

#: ../source/userdoc/model_bilaplacian.rst:20
msgid ""
"adds a bilaplacian brick on the variable `varname` and on the mesh region "
"`region`. This represent a term :math:`\\Delta(D \\Delta u)`. where "
":math:`D(x)` is a coefficient determined by `dataname` which could be "
"constant or described on a f.e.m. The corresponding weak form is "
":math:`\\int D(x)\\Delta u(x) \\Delta v(x) dx`."
msgstr ""
"は変数 `varname` とメッシュ領域 `region` にBilaplacianブリック要素を追加します。これは、項 "
":math:`\\Delta(D \\Delta u)` を表します。ここで、 :math:`D(x)` は `datamame` "
"によって決定される係数であり、定数または有限要素法上で記述されます。対応する弱形式は :math:`\\int D(x)\\Delta u(x) "
"\\Delta v(x) dx` です。"

#: ../source/userdoc/model_bilaplacian.rst:23
msgid ""
"For the Kirchhoff-Love plate model, the weak form is a bit different (and "
"more stable than the previous one). the function to add that term is ::"
msgstr "Kirchhoff-Love板モデルの場合、弱形式は少し異なります（前の形よりも安定しています）。その項を追加する関数は次の通りです。"

#: ../source/userdoc/model_bilaplacian.rst:28
msgid ""
"It adds a bilaplacian brick on the variable `varname` and on the mesh region"
" `region`. This represent a term :math:`\\Delta(D \\Delta u)` where "
":math:`D(x)` is a the flexion modulus determined by `dataname1`. The term is"
" integrated by part following a Kirchhoff-Love plate model with `dataname2` "
"the poisson ratio."
msgstr ""
"これは変数 `varname` とメッシュ領域 `region` にBilaplacian要素を追加します。これは :math:`\\Delta(D "
"\\Delta u)` のような項を表します。ここで、 :math:`D(x)` は `dataname1` "
"によって決定される屈曲率です。この項は、Poisson比 `dataname2` を有するKirchhoff-"
"Love板モデルに続く部分によって積分さます。"

#: ../source/userdoc/model_bilaplacian.rst:34
msgid ""
"There is specific bricks to add appropriate boundary conditions for fourth "
"order partial differential equations. The first one is ::"
msgstr "4次の偏微分方程式に適切な境界条件を追加するための特定の要素があります。最初のものは次の通りです。"

#: ../source/userdoc/model_bilaplacian.rst:39
msgid ""
"which adds a normal derivative source term brick :math:`F = \\int "
"b.\\partial_n v` on the variable `varname` and on the mesh region `region`. "
"It updates the right hand side of the linear system. `dataname` represents "
"`b` and `varname` represents `v`."
msgstr ""
"これは変数 `varname` とメッシュ領域 `region` に正のソース項ブリック要素 :math:`F = \\int "
"b.\\partial_n v` を追加します。これは線形システムの右側を更新します。 `dataname` は `b` を表し、 `varname` "
"は `v` を表します。"

#: ../source/userdoc/model_bilaplacian.rst:45
msgid "A Neumann term can be added thanks to the following bricks ::"
msgstr "Neumann項は以下の要素により追加することができます。"

#: ../source/userdoc/model_bilaplacian.rst:50
msgid ""
"which adds a Neumann term brick for Kirchhoff-Love model on the variable "
"`varname` and the mesh region `region`. `dataname1` represents the bending "
"moment tensor and  `dataname2` its divergence."
msgstr ""
"変数 `varname` とメッシュ領域 `region` にKirchhoff-LoveモデルのNeumann項ブリック要素を追加しました。 "
"`dataname1` は曲げモーメントテンソルを表し `dataname2` はその逆テンソルを表します。"

#: ../source/userdoc/model_bilaplacian.rst:55
msgid ""
"And a Dirichlet condition on the normal derivative can be prescribed thanks "
"to the following bricks ::"
msgstr "そして、次の要素で正規DirichletのDirichlet条件を規定することができます。"

#: ../source/userdoc/model_bilaplacian.rst:69
msgid ""
"These bricks add a Dirichlet condition on the normal derivative of the "
"variable `varname` and on the mesh region `region` (which should be a "
"boundary). The general form is :math:`\\int \\partial_n u(x)v(x) = \\int "
"r(x)v(x) \\forall v` where :math:`r(x)` is the right hand side for the "
"Dirichlet condition (0 for homogeneous conditions) and :math:`v` is in a "
"space of multipliers defined by the variable `multname` (first version) or "
"defined on the finite element method `mf_mult` (second version) or simply on"
" a Lagrange finite element method of degree `degree` (third version) on the "
"part of boundary determined by `region`. `dataname` is an optional parameter"
" which represents the right hand side of the Dirichlet condition. If "
"`R_must_be_derivated` is set to `true` then the normal derivative of "
"`dataname` is considered."
msgstr ""
"これらの要素は、変数 `varname` の標準偏差とメッシュ領域 `region` "
"（これは境界でなければなりません）にDirichlet条件を追加します。汎用的な形式は :math:`\\int \\partial_n "
"u(x)v(x) = \\int r(x)v(x) \\forall v` のとおりです。ここで、 :math:`r(x)` "
"はDirichlet条件（均質条件の場合は0）の右辺で、 :math:`v` は変数 `multname` "
"によって定義された乗数の空間（第1のバージョン）、または `mf_mult` で定義された有限要素法（第2のバージョン）、または単 `region` "
"により定義された境界の部分の `次数` によるLagrange有限要素法（第3のバージョン）です。 `dataname` "
"は、Dirichlet条件の右辺を表すオプションのパラメータです。 `R_must_be_derivated` が `true` に設定されている場合、"
" `dataname` の標準偏差が考慮されます。"

#: ../source/userdoc/model_bilaplacian.rst:81
msgid ""
"The test program :file:`bilaplacian.cc` is a good example of the use of the "
"previous bricks."
msgstr "テストプログラム :file:`bilaplacian.cc` はこのブリック要素の使用例です。"
