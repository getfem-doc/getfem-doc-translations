# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-04 23:23+0000\n"
"PO-Revision-Date: 2018-07-16 07:00+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/scilab/cmdref_gf_mesh_get.rst:8
msgid "gf_mesh_get"
msgstr "gf_mesh_get"

#: ../source/scilab/cmdref_gf_mesh_get.rst:10
msgid "**Synopsis**"
msgstr "**概要**"

#: ../source/scilab/cmdref_gf_mesh_get.rst:62
msgid "**Description :**"
msgstr "**説明 :**"

#: ../source/scilab/cmdref_gf_mesh_get.rst:65
msgid ""
"General mesh inquiry function. All these functions accept also a mesh_fem "
"argument instead of a mesh M (in that case, the mesh_fem linked mesh will be"
" used)."
msgstr ""
"一般的なメッシュ参照機能。これらの関数はすべて、mesh "
"M(この場合、mesh_femリンクメッシュが使用されます)の代わりにmesh_fem引数も受け入れます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:70
msgid "**Command list :**"
msgstr "**コマンドリスト**"

#: ../source/scilab/cmdref_gf_mesh_get.rst:74
msgid "``d = gf_mesh_get(mesh M, 'dim')``"
msgstr "``d = gf_mesh_get(mesh M, 'dim')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:76
msgid "Get the dimension of the mesh (2 for a 2D mesh, etc)."
msgstr "メッシュの次元を取得します(2次元メッシュに対して2など)。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:79
msgid "``np = gf_mesh_get(mesh M, 'nbpts')``"
msgstr "``np = gf_mesh_get(mesh M, 'nbpts')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:81
msgid "Get the number of points of the mesh."
msgstr "メッシュのポイント数を取得します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:84
msgid "``nc = gf_mesh_get(mesh M, 'nbcvs')``"
msgstr "``nc = gf_mesh_get(mesh M, 'nbcvs')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:86
msgid "Get the number of convexes of the mesh."
msgstr "メッシュの凸包の数を取得します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:89
msgid "``P = gf_mesh_get(mesh M, 'pts'[, ivec PIDs])``"
msgstr "``P = gf_mesh_get(mesh M, 'pts'[, ivec PIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:91
msgid "Return the list of point coordinates of the mesh."
msgstr "メッシュのポイントの座標リストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:93
msgid ""
"Each column of the returned matrix contains the coordinates of one point. If"
" the optional argument <literal>PIDs</literal> was given, only the points "
"whose #id is listed in this vector are returned. Otherwise, the returned "
"matrix will have gf_mesh_get(mesh M, 'max_pid') columns, which might be "
"greater than gf_mesh_get(mesh M, 'nbpts') (if some points of the mesh have "
"been destroyed and no call to gf_mesh_set(mesh M, 'optimize structure') have"
" been issued). The columns corresponding to deleted points will be filled "
"with NaN. You can use gf_mesh_get(mesh M, 'pid') to filter such invalid "
"points."
msgstr ""
"返されるマトリックスの各列には、各点の座標が含まれます。オプションの引数 <literal>PIDs</literal> "
"が指定された場合、このベクトルに #id がリストされているポイントのみが返されます。それ以外の場合、返されるマトリックスは "
"gf_mesh_get(mesh M, 'max_pid') 列になります。(メッシュの一部のポイントが破棄され、 gf_mesh_set(mesh "
"M, 'optimize structure')  が呼び出されていない場合)  gf_mesh_get(mesh M, 'nbpts')  "
"より大きい可能性があります。削除された点に対応する列はNaNで埋められます。そのような空のポイントを取り除くには gf_mesh_get(mesh M,"
" 'pid') を使用します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:104
msgid "``Pid = gf_mesh_get(mesh M, 'pid')``"
msgstr "``Pid = gf_mesh_get(mesh M, 'pid')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:106
msgid "Return the list of points #id of the mesh."
msgstr "メッシュのポイント #id のリストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:108
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbpts'), especially if some points have been removed "
"from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering."
msgstr ""
"番号付けは、0から gf_mesh_get(mesh M, 'nbpts') まで連続していないことに注意してください。  "
"gf_mesh_set(mesh M, 'optimize_structure')  を使用すると、連続した番号付けが行われます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:115
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in faces', imat CVFIDs)``"
msgstr "``PIDs = gf_mesh_get(mesh M, 'pid in faces', imat CVFIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:117
msgid "Return point #id listed in <literal>CVFIDs</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:119
msgid ""
"<literal>CVFIDs</literal> is a two-rows matrix, the first row lists convex "
"#ids, and the second lists face numbers. On return, <literal>PIDs</literal> "
"is a vector containing points #id."
msgstr ""
"<literal>CVFIDs</literal> は2行の行列で、最初の行には凸包の #id "
"がリストされ、2番目の行には面の番号がリストされます。返される  <literal>PIDs</literal> は、点#idを含むベクトルです。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:124
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in cvids', imat CVIDs)``"
msgstr "``PIDs = gf_mesh_get(mesh M, 'pid in cvids', imat CVIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:126
msgid "Return point #id listed in <literal>CVIDs</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:128
#: ../source/scilab/cmdref_gf_mesh_get.rst:135
msgid "<literal>PIDs</literal> is a vector containing points #id."
msgstr "<literal>PIDs</literal> はポイント #id を含むベクトルです。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:131
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in regions', imat RIDs)``"
msgstr "``PIDs = gf_mesh_get(mesh M, 'pid in regions', imat RIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:133
msgid "Return point #id listed in <literal>RIDs</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:138
msgid ""
"``PIDs = gf_mesh_get(mesh M, 'pid from coords', mat PTS[, scalar "
"radius=0])``"
msgstr ""
"``PIDs = gf_mesh_get(mesh M, 'pid from coords', mat PTS[, scalar "
"radius=0])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:140
msgid ""
"Return point #id whose coordinates are listed in <literal>PTS</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:142
msgid ""
"<literal>PTS</literal> is an array containing a list of point coordinates. "
"On return, <literal>PIDs</literal> is a vector containing points #id for "
"each point found in <literal>eps</literal> range, and -1 for those which "
"where not found in the mesh."
msgstr ""
"<literal>PTS</literal> は、点の座標のリストを含む配列です。返される <literal>PIDs</literal> は、 "
"<literal>eps</literal> の範囲内で見つかった各ポイントのポイント #id です。メッシュ内で見つからなかった場合には -1 "
"が返されます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:148
msgid "``{Pid, IDx} = gf_mesh_get(mesh M, 'pid from cvid'[, imat CVIDs])``"
msgstr "``{Pid, IDx} = gf_mesh_get(mesh M, 'pid from cvid'[, imat CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:150
msgid "Return the points attached to each convex of the mesh."
msgstr "メッシュの各凸包に取り付けられたポイントを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:152
msgid ""
"If <literal>CVIDs</literal> is omitted, all the convexes will be considered "
"(equivalent to <literal>CVIDs = gf_mesh_get(mesh M, 'max cvid')</literal>). "
"<literal>IDx</literal> is a vector, length(IDx) = length(CVIDs)+1. "
"<literal>Pid</literal> is a vector containing the concatenated list of #id "
"of points of each convex in <literal>CVIDs</literal>. Each entry of "
"<literal>IDx</literal> is the position of the corresponding convex point "
"list in <literal>Pid</literal>. Hence, for example, the list of #id of "
"points of the second convex is Pid(IDx(2):IDx(3)-1)."
msgstr ""
"<literal>CVIDs</literal> ( <literal>CVIDs = Mesh.max_cvid()</literal> "
"と同じです)を省略すると、すべての凸包が対象となります。 <literal>IDx</literal> はベクトルであり、 length(IDx) = "
"length(CVIDs)+1 です。 <literal>Pid</literal> は <literal>CVIDs</literal> "
"における各凸包の点の #id の連結リストを含むベクトルです。 <literal>IDx</literal> の各エントリは、 "
"<literal>Pid</literal> の対応する凸包点リストの位置です。したがって、例えば、第2凸包の点の #id のリストは "
"Pid(IDx(2):IDx(3)-1) です。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:161
#: ../source/scilab/cmdref_gf_mesh_get.rst:179
msgid ""
"If <literal>CVIDs</literal> contains convex #id which do not exist in the "
"mesh, their point list will be empty."
msgstr "<literal>CVIDs</literal> にメッシュに存在しない凸包の #id が含まれている場合、点リストは空になります。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:165
msgid "``{Pts, IDx} = gf_mesh_get(mesh M, 'pts from cvid'[, imat CVIDs])``"
msgstr "``{Pts, IDx} = gf_mesh_get(mesh M, 'pts from cvid'[, imat CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:167
msgid "Search point listed in <literal>CVID</literal>."
msgstr "<literal>CVID</literal> にリストされているポイント #id の検索。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:169
msgid ""
"Return <literal>Pts</literal> and <literal>IDx</literal>. If "
"<literal>CVIDs</literal> is omitted, all the convexes will be considered "
"(equivalent to <literal>CVIDs = gf_mesh_get(mesh M, 'max cvid')</literal>). "
"<literal>IDx</literal> is a vector, length(IDx) = length(CVIDs)+1. "
"<literal>Pts</literal> is a vector containing the concatenated list of "
"points of each convex in <literal>CVIDs</literal>. Each entry of "
"<literal>IDx</literal> is the position of the corresponding convex point "
"list in <literal>Pts</literal>. Hence, for example, the list of points of "
"the second convex is Pts(:,IDx(2):IDx(3)-1)."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:183
msgid "``CVid = gf_mesh_get(mesh M, 'cvid')``"
msgstr "``CVid = gf_mesh_get(mesh M, 'cvid')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:185
msgid "Return the list of all convex #id."
msgstr "すべての凸包#idのリストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:187
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbcvs'), especially if some points have been removed "
"from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering."
msgstr ""
"番号付けは、1から gf_mesh_get(mesh M, 'nbcvs') まで連続していないことに注意してください。  "
"gf_mesh_set(mesh M, 'optimize_structure')  を使用すると、連続した番号付けが行われます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:194
msgid "``m = gf_mesh_get(mesh M, 'max pid')``"
msgstr "``m = gf_mesh_get(mesh M, 'max pid')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:196
msgid "Return the maximum #id of all points in the mesh (see 'max cvid')."
msgstr "メッシュ内のすべてのポイントの最大 #id を返します( 'max cvid' を参照してください)。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:199
msgid "``m = gf_mesh_get(mesh M, 'max cvid')``"
msgstr "``m = gf_mesh_get(mesh M, 'max cvid')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:201
msgid "Return the maximum #id of all convexes in the mesh (see 'max pid')."
msgstr "メッシュ内のすべての凸包の最大#idを返します( 'max pid' を参照してください。)。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:204
msgid "``[E,C] = gf_mesh_get(mesh M, 'edges' [, CVLST][, 'merge'])``"
msgstr "``[E,C] = gf_mesh_get(mesh M, 'edges' [, CVLST][, 'merge'])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:206
#: ../source/scilab/cmdref_gf_mesh_get.rst:221
msgid "[OBSOLETE FUNCTION! will be removed in a future release]"
msgstr "[廃止される関数! 将来のリリースで削除される予定です]"

#: ../source/scilab/cmdref_gf_mesh_get.rst:208
msgid ""
"Return the list of edges of mesh M for the convexes listed in the row vector"
" CVLST. E is a 2 x nb_edges matrix containing point indices. If CVLST is "
"omitted, then the edges of all convexes are returned. If CVLST has two rows "
"then the first row is supposed to contain convex numbers, and the second "
"face numbers, of which the edges will be returned.  If 'merge' is indicated,"
" all common edges of convexes are merged in a single edge.  If the optional "
"output argument C is specified, it will contain the convex number associated"
" with each edge."
msgstr ""
"行ベクトルCVLSTにリストされている凸包のメッシュMのエッジのリストを返します。Eはポイントインデックスを含む 2 x nb_edges "
"行列です。CVLSTを省略すると、すべての凸包のエッジが返されます。CVLSTに2つの行がある場合、最初の行には凸包の数が含まれ、2番目の行には面の数が返されます。"
" 'merge' "
"が指定されている場合、凸包のすべての共通エッジが単一エッジにマージされます。オプションの出力引数Cを指定すると、各エッジに関連付けられた凸包の番号が含まれます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:219
msgid "``[E,C] = gf_mesh_get(mesh M, 'curved edges', int N [, CVLST])``"
msgstr "``[E,C] = gf_mesh_get(mesh M, 'curved edges', int N [, CVLST])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:223
msgid ""
"Return E and C. More sophisticated version of gf_mesh_get(mesh M, 'edges') "
"designed for curved elements. This one will return N (N>=2) points of the "
"(curved) edges. With N==2, this is equivalent to gf_mesh_get(mesh M, "
"'edges'). Since the points are no more always part of the mesh, their "
"coordinates are returned instead of points number, in the array E which is a"
" [ mesh_dim x 2 x nb_edges ] array.  If the optional output argument C is "
"specified, it will contain the convex number associated with each edge."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:234
msgid "``PIDs = gf_mesh_get(mesh M, 'orphaned pid')``"
msgstr "``PIDs = gf_mesh_get(mesh M, 'orphaned pid')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:236
msgid "Return point #id which are not linked to a convex."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:239
msgid ""
"``CVIDs = gf_mesh_get(mesh M, 'cvid from pid', ivec PIDs[, bool "
"share=False])``"
msgstr ""
"``CVIDs = gf_mesh_get(mesh M, 'cvid from pid', ivec PIDs[, bool "
"share=False])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:241
msgid ""
"Return convex #ids related with the point #ids given in "
"<literal>PIDs</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:243
msgid ""
"If <literal>share=False</literal>, search convex whose vertex #ids are in "
"<literal>PIDs</literal>. If <literal>share=True</literal>, search convex "
"#ids that share the point #ids given in <literal>PIDs</literal>. "
"<literal>CVIDs</literal> is a  vector (possibly empty)."
msgstr ""
"<literal>share=False</literal> の場合は、頂点#idsが <literal>PIDs</literal> "
"にある凸包を検索します。 <literal>share=True</literal> の場合は、  <literal>PIDs</literal> "
"で指定されたポイント #ids を共有する凸包 #ids を検索します。 <literal>CVIDs</literal> "
"は(空である可能性がある)ベクトルです。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:249
msgid "``CVFIDs = gf_mesh_get(mesh M, 'faces from pid', ivec PIDs)``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'faces from pid', ivec PIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:251
msgid ""
"Return the convex faces whose vertex #ids are in <literal>PIDs</literal>."
msgstr "頂点 #ids が <literal>PIDs</literal> にある凸包面を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:253
msgid ""
"<literal>CVFIDs</literal> is a two-rows matrix, the first row lists convex "
"#ids, and the second lists face numbers (local number in the convex). For a "
"convex face to be returned, EACH of its points have to be listed in "
"<literal>PIDs</literal>."
msgstr ""
"<literal>CVFIDs</literal> "
"は2行の行列で、最初の行には凸包の#idがリストされ、2番目の行には面番号(凸包のローカル番号)がリストされます。凸包面を返すには、その各点を "
"<literal>PIDs</literal> にリストする必要があります。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:259
msgid "``CVFIDs = gf_mesh_get(mesh M, 'outer faces'[, CVIDs])``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'outer faces'[, CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:261
msgid "Return the set of faces not shared by two elements."
msgstr "2つの要素で共有されていない面の集合を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:263
msgid ""
"The output <literal>CVFIDs</literal> is a two-rows matrix, the first row "
"lists convex #ids, and the second one lists face numbers (local number in "
"the convex). If <literal>CVIDs</literal> is not given, all convexes are "
"considered, and it basically returns the mesh boundary. If "
"<literal>CVIDs</literal> is given, it returns the boundary of the convex set"
" whose #ids are listed in <literal>CVIDs</literal>."
msgstr ""
"出力される <literal>CVFIDs</literal> は2行の行列であり、最初の行は凸包 #id "
"をリストし、二番目の行は面番号(凸包の局所番号)をリストします。<literal>CVIDs</literal> "
"が指定されていない場合、すべての凸包が考慮され、基本的にメッシュ境界が返されます。 <literal>CVIDs</literal> が指定された場合、"
" <literal>CVIDs</literal> に #id リストの凸包集合の境界を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:271
msgid "``CVFIDs = gf_mesh_get(mesh M, 'inner faces'[, CVIDs])``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'inner faces'[, CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:273
msgid ""
"Return the set of faces shared at least by two elements in CVIDs. Each face "
"is represented only once and is arbitrarily chosen between the two neighbour"
" elements."
msgstr "CVIDの2つ以上の要素が共有する面の集合を返します。各面は1回だけ表示され、2つの隣接エレメントの間で任意に選択されます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:278
msgid "``CVFIDs = gf_mesh_get(mesh M, 'all faces'[, CVIDs])``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'all faces'[, CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:280
msgid ""
"Return the set of faces of the in CVIDs (in all the mesh if CVIDs is "
"omitted). Note that the face shared by two neighbour elements will be "
"represented twice."
msgstr ""
"CVID(CVIDが省略されている場合、すべてのメッシュで)での面の集合を返します。2つの隣接する要素が共有する面が2回表示されることに注意してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:285
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces with direction', vec v, scalar "
"angle [, CVIDs])``"
msgstr ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces with direction', vec v, scalar "
"angle [, CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:287
msgid ""
"Return the set of faces not shared by two convexes and with a mean outward "
"vector lying within an angle <literal>angle</literal> (in radians) from "
"vector <literal>v</literal>."
msgstr ""
"2つの凸包によって共有されておらず、平均外向きベクトルがベクトル <literal>v</literal> からの角度 "
"<literal>angle</literal> (ラジアン)内にある面の集合を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:289
#: ../source/scilab/cmdref_gf_mesh_get.rst:299
#: ../source/scilab/cmdref_gf_mesh_get.rst:309
msgid ""
"The output <literal>CVFIDs</literal> is a two-rows matrix, the first row "
"lists convex #ids, and the second one lists face numbers (local number in "
"the convex). If <literal>CVIDs</literal> is given, it returns portion of the"
" boundary of the convex set defined by the #ids listed in "
"<literal>CVIDs</literal>."
msgstr ""
"出力される <literal>CVFIDs</literal> は2行の行列であり、最初の行は凸包の #ids "
"をリストし、2番目の行は面番号(凸包の局所番号)をリストします。 <literal>CVIDs</literal> が指定された場合、 "
"<literal>CVIDs</literal> にリストされた #id によって定義される凸包集合の境界の一部を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:295
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in box', vec pmin, vec pmax [, "
"CVIDs])``"
msgstr ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in box', vec pmin, vec pmax [, "
"CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:297
msgid ""
"Return the set of faces not shared by two convexes and lying within the box "
"defined by the corner points <literal>pmin</literal> and "
"<literal>pmax</literal>."
msgstr ""
"2つの凸包によって共有されておらず、コーナーポイント <literal>pmin</literal> と <literal>pmax "
"によって定義されるボックス内にある面の集合を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:305
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in ball', vec center, scalar "
"radius [, CVIDs])``"
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:307
msgid ""
"Return the set of faces not shared by two convexes and lying within the ball"
" of corresponding <literal>center</literal> and <literal>radius</literal>."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:315
msgid "``CVFIDs = gf_mesh_get(mesh M, 'adjacent face', int cvid, int fid)``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'adjacent face', int cvid, int fid)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:317
msgid ""
"Return convex face of the neighbour element if it exists. If the convex have"
" more than one neighbour relatively to the face "
"<literal></literal>f<literal></literal> (think to bar elements in 3D for "
"instance), return the first face found."
msgstr ""
"存在する場合、隣接する要素の凸包面を返します。凸包が面 <literal></literal>f<literal></literal> "
"(例えば、3次元で要素を抑制することを考える)に対して相対的に隣接する面を複数持つ場合、最初に見つかった面を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:323
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'faces from cvid'[, ivec CVIDs][, 'merge'])``"
msgstr ""
"``CVFIDs = gf_mesh_get(mesh M, 'faces from cvid'[, ivec CVIDs][, 'merge'])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:325
msgid "Return a list of convex faces from a list of convex #id."
msgstr "凸包 #id のリストから凸包面のリストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:327
msgid ""
"<literal>CVFIDs</literal> is a two-rows matrix, the first row lists convex "
"#ids, and the second lists face numbers (local number in the convex). If "
"<literal>CVIDs</literal> is not given, all convexes are considered. The "
"optional argument 'merge' merges faces shared by the convex of "
"<literal>CVIDs</literal>."
msgstr ""
"<literal>CVFIDs</literal> "
"は2行の行列で、最初の行には凸包の#idがリストされ、2番目の行には面番号(凸包のローカル番号)がリストされます。 "
"<literal>CVIDs</literal> が指定されていない場合、すべての凸包が対象となります。オプションの引数 'merge' は "
"<literal>CVIDs</literal> の凸包が共有している面を結合します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:333
msgid ""
"``[mat T] = gf_mesh_get(mesh M, 'triangulated surface', int Nrefine "
"[,CVLIST])``"
msgstr ""
"``[mat T] = gf_mesh_get(mesh M, 'triangulated surface', int Nrefine "
"[,CVLIST])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:335
msgid "[DEPRECATED FUNCTION! will be removed in a future release]"
msgstr "[非推奨! は将来のリリースで削除される予定です]"

#: ../source/scilab/cmdref_gf_mesh_get.rst:337
msgid ""
"Similar function to gf_mesh_get(mesh M, 'curved edges') : split (if "
"necessary, i.e. if the geometric transformation if non-linear) each face "
"into sub-triangles and return their coordinates in T (see also "
"gf_compute('eval on P1 tri mesh'))"
msgstr ""
"gf_mesh_get(mesh M, 'curved edges') "
"に似た関数です。各面をサブ三角形に分割(必要に応じて、つまり非線形の場合は幾何変換)して、T (gf_compute('eval on P1 tri "
"mesh')を参照)の座標を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:343
msgid ""
"``N = gf_mesh_get(mesh M, 'normal of face', int cv, int f[, int nfpt])``"
msgstr ""
"``N = gf_mesh_get(mesh M, 'normal of face', int cv, int f[, int nfpt])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:345
msgid ""
"Return the normal vector of convex <literal>cv</literal>, face "
"<literal>f</literal> at the <literal>nfpt</literal> point of the face."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:347
msgid ""
"If <literal>nfpt</literal> is not specified, then the normal is evaluated at"
" each geometrical node of the face."
msgstr "<literal>nfpt</literal> が指定されていない場合、法線は面の各ジオメトリノードで評価されます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:351
msgid "``N = gf_mesh_get(mesh M, 'normal of faces', imat CVFIDs)``"
msgstr "``N = gf_mesh_get(mesh M, 'normal of faces', imat CVFIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:353
msgid "Return matrix of (at face centers) the normal vectors of convexes."
msgstr ""

#: ../source/scilab/cmdref_gf_mesh_get.rst:355
msgid ""
"<literal>CVFIDs</literal> is supposed a two-rows matrix, the first row lists"
" convex #ids, and the second lists face numbers (local number in the "
"convex)."
msgstr ""
"<literal>CVFID</literal>は2行の行列を想定しており、最初の行は凸包の #id "
"をリストし、2番目の行は面番号(凸包のローカル番号)をリストしています。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:359
msgid "``CVIDs = gf_mesh_get(mesh M, 'convexes in box', vec pmin, vec pmax)``"
msgstr ""
"``CVIDs = gf_mesh_get(mesh M, 'convexes in box', vec pmin, vec pmax)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:361
msgid ""
"Return the set of convexes lying entirely within the box defined by the "
"corner points <literal>pmin</literal> and <literal>pmax</literal>."
msgstr ""
"コーナーポイント  <literal>pmin</literal> と <literal>pmax</literal> "
"で定義されたボックス内に完全に収まる凸包集合を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:363
msgid ""
"The output <literal>CVIDs</literal> is a two-rows matrix, the first row "
"lists convex #ids, and the second one lists face numbers (local number in "
"the convex). If <literal>CVIDs</literal> is given, it returns portion of the"
" boundary of the convex set defined by the #ids listed in "
"<literal>CVIDs</literal>."
msgstr ""
"出力される <literal>CVIDs</literal> は2行の行列であり、最初の行は凸包の #ids "
"をリストし、2番目の行は面番号(凸包の局所番号)をリストします。 <literal>CVIDs</literal> が指定された場合、 "
"<literal>CVIDs</literal> にリストされた #id によって定義される凸包集合の境界の一部を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:369
msgid "``Q = gf_mesh_get(mesh M, 'quality'[, ivec CVIDs])``"
msgstr "``Q = gf_mesh_get(mesh M, 'quality'[, ivec CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:371
msgid ""
"Return an estimation of the quality of each convex (<latex "
"style=\"text\"><![CDATA[0 \\leq Q \\leq 1]]></latex>)."
msgstr ""
"各凸包の品質の推定値を返します (<latex style=\"text\"><![CDATA[0 \\leq Q \\leq "
"1]]></latex>) 。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:374
msgid "``A = gf_mesh_get(mesh M, 'convex area'[, ivec CVIDs])``"
msgstr "``A = gf_mesh_get(mesh M, 'convex area'[, ivec CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:376
msgid "Return an estimate of the area of each convex."
msgstr "各凸包の面積の推定値を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:379
msgid "``A = gf_mesh_get(mesh M, 'convex radius'[, ivec CVIDs])``"
msgstr "``A = gf_mesh_get(mesh M, 'convex radius'[, ivec CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:381
msgid "Return an estimate of the radius of each convex."
msgstr "各凸包の半径の推定値を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:384
msgid "``{S, CV2S} = gf_mesh_get(mesh M, 'cvstruct'[, ivec CVIDs])``"
msgstr "``{S, CV2S} = gf_mesh_get(mesh M, 'cvstruct'[, ivec CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:386
msgid "Return an array of the convex structures."
msgstr "凸包構造の配列を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:388
msgid ""
"If <literal>CVIDs</literal> is not given, all convexes are considered. Each "
"convex structure is listed once in <literal>S</literal>, and "
"<literal>CV2S</literal> maps the convexes indice in <literal>CVIDs</literal>"
" to the indice of its structure in <literal>S</literal>."
msgstr ""
"<literal>CVIDs</literal> が指定されていない場合、すべての凸包が考慮されます。各凸包構造は "
"<literal>S</literal> に1つずつ記載されており、 <literal>CV2S</literal> は "
"<literal>CVIDs</literal> の凸包のインデックスを <literal>S</literal> "
"の構造インデックスにマップしています。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:393
msgid "``{GT, CV2GT} = gf_mesh_get(mesh M, 'geotrans'[, ivec CVIDs])``"
msgstr "``{GT, CV2GT} = gf_mesh_get(mesh M, 'geotrans'[, ivec CVIDs])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:395
msgid "Returns an array of the geometric transformations."
msgstr "幾何変換の配列を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:397
msgid "See also gf_mesh_get(mesh M, 'cvstruct')."
msgstr "gf_mesh_get(mesh M, 'cvstruct') も参照してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:400
msgid "``RIDs = gf_mesh_get(mesh M, 'boundaries')``"
msgstr "``RIDs = gf_mesh_get(mesh M, 'boundaries')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:402
msgid "DEPRECATED FUNCTION. Use 'regions' instead."
msgstr "非推奨関数です。代わりに 'regions' を使用してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:405
msgid "``RIDs = gf_mesh_get(mesh M, 'regions')``"
msgstr "``RIDs = gf_mesh_get(mesh M, 'regions')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:407
msgid "Return the list of valid regions stored in the mesh."
msgstr "メッシュに保存されている有効な領域のリストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:410
msgid "``RIDs = gf_mesh_get(mesh M, 'boundary')``"
msgstr "``RIDs = gf_mesh_get(mesh M, 'boundary')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:412
msgid "DEPRECATED FUNCTION. Use 'region' instead."
msgstr "非推奨関数です。代わりに 'regions' を使用してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:415
msgid "``CVFIDs = gf_mesh_get(mesh M, 'region', ivec RIDs)``"
msgstr "``CVFIDs = gf_mesh_get(mesh M, 'region', ivec RIDs)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:417
msgid ""
"Return the list of convexes/faces on the regions <literal>RIDs</literal>."
msgstr "領域  <literal>RIDs</literal> 上の凸包/面のリストを返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:419
msgid ""
"<literal>CVFIDs</literal> is a two-rows matrix, the first row lists convex "
"#ids, and the second lists face numbers (local number in the convex). (and 0"
" when the whole convex is in the regions)."
msgstr ""
"<literal>CVFIDs</literal> は2行の行列で、最初の行には凸包の #id "
"がリストされ、2番目の行には面番号(凸包のローカル番号)がリストされます。(凸包全体が領域内にある場合は 0 です)。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:425
msgid "``gf_mesh_get(mesh M, 'save', string filename)``"
msgstr "``gf_mesh_get(mesh M, 'save', string filename)``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:427
msgid "Save the mesh object to an ascii file."
msgstr "メッシュオブジェクトをASCIIファイルに保存します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:429
msgid "This mesh can be restored with gf_mesh('load', filename)."
msgstr "このメッシュは gf_mesh('load', filename) で復元できます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:432
msgid "``s = gf_mesh_get(mesh M, 'char')``"
msgstr "``s = gf_mesh_get(mesh M, 'char')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:434
msgid "Output a string description of the mesh."
msgstr "メッシュのstring descriptionを出力します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:437
msgid ""
"``gf_mesh_get(mesh M, 'export to vtk', string filename, ... "
"[,'ascii'][,'quality'])``"
msgstr ""
"``gf_mesh_get(mesh M, 'export to vtk', string filename, ... "
"[,'ascii'][,'quality'])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:439
msgid "Exports a mesh to a VTK file ."
msgstr "メッシュをVTKファイルに書き出します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:441
msgid ""
"If 'quality' is specified, an estimation of the quality of each convex will "
"be written to the file."
msgstr "'quality' が指定された場合、各凸包の品質の見積りがファイルに書き込まれます。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:444
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to vtk'), gf_slice_get(slice "
"S, 'export to vtk')."
msgstr ""
"gf_mesh_fem_get(mesh_fem MF, 'export to vtk'), gf_slice_get(slice S, 'export"
" to vtk') も参照してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:447
msgid ""
"``gf_mesh_get(mesh M, 'export to dx', string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])``"
msgstr ""
"``gf_mesh_get(mesh M, 'export to dx', string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:449
msgid "Exports a mesh to an OpenDX file."
msgstr "メッシュをOpenDXファイルに書き出します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:451
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to dx'), gf_slice_get(slice S,"
" 'export to dx')."
msgstr ""
"gf_mesh_fem_get(mesh_fem MF, 'export to dx'), gf_slice_get(slice S, 'export "
"to dx') も参照してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:454
msgid ""
"``gf_mesh_get(mesh M, 'export to pos', string filename[, string name])``"
msgstr ""
"``gf_mesh_get(mesh M, 'export to pos', string filename[, string name])``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:456
msgid "Exports a mesh to a POS file ."
msgstr "メッシュをPOSファイルに書き出します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:458
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to pos'), gf_slice_get(slice "
"S, 'export to pos')."
msgstr ""
"gf_mesh_fem_get(mesh_fem MF, 'export to pos'), gf_slice_get(slice S, 'export"
" to pos') も参照してください。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:461
msgid "``z = gf_mesh_get(mesh M, 'memsize')``"
msgstr "``z = gf_mesh_get(mesh M, 'memsize')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:463
msgid "Return the amount of memory (in bytes) used by the mesh."
msgstr "メッシュが使用するメモリの量(バイト単位)を返します。"

#: ../source/scilab/cmdref_gf_mesh_get.rst:466
msgid "``gf_mesh_get(mesh M, 'display')``"
msgstr "``gf_mesh_get(mesh M, 'display')``"

#: ../source/scilab/cmdref_gf_mesh_get.rst:468
msgid "displays a short summary for a mesh object."
msgstr "meshオブジェクトの簡単な概要を表示します。"
