# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-17 02:16+0000\n"
"PO-Revision-Date: 2018-07-16 06:58+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/scilab/cmdref_gf_slice.rst:8
msgid "gf_slice"
msgstr "gf_slice"

#: ../source/scilab/cmdref_gf_slice.rst:10
msgid "**Synopsis**"
msgstr "**概要**"

#: ../source/scilab/cmdref_gf_slice.rst:19
msgid "**Description :**"
msgstr "**説明 :**"

#: ../source/scilab/cmdref_gf_slice.rst:22
msgid "General constructor for slice objects."
msgstr "sliceオブジェクトの汎用的なコンストラクタです．"

#: ../source/scilab/cmdref_gf_slice.rst:24
msgid ""
"Creation of a mesh slice. Mesh slices are very similar to a P1-discontinuous"
" mesh_fem on which interpolation is very fast. The slice is built from a "
"mesh object, and a description of the slicing operation, for example::"
msgstr ""
"メッシュスライスの作成をします．メッシュスライスは，補間が非常に高速なP1不連続mesh_femに非常によく似ています．スライスは，メッシュオブジェクトとスライス操作の記述により作成されます．次に例を示します．"

#: ../source/scilab/cmdref_gf_slice.rst:31
msgid ""
"cuts the original mesh with the half space {y>0}. Each convex of the "
"original mesh <literal>m</literal> is simplexified (for example a quadrangle"
" is splitted into 2 triangles), and each simplex is refined 5 times."
msgstr ""
"は元のmeshを半空間 {y>0} で切り取ります．元のメッシュ <literal>m</literal> "
"の各凸を単純化します(例えば，四角形は2つの三角形に分割されます)．そして各単体は5回リファインされます．"

#: ../source/scilab/cmdref_gf_slice.rst:35
msgid "Slicing operations can be:"
msgstr "スライス操作には次のものがあります．"

#: ../source/scilab/cmdref_gf_slice.rst:37
msgid "cutting with a plane, a sphere or a cylinder"
msgstr "平面，球または円柱を使った切断"

#: ../source/scilab/cmdref_gf_slice.rst:38
msgid "intersection or union of slices"
msgstr "スライスの交差または結合"

#: ../source/scilab/cmdref_gf_slice.rst:39
msgid "isovalues surfaces/volumes"
msgstr "等値面/体"

#: ../source/scilab/cmdref_gf_slice.rst:40
msgid "\"points\", \"streamlines\" (see below)"
msgstr "\"points\", \"streamlines\" (下記参照)"

#: ../source/scilab/cmdref_gf_slice.rst:42
msgid ""
"If the first argument is a mesh_fem <literal>mf</literal> instead of a mesh,"
" and if it is followed by a <literal>mf</literal>-field "
"<literal>u</literal>, then the deformation <literal>u</literal> will be "
"applied to the mesh before the slicing operation."
msgstr ""
"最初の引数がmeshではなくmesh_fem <literal>mf</literal> で，その後に <literal>mf</literal> "
"フィールド <literal>u</literal> が続く場合，変形 <literal>u</literal> "
"はスライス操作の前にメッシュに適用されます．"

#: ../source/scilab/cmdref_gf_slice.rst:46
msgid "The first argument can also be a slice."
msgstr "最初の引数はスライスにすることもできます．"

#: ../source/scilab/cmdref_gf_slice.rst:49
msgid "**Command list :**"
msgstr "**コマンドリスト**"

#: ../source/scilab/cmdref_gf_slice.rst:53
msgid ""
"``sl = gf_slice(sliceop, {slice sl|{mesh m| mesh_fem mf, vec U}, int "
"refine}[, mat CVfids])``"
msgstr ""
"``sl = gf_slice(sliceop, {slice sl|{mesh m| mesh_fem mf, vec U}, int "
"refine}[, mat CVfids])``"

#: ../source/scilab/cmdref_gf_slice.rst:55
msgid "Create a slice using <literal>sliceop</literal> operation."
msgstr "<literal>sliceop</literal>操作を使用してスライスを作成します．"

#: ../source/scilab/cmdref_gf_slice.rst:57
msgid ""
"<literal>sliceop</literal> operation is specified with Scilab CELL arrays "
"(i.e. with braces) . The first element is the name of the operation, "
"followed the slicing options:"
msgstr ""
"<literal>sliceop</literal>オペレーションはScilab "
"CELL配列で指定されます(例:中括弧)．最初の要素はオペレーションの名前で，その後にスライシングオプションが続きます．"

#: ../source/scilab/cmdref_gf_slice.rst:60
msgid "{'none'} : Does not cut the mesh."
msgstr "{'none'} : メッシュをカットしません．"

#: ../source/scilab/cmdref_gf_slice.rst:63
msgid ""
"{'planar', int orient, vec p, vec n} : Planar cut. <literal>p</literal> and "
"<literal>n</literal> define a half-space, <literal>p</literal> being a point"
" belong to the boundary of the half-space, and <literal>n</literal> being "
"its normal. If <literal>orient</literal> is equal to -1 (resp. 0, +1), then "
"the slicing operation will cut the mesh with the \"interior\" (resp. "
"\"boundary\", \"exterior\") of the half-space. <literal>orient</literal> may"
" also be set to +2 which means that the mesh will be sliced, but both the "
"outer and inner parts will be kept."
msgstr ""
"{'planar', int orient, vec p, vec n} : 平面カット． <literal>p</literal> と "
"<literal>n</literal> は半空間を定義し， <literal>p</literal> は半空間の境界に属する点であり， "
"<literal>n</literal> はその法線です． <literal>orient</literal> が -1 (または 0, +1) "
"に等しい場合，スライス操作は半空間の \"内側\" (または \"境界\", \"外側\") でメッシュを切断します． "
"<literal>orient</literal> を+2に設定すると，メッシュはスライスされますが，外側と内側の両方の部分は保持されます．"

#: ../source/scilab/cmdref_gf_slice.rst:71
msgid ""
"{'ball', int orient, vec c, scalar r} : Cut with a ball of center "
"<literal>c</literal> and radius <literal>r</literal>."
msgstr ""
"{'ball', int orient, vec c, scalar r} : 中心 <literal>c</literal> と半径 "
"<literal>r</literal> の球でカットします．"

#: ../source/scilab/cmdref_gf_slice.rst:74
msgid ""
"{'cylinder', int orient, vec p1, vec p2, scalar r} : Cut with a cylinder "
"whose axis is the line <literal>(p1, p2)</literal> and whose radius is "
"<literal>r</literal>."
msgstr ""
"{'cylinder', int orient, vec p1, vec p2, scalar r} : 軸が <literal>(p1, "
"p2)</literal> 線で半径が <literal>r</literal> の円柱で切断します．"

#: ../source/scilab/cmdref_gf_slice.rst:78
msgid ""
"{'isovalues', int orient, mesh_fem mf, vec U, scalar s} : Cut using the "
"isosurface of the field <literal>U</literal> (defined on the mesh_fem "
"<literal>mf</literal>). The result is the set <literal>{x such that <latex "
"style=\"text\"><![CDATA[U(x) \\leq s]]></latex>}</literal> or <literal>{x "
"such that </literal>U<literal>(x)=</literal>s<literal>}</literal> or "
"<literal>{x such that </literal>U<literal>(x) >= "
"</literal>s<literal>}</literal> depending on the value of "
"<literal>orient</literal>."
msgstr ""
"{'isovalues', int orient, mesh_fem mf, vec U, scalar s} : (mesh_fem "
"<literal>mf</literal> で定義された)フィールド <literal>U</literal> の等値面を使用して切断します．結果は "
"<literal>orient</literal> の値に応じて <literal>{x such that <latex "
"style=\"text\"><![CDATA[U(x) \\leq s]]></latex>} </literal>または <literal>{x "
"such that </literal>U<literal>(x)=</literal>s<literal>}</literal> または "
"<literal>{x such that </literal>U<literal>(x) >= "
"</literal>s<literal>}</literal> になります．"

#: ../source/scilab/cmdref_gf_slice.rst:84
msgid ""
"{'boundary'[, SLICEOP]} : Return the boundary of the result of SLICEOP, "
"where SLICEOP is any slicing operation. If SLICEOP is not specified, then "
"the whole mesh is considered (i.e. it is equivalent to "
"{'boundary',{'none'}})."
msgstr ""
"{'boundary'[, SLICEOP]} : "
"SLICEOPの結果の境界を返します．ここで，SLICEOPはスライシング操作です．SLICEOPが指定されていない場合は，メッシュ全体(つまり， "
"{'boundary',{'none'}}) と見なされます．"

#: ../source/scilab/cmdref_gf_slice.rst:89
msgid ""
"{'explode', mat Coef} : Build an 'exploded' view of the mesh: each convex is"
" shrinked (<latex style=\"text\"><![CDATA[0 < \\text{Coef} \\leq "
"1]]></latex>). In the case of 3D convexes, only their faces are kept."
msgstr ""
"{'explode', mat Coef} : メッシュの 'exploded' 表示を構築します．各凸が (<latex "
"style=\"text\"><![CDATA[0 < \\text{Coef} \\leq 1]]></latex>) "
"収縮されます．3次元凸の場合，面のみが保持されます．"

#: ../source/scilab/cmdref_gf_slice.rst:93
msgid ""
"{'union', SLICEOP1, SLICEOP2} : Returns the union of slicing operations."
msgstr "{'union', SLICEOP1, SLICEOP2} : スライス操作の和集合を返します．"

#: ../source/scilab/cmdref_gf_slice.rst:96
msgid ""
"{'intersection', SLICEOP1, SLICEOP2} : Returns the intersection of slicing "
"operations, for example::"
msgstr "{'intersection', SLICEOP1, SLICEOP2} : スライスの交差操作を返します．例えば"

#: ../source/scilab/cmdref_gf_slice.rst:102
msgid "{'comp', SLICEOP} : Returns the complementary of slicing operations."
msgstr "{'comp', SLICEOP} : スライス操作の補完を返します．"

#: ../source/scilab/cmdref_gf_slice.rst:105
msgid ""
"{'diff', SLICEOP1, SLICEOP2} : Returns the difference of slicing operations."
msgstr "{'diff', SLICEOP1, SLICEOP2} : スライス操作の差を返します．"

#: ../source/scilab/cmdref_gf_slice.rst:108
msgid ""
"{'mesh', mesh m} : Build a slice which is the intersection of the sliced "
"mesh with another mesh. The slice is such that all of its simplexes are "
"stricly contained into a convex of each mesh."
msgstr ""
"{'mesh', mesh m} : "
"スライスされたメッシュと別のメッシュの交差部分のスライスを作成します．このスライスは，すべての単項が各メッシュの凸に厳密に含まれるものです．"

#: ../source/scilab/cmdref_gf_slice.rst:115
msgid "``sl = gf_slice('streamlines', mesh_fem mf, mat U, mat S)``"
msgstr "``sl = gf_slice('streamlines', mesh_fem mf, mat U, mat S)``"

#: ../source/scilab/cmdref_gf_slice.rst:117
msgid ""
"Compute streamlines of the (vector) field <literal>U</literal>, with seed "
"points given by the columns of <literal>S</literal>."
msgstr ""
"<literal>S</literal> の列で与えられるシード点を使って，(ベクトル)フィールド <literal>U</literal> "
"の流線を計算します．"

#: ../source/scilab/cmdref_gf_slice.rst:121
msgid "``sl = gf_slice('points', mesh m, mat Pts)``"
msgstr "``sl = gf_slice('points', mesh m, mat Pts)``"

#: ../source/scilab/cmdref_gf_slice.rst:123
msgid ""
"Return the \"slice\" composed of points given by the columns of "
"<literal>Pts</literal> (useful for interpolation on a given set of sparse "
"points, see <literal></literal>gf_compute('interpolate "
"on',sl)<literal></literal>)."
msgstr ""
"<literal>Pts</literal>のカラムで指定された点で構成される \"スライス\" を返します．( "
"指定されたスパース点の集合上の補間に役立ちます． <literal></literal>gf_compute('interpolate "
"on',sl)<literal></literal> を参照してください）．"

#: ../source/scilab/cmdref_gf_slice.rst:128
msgid "``sl = gf_slice('load', string filename[, mesh m])``"
msgstr "``sl = gf_slice('load', string filename[, mesh m])``"

#: ../source/scilab/cmdref_gf_slice.rst:130
msgid ""
"Load the slice (and its linked mesh if it is not given as an argument) from "
"a text file."
msgstr "テキストファイルからスライス(および，引数として指定されていない場合，リンクされたメッシュ)を読み込みます．"
