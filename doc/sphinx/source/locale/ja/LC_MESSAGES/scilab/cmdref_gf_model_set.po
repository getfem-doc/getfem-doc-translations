# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-26 01:07+0000\n"
"PO-Revision-Date: 2018-07-16 07:01+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/scilab/cmdref_gf_model_set.rst:8
msgid "gf_model_set"
msgstr "gf_model_set"

#: ../source/scilab/cmdref_gf_model_set.rst:10
msgid "**Synopsis**"
msgstr "**概要**"

#: ../source/scilab/cmdref_gf_model_set.rst:152
msgid "**Description :**"
msgstr "**説明 :**"

#: ../source/scilab/cmdref_gf_model_set.rst:155
msgid "Modifies a model object."
msgstr "モデルオブジェクトを変更します．"

#: ../source/scilab/cmdref_gf_model_set.rst:158
msgid "**Command list :**"
msgstr "**コマンドリスト**"

#: ../source/scilab/cmdref_gf_model_set.rst:162
msgid "``gf_model_set(model M, 'clear')``"
msgstr "``gf_model_set(model M, 'clear')``"

#: ../source/scilab/cmdref_gf_model_set.rst:164
msgid "Clear the model."
msgstr "モデルをクリアします．"

#: ../source/scilab/cmdref_gf_model_set.rst:167
msgid ""
"``gf_model_set(model M, 'add fem variable', string name, mesh_fem mf)``"
msgstr ""
"``gf_model_set(model M, 'add fem variable', string name, mesh_fem mf)``"

#: ../source/scilab/cmdref_gf_model_set.rst:169
msgid ""
"Add a variable to the model linked to a mesh_fem. <literal>name</literal> is"
" the variable name."
msgstr "mesh_femにリンクされたモデルに変数を追加します． <literal>name</literal> は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:173
msgid ""
"``gf_model_set(model M, 'add filtered fem variable', string name, mesh_fem "
"mf, int region)``"
msgstr ""
"``gf_model_set(model M, 'add filtered fem variable', string name, mesh_fem "
"mf, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:175
msgid ""
"Add a variable to the model linked to a mesh_fem. The variable is filtered "
"in the sense that only the dof on the region are considered. "
"<literal>name</literal> is the variable name."
msgstr ""
"mesh_femにリンクされたモデルに変数を追加します．変数は，領域上の自由度のみが考慮されるという意味でフィルタリングされます． "
"<literal>name</literal> は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:180
msgid ""
"``gf_model_set(model M, 'add im variable', string name, mesh_imd mimd)``"
msgstr ""
"``gf_model_set(model M, 'add im variable', string name, mesh_imd mimd)``"

#: ../source/scilab/cmdref_gf_model_set.rst:182
msgid ""
"Add a variable to the model linked to a mesh_imd. <literal>name</literal> is"
" the variable name."
msgstr "mesh_imdにリンクされたモデルに変数を追加します． <literal>name</literal> は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:186
msgid ""
"``gf_model_set(model M, 'add internal im variable', string name, mesh_imd "
"mimd)``"
msgstr ""
"``gf_model_set(model M, 'add internal im variable', string name, mesh_imd "
"mimd)``"

#: ../source/scilab/cmdref_gf_model_set.rst:188
msgid ""
"Add a variable to the model, which is linked to a mesh_imd and will be "
"condensed out during the assemblage of the tangent matrix. "
"<literal>name</literal> is the variable name."
msgstr ""
"モデルに変数を追加します．この変数は mesh_imd "
"にリンクされており，接線行列のアセンブリ中に縮約されます．<literal>name</literal>は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:193
msgid "``gf_model_set(model M, 'add variable', string name, sizes)``"
msgstr "``gf_model_set(model M, 'add variable', string name, sizes)``"

#: ../source/scilab/cmdref_gf_model_set.rst:195
msgid ""
"Add a variable to the model of constant sizes. <literal>sizes</literal> is "
"either a integer (for a scalar or vector variable) or a vector of dimensions"
" for a tensor variable. <literal>name</literal> is the variable name."
msgstr ""
"一定サイズのモデルに変数を追加します． <literal>sizes</literal> "
"は整数(スカラー変数またはベクトル変数の場合)かテンソル変数の次元のベクトルです． <literal>name</literal> は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:200
msgid "``gf_model_set(model M, 'delete variable', string name)``"
msgstr "``gf_model_set(model M, 'delete variable', string name)``"

#: ../source/scilab/cmdref_gf_model_set.rst:202
#: ../source/scilab/cmdref_gf_model_set.rst:292
msgid "Delete a variable or a data from the model."
msgstr "モデルから変数またはデータを削除します．"

#: ../source/scilab/cmdref_gf_model_set.rst:205
msgid "``gf_model_set(model M, 'resize variable', string name, sizes)``"
msgstr "``gf_model_set(model M, 'resize variable', string name, sizes)``"

#: ../source/scilab/cmdref_gf_model_set.rst:207
msgid ""
"Resize a  constant size variable of the model.  <literal>sizes</literal> is "
"either a integer (for a scalar or vector variable) or a vector of dimensions"
" for a tensor variable. <literal>name</literal> is the variable name."
msgstr ""
"モデルの一定サイズ変数のサイズを変更します． <literal>sizes</literal> "
"は(スカラー変数またはベクトル変数の場合)整数かテンソル変数の次元のベクトルです． <literal>name</literal> は変数名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:212
msgid ""
"``gf_model_set(model M, 'add multiplier', string name, mesh_fem mf, string "
"primalname[, mesh_im mim, int region])``"
msgstr ""
"``gf_model_set(model M, 'add multiplier', string name, mesh_fem mf, string "
"primalname[, mesh_im mim, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:214
msgid ""
"Add a particular variable linked to a fem being a multiplier with respect to"
" a primal variable. The dof will be filtered with the "
"<literal></literal>gmm::range_basis<literal></literal> function applied on "
"the terms of the model which link the multiplier and the primal variable. "
"This in order to retain only linearly independent constraints on the primal "
"variable. Optimized for boundary multipliers."
msgstr ""
"有限要素法にリンクされた特定の変数を，原始変数に対する乗数として追加します．自由度は<literal></literal>gmm::range_basis<literal></literal>"
" "
"関数でフィルタリングされ，乗数と原始変数をリンクするモデルの項に適用されます．これは，主変数に対する線形独立制約のみを保持するためです．境界乗数用に最適化されています．"

#: ../source/scilab/cmdref_gf_model_set.rst:222
msgid "``gf_model_set(model M, 'add im data', string name, mesh_imd mimd)``"
msgstr "``gf_model_set(model M, 'add im data', string name, mesh_imd mimd)``"

#: ../source/scilab/cmdref_gf_model_set.rst:224
msgid ""
"Add a data set to the model linked to a mesh_imd. <literal>name</literal> is"
" the data name."
msgstr "mesh_imdにリンクされたモデルにデータセットを追加します． <literal>name</literal> はデータ名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:228
msgid ""
"``gf_model_set(model M, 'add fem data', string name, mesh_fem mf[, sizes])``"
msgstr ""
"``gf_model_set(model M, 'add fem data', string name, mesh_fem mf[, sizes])``"

#: ../source/scilab/cmdref_gf_model_set.rst:230
msgid ""
"Add a data to the model linked to a mesh_fem. <literal>name</literal> is the"
" data name, <literal>sizes</literal> an optional parameter which is either "
"an integer  or a vector of suplementary dimensions with respect to "
"<literal>mf</literal>."
msgstr ""
"mesh_femにリンクされたモデルにデータを追加します． <literal>name</literal> はデータ名であり， "
"<literal>sizes</literal> はオプションのパラメータであり， <literal>mf</literal> "
"に関して補間的な次元の整数またはベクトルです．"

#: ../source/scilab/cmdref_gf_model_set.rst:235
msgid ""
"``gf_model_set(model M, 'add initialized fem data', string name, mesh_fem "
"mf, vec V[, sizes])``"
msgstr ""
"``gf_model_set(model M, 'add initialized fem data', string name, mesh_fem "
"mf, vec V[, sizes])``"

#: ../source/scilab/cmdref_gf_model_set.rst:237
msgid ""
"Add a data to the model linked to a mesh_fem. <literal>name</literal> is the"
" data name. The data is initiakized with <literal>V</literal>. The data can "
"be a scalar or vector field. <literal>sizes</literal> an optional parameter "
"which is either an integer or a vector of suplementary dimensions with "
"respect to <literal>mf</literal>."
msgstr ""
"mesh_femにリンクされたモデルにデータを追加します． <literal>name</literal> はデータ名です．データは "
"<literal>V</literal> で初期化されます．データはスカラーまたはベクトルフィールドです． "
"<literal>sizes</literal> はオプションのパラメータであり， "
"<literal>mf</literal>に対する補完次元の整数またはベクトルです．"

#: ../source/scilab/cmdref_gf_model_set.rst:243
msgid "``gf_model_set(model M, 'add data', string name, int size)``"
msgstr "``gf_model_set(model M, 'add data', string name, int size)``"

#: ../source/scilab/cmdref_gf_model_set.rst:245
msgid ""
"Add a fixed size data to the model.  <literal>sizes</literal> is either a "
"integer (for a scalar or vector data) or a vector of dimensions for a tensor"
" data. <literal>name</literal> is the data name."
msgstr ""
"固定サイズのデータをモデルに追加します． <literal>sizes</literal> "
"は整数(スカラーまたはベクトルデータ用)かテンソルデータの次元のベクトルです． <literal>name</literal> はデータ名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:250
msgid "``gf_model_set(model M, 'add macro', string name, string expr)``"
msgstr "``gf_model_set(model M, 'add macro', string name, string expr)``"

#: ../source/scilab/cmdref_gf_model_set.rst:252
msgid ""
"Define a new macro for the high generic assembly language. The name include "
"the parameters. For instance name='sp(a,b)', expr='a.b' is a valid "
"definition. Macro without parameter can also be defined. For instance "
"name='x1', expr='X[1]' is valid. The form name='grad(u)', expr='Grad_u' is "
"also allowed but in that case, the parameter 'u' will only be allowed to be "
"a variable name when using the macro. Note that macros can be directly "
"defined inside the assembly strings with the keyword 'Def'."
msgstr ""
"汎用アセンブリ言語の新しいマクロを定義します．名前にはパラメータが含まれます．例えば， name='sp(a,b)' ， expr='a.b' "
"は有効な定義です．パラメータのないマクロも定義できます．たとえば， name='x1'， expr='X[1]' は有効です． "
"name='grad(u)'， expr='Grad_u' という形式も使用できますが，この場合，パラメータ 'u' "
"はマクロの使用時にのみ変数名として許可されます．マクロは，キーワード 'Def' を使用してアセンブリ文字列内に直接定義できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:263
msgid "``gf_model_set(model M, 'del macro', string name)``"
msgstr "``gf_model_set(model M, 'del macro', string name)``"

#: ../source/scilab/cmdref_gf_model_set.rst:265
msgid ""
"Delete a previously defined macro for the high generic assembly language."
msgstr "汎用アセンブリ言語用に定義済みのマクロを削除します．"

#: ../source/scilab/cmdref_gf_model_set.rst:269
msgid ""
"``gf_model_set(model M, 'add initialized data', string name, vec V[, "
"sizes])``"
msgstr ""
"``gf_model_set(model M, 'add initialized data', string name, vec V[, "
"sizes])``"

#: ../source/scilab/cmdref_gf_model_set.rst:271
msgid ""
"Add an initialized fixed size data to the model. <literal>sizes</literal> an"
" optional parameter which is either an integer  or a vector dimensions that "
"describes the format of the data. By default, the data is considered to b a "
"vector field. <literal>name</literal> is the data name and "
"<literal>V</literal> is the value of the data."
msgstr ""
"初期化された固定サイズデータをモデルに追加します． <literal>sizes</literal> "
"はオプションのパラメータで，データのフォーマットを記述する整数またはベクトルの次元です．デフォルトでは，データはベクトルフィールドbとみなされます． "
"<literal>name</literal> はデータ名で， <literal>V</literal> はデータの値です．"

#: ../source/scilab/cmdref_gf_model_set.rst:278
msgid "``gf_model_set(model M, 'variable', string name, vec V)``"
msgstr "``gf_model_set(model M, 'variable', string name, vec V)``"

#: ../source/scilab/cmdref_gf_model_set.rst:280
msgid ""
"Set the value of a variable or data. <literal>name</literal> is the data "
"name."
msgstr "変数またはデータの値を設定します． <literal>name</literal> はデータ名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:283
msgid "``gf_model_set(model M, 'to variables', vec V)``"
msgstr "``gf_model_set(model M, 'to variables', vec V)``"

#: ../source/scilab/cmdref_gf_model_set.rst:285
msgid ""
"Set the value of the variables of the model with the vector "
"<literal>V</literal>. Typically, the vector <literal>V</literal> results of "
"the solve of the tangent linear system (useful to solve your problem with "
"you own solver)."
msgstr ""
"ベクトル <literal>V</literal> でモデルの変数の値を設定します．通常，ベクトル <literal>V</literal> "
"は接線線形システム(独自のソルバを使用して問題を解決するのに便利)のソルバの結果です．"

#: ../source/scilab/cmdref_gf_model_set.rst:290
msgid "``gf_model_set(model M, 'delete brick', int ind_brick)``"
msgstr "``gf_model_set(model M, 'delete brick', int ind_brick)``"

#: ../source/scilab/cmdref_gf_model_set.rst:295
msgid ""
"``gf_model_set(model M, 'define variable group', string name[, string "
"varname, ...])``"
msgstr ""
"``gf_model_set(model M, 'define variable group', string name[, string "
"varname, ...])``"

#: ../source/scilab/cmdref_gf_model_set.rst:297
msgid ""
"Defines a group of variables for the interpolation (mainly for the "
"raytracing interpolation transformation."
msgstr "補間 (主にレイトレーシング補間変換の変数のグループを定義します．"

#: ../source/scilab/cmdref_gf_model_set.rst:301
msgid ""
"``gf_model_set(model M, 'add elementary rotated RT0 projection', string "
"transname)``"
msgstr ""
"``gf_model_set(model M, 'add elementary rotated RT0 projection', string "
"transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:303
msgid ""
"Add the elementary transformation corresponding to the projection on rotated"
" RT0 element for two-dimensional elements to the model. The name is the name"
" given to the elementary transformation."
msgstr "2次元エレメントの回転RT0エレメント上の投影に対応する基本変換をモデルに追加します．名前は，基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:308
msgid ""
"``gf_model_set(model M, 'add elementary P0 projection', string transname)``"
msgstr ""
"``gf_model_set(model M, 'add elementary P0 projection', string transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:310
msgid ""
"Add the elementary transformation corresponding to the projection P0 "
"element. The name is the name given to the elementary transformation."
msgstr "投影P0要素に対応する基本変換を追加します．名前は，基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:315
msgid ""
"``gf_model_set(model M, 'add HHO reconstructed gradient', string "
"transname)``"
msgstr ""
"``gf_model_set(model M, 'add HHO reconstructed gradient', string "
"transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:317
msgid ""
"Add to the model the elementary transformation corresponding to the "
"reconstruction of a gradient for HHO methods. The name is the name given to "
"the elementary transformation."
msgstr "このモデルにHHO法に対する勾配の再構成に対応する基本変換を加えました．名前は基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:322
msgid ""
"``gf_model_set(model M, 'add HHO reconstructed symmetrized gradient', string"
" transname)``"
msgstr ""
"``gf_model_set(model M, 'add HHO reconstructed symmetrized gradient', string"
" transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:324
msgid ""
"Add to the model the elementary transformation corresponding to the "
"reconstruction of a symmetrized gradient for HHO methods. The name is the "
"name given to the elementary transformation."
msgstr "このモデルにHHO法に対する勾配の再構成に対応する基本変換を加えました．名前は基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:329
msgid ""
"``gf_model_set(model M, 'add HHO reconstructed value', string transname)``"
msgstr ""
"``gf_model_set(model M, 'add HHO reconstructed value', string transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:331
msgid ""
"Add to the model the elementary transformation corresponding to the "
"reconstruction of the variable for HHO methods. The name is the name given "
"to the elementary transformation."
msgstr "このモデルにHHO法に対する変数の再構成に対応する基本変換を加えました．名前は基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:336
msgid ""
"``gf_model_set(model M, 'add HHO reconstructed symmetrized value', string "
"transname)``"
msgstr ""
"``gf_model_set(model M, 'add HHO reconstructed symmetrized value', string "
"transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:338
msgid ""
"Add to the model the elementary transformation corresponding to the "
"reconstruction of the variable for HHO methods using a symmetrized gradient."
" The name is the name given to the elementary transformation."
msgstr "対称化勾配を用いたHHO法に対する変数の再構成に対応する素変換をモデルに加えます．名前は基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:344
msgid "``gf_model_set(model M, 'add HHO stabilization', string transname)``"
msgstr "``gf_model_set(model M, 'add HHO stabilization', string transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:346
msgid ""
"Add to the model the elementary transformation corresponding to the HHO "
"stabilization operator. The name is the name given to the elementary "
"transformation."
msgstr "このモデルにHHO安定化演算子に対応する素変換を加えます．名前は，基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:351
msgid ""
"``gf_model_set(model M, 'add HHO symmetrized stabilization', string "
"transname)``"
msgstr ""
"``gf_model_set(model M, 'add HHO symmetrized stabilization', string "
"transname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:353
msgid ""
"Add to the model the elementary transformation corresponding to the HHO "
"stabilization operator using a symmetrized gradient. The name is the name "
"given to the elementary transformation."
msgstr "対称化勾配を用いたHHO安定化演算子に対応する素変換をモデルに加えます．名前は，基本変換に付けられた名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:358
msgid ""
"``gf_model_set(model M, 'add interpolate transformation from expression', "
"string transname, mesh source_mesh, mesh target_mesh, string expr)``"
msgstr ""
"``gf_model_set(model M, 'add interpolate transformation from expression', "
"string transname, mesh source_mesh, mesh target_mesh, string expr)``"

#: ../source/scilab/cmdref_gf_model_set.rst:360
msgid ""
"Add a transformation to the model from mesh <literal>source_mesh</literal> "
"to mesh <literal>target_mesh</literal> given by the expression "
"<literal>expr</literal> which corresponds to a high-level generic assembly "
"expression which may contains some variable of the model. CAUTION: the "
"derivative of the transformation with used variable is taken into account in"
" the computation of the tangen system. However, order two derivative is not "
"implemented, so such tranformation is not allowed in the definition of a "
"potential."
msgstr ""
"メッシュ <literal>source_mesh</literal> から式 <literal>expr</literal> で指定されるメッシュ "
"`target_mesh` "
"への変換をモデルに追加します．この式は，モデルの変数を含む高水準汎用アセンブリ式に対応します．注意：接線システムの計算では，使用した変数による変換の導関数が考慮されます．ただし，2次微分は実装されていないため，ポテンシャルの定義ではこのような変換は許されていません．"

#: ../source/scilab/cmdref_gf_model_set.rst:370
msgid ""
"``gf_model_set(model M, 'add element extrapolation transformation', string "
"transname, mesh source_mesh, mat elt_corr)``"
msgstr ""
"``gf_model_set(model M, 'add element extrapolation transformation', string "
"transname, mesh source_mesh, mat elt_corr)``"

#: ../source/scilab/cmdref_gf_model_set.rst:372
msgid ""
"Add a special interpolation transformation which represents the identity "
"transformation but allows to evaluate the expression on another element than"
" the current element by polynomial extrapolation. It is used for "
"stabilization term in fictitious domain applications. the array elt_cor "
"should be a two entry array whose first line contains the elements concerned"
" by the transformation and the second line the respective elements on which "
"the extrapolation has to be made. If an element is not listed in elt_cor the"
" evaluation is just made on the current element."
msgstr ""
"恒等変換を表すが，多項式外挿によって現在の要素以外の別の要素で式を評価できる特別な補間変換を追加します．仮想領域応用における安定化項に使用されます．配列elt_corは2つのエントリからなる配列で，最初の行は変換に関係する要素を含み，2番目の行は外挿が必要なそれぞれの要素を含みます．要素がelt_corにリストされていない場合，評価は現在の要素に対してのみ行われます．"

#: ../source/scilab/cmdref_gf_model_set.rst:383
msgid ""
"``gf_model_set(model M, 'add standard secondary domain', string name, "
"mesh_im mim, int region = -1)``"
msgstr ""
"``gf_model_set(model M, 'add standard secondary domain', string name, "
"mesh_im mim, int region = -1)``"

#: ../source/scilab/cmdref_gf_model_set.rst:385
msgid ""
"Add a secondary domain to the model which can be used in a weak-form "
"language expression for integration on the product of two domains. "
"<literal>name</literal> is the name of the secondary domain, "
"<literal>mim</literal> is an integration method on this domain and "
"<literal>region</literal> the region on which the integration is to be "
"performed."
msgstr ""
"2つのドメインの積を統合するために，弱形式言語の表現で使用できるセカンダリドメインをモデルに追加します． <literal>name</literal>"
" はセカンダリドメインの名前であり， <literal>mim</literal> はこのドメイン上の積分法であり， "
"<literal>region</literal> は積分が実行される領域です．"

#: ../source/scilab/cmdref_gf_model_set.rst:390
msgid ""
"``gf_model_set(model M, 'set element extrapolation correspondence', string "
"transname, mat elt_corr)``"
msgstr ""
"``gf_model_set(model M, 'set element extrapolation correspondence', string "
"transname, mat elt_corr)``"

#: ../source/scilab/cmdref_gf_model_set.rst:392
msgid ""
"Change the correspondence map of an element extrapolation interpolate "
"transformation."
msgstr "要素外挿補間変換の対応マップを変更します．"

#: ../source/scilab/cmdref_gf_model_set.rst:396
msgid ""
"``gf_model_set(model M, 'add raytracing transformation', string transname, "
"scalar release_distance)``"
msgstr ""
"``gf_model_set(model M, 'add raytracing transformation', string transname, "
"scalar release_distance)``"

#: ../source/scilab/cmdref_gf_model_set.rst:398
msgid ""
"Add a raytracing interpolate transformation called "
"<literal>transname</literal> to a model to be used by the generic assembly "
"bricks. CAUTION: For the moment, the derivative of the transformation is not"
" taken into account in the model solve."
msgstr ""
"汎用アセンブリブリックで使用されるモデルに  <literal>transname</literal> "
"というレイトレーシング補間変換を追加します．注意: 現時点ではモデルの計算で変換の導関数は考慮されません．"

#: ../source/scilab/cmdref_gf_model_set.rst:404
msgid ""
"``gf_model_set(model M, 'add master contact boundary to raytracing "
"transformation', string transname, mesh m, string dispname, int region)``"
msgstr ""
"``gf_model_set(model M, 'add master contact boundary to raytracing "
"transformation', string transname, mesh m, string dispname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:406
msgid ""
"Add a master contact boundary with corresponding displacement variable "
"<literal>dispname</literal> on a specific boundary <literal>region</literal>"
" to an existing raytracing interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"特定の境界 <literal>region</literal> 上の対応する変位変数 <literal>dispname</literal> "
"を持つマスター接触境界を <literal>transname</literal> という既存のレイトレーシング補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:411
msgid ""
"``gf_model_set(model M, 'add slave contact boundary to raytracing "
"transformation', string transname, mesh m, string dispname, int region)``"
msgstr ""
"``gf_model_set(model M, 'add slave contact boundary to raytracing "
"transformation', string transname, mesh m, string dispname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:413
msgid ""
"Add a slave contact boundary with corresponding displacement variable "
"<literal>dispname</literal> on a specific boundary <literal>region</literal>"
" to an existing raytracing interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"特定の境界 <literal>region</literal> 上の対応する変位変数 <literal>dispname</literal> "
"を持つスレーブ接触境界を <literal>transname</literal> という既存のレイトレーシング補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:418
msgid ""
"``gf_model_set(model M, 'add rigid obstacle to raytracing transformation', "
"string transname, string expr, int N)``"
msgstr ""
"``gf_model_set(model M, 'add rigid obstacle to raytracing transformation', "
"string transname, string expr, int N)``"

#: ../source/scilab/cmdref_gf_model_set.rst:420
msgid ""
"Add a rigid obstacle whose geometry corresponds to the zero level-set of the"
" high-level generic assembly expression <literal>expr</literal> to an "
"existing raytracing interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"ジオメトリが上位レベルの汎用アセンブリ式 <literal>expr</literal> の0レベル集合に対応する剛体な障害物を "
"<literal>transname</literal> という既存のレイトレーシング補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:426
msgid ""
"``gf_model_set(model M, 'add projection transformation', string transname, "
"scalar release_distance)``"
msgstr ""
"``gf_model_set(model M, 'add projection transformation', string transname, "
"scalar release_distance)``"

#: ../source/scilab/cmdref_gf_model_set.rst:428
msgid ""
"Add a projection interpolate transformation called "
"<literal>transname</literal> to a model to be used by the generic assembly "
"bricks. CAUTION: For the moment, the derivative of the transformation is not"
" taken into account in the model solve."
msgstr ""
"<literal>transname</literal> という名前の投影補間変換を，汎用アセンブリブリックで使用するモデルに追加します．注意: "
"現時点では，モデルの計算で変換の導関数は考慮されません．"

#: ../source/scilab/cmdref_gf_model_set.rst:434
msgid ""
"``gf_model_set(model M, 'add master contact boundary to projection "
"transformation', string transname, mesh m, string dispname, int region)``"
msgstr ""
"``gf_model_set(model M, 'add master contact boundary to projection "
"transformation', string transname, mesh m, string dispname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:436
msgid ""
"Add a master contact boundary with corresponding displacement variable "
"<literal>dispname</literal> on a specific boundary <literal>region</literal>"
" to an existing projection interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"特定の境界 <literal>region</literal> 上に対応する変位変数 <literal>dispname</literal> "
"を持つマスター接触境界を，<literal>transname</literal>という既存の投影補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:441
msgid ""
"``gf_model_set(model M, 'add slave contact boundary to projection "
"transformation', string transname, mesh m, string dispname, int region)``"
msgstr ""
"``gf_model_set(model M, 'add slave contact boundary to projection "
"transformation', string transname, mesh m, string dispname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:443
msgid ""
"Add a slave contact boundary with corresponding displacement variable "
"<literal>dispname</literal> on a specific boundary <literal>region</literal>"
" to an existing projection interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"特定の境界 <literal>region</literal> 上の対応する変位変数 <literal>dispname</literal> "
"を持つスレーブ接触境界を <literal>transname</literal>という既存の投影補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:448
msgid ""
"``gf_model_set(model M, 'add rigid obstacle to projection transformation', "
"string transname, string expr, int N)``"
msgstr ""
"``gf_model_set(model M, 'add rigid obstacle to projection transformation', "
"string transname, string expr, int N)``"

#: ../source/scilab/cmdref_gf_model_set.rst:450
msgid ""
"Add a rigid obstacle whose geometry corresponds to the zero level-set of the"
" high-level generic assembly expression <literal>expr</literal> to an "
"existing projection interpolate transformation called "
"<literal>transname</literal>."
msgstr ""
"ジオメトリが高水準汎用アセンブリ式 <literal>expr</literal> の0レベルセットに対応する剛体障害を "
"<literal>transname</literal> という既存の投影補間変換に追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:456
msgid ""
"``ind = gf_model_set(model M, 'add linear term', mesh_im mim, string "
"expression[, int region[, int is_symmetric[, int is_coercive]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add linear term', mesh_im mim, string "
"expression[, int region[, int is_symmetric[, int is_coercive]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:458
msgid ""
"Adds a matrix term given by the assembly string <literal>expr</literal> "
"which will be assembled in region <literal>region</literal> and with the "
"integration method <literal>mim</literal>. Only the matrix term will be "
"taken into account, assuming that it is linear. The advantage of declaring a"
" term linear instead of nonlinear is that it will be assembled only once and"
" no assembly is necessary for the residual. Take care that if the expression"
" contains some variables and if the expression is a potential or of first "
"order (i.e. describe the weak form, not the derivative of the weak form), "
"the expression will be derivated with respect to all variables. You can "
"specify if the term is symmetric, coercive or not. If you are not sure, the "
"better is to declare the term not symmetric and not coercive. But some "
"solvers (conjugate gradient for instance) are not allowed for non-coercive "
"problems. <literal>brickname</literal> is an optional name for the brick."
msgstr ""
"アセンブリ文字列  <literal>expr</literal> で指定された行列項を追加します．この行列は，領域  "
"<literal>region</literal> で積分法 <literal>mim</literal> "
"を使用して組み立てられます．線形であると仮定すると，行列項のみが考慮されます．項を非線形ではなく線形と宣言する利点は，項が1回だけ組み立てられ，残差にアセンブリが必要ないことです．式にいくつかの変数が含まれ，式がポテンシャルまたは一次(すなわち，弱形式の微分ではなく，弱形式を記述する)場合，式はすべての変数に関して微分することに注意してください．項が対称か，強制でないかどうかを指定できます．よくわからない場合は，対称ではなく，強制的ではないと宣言した方がよいでしょう．しかし，一部のソルバー(例えば共役勾配)は非強制問題には使用できません．"
" <literal>brickname</literal> はブリックのオプション名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:476
msgid ""
"``ind = gf_model_set(model M, 'add linear twodomain term', mesh_im mim, "
"string expression, int region, string secondary_domain[, int is_symmetric[, "
"int is_coercive]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add linear twodomain term', mesh_im mim, "
"string expression, int region, string secondary_domain[, int is_symmetric[, "
"int is_coercive]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:478
msgid ""
"Adds a linear term given by a weak form language expression like "
"gf_model_set(model M, 'add linear term') but for an integration on a direct "
"product of two domains, a first specfied by "
"<literal></literal>mim<literal></literal> and "
"<literal></literal>region<literal></literal> and a second one by "
"<literal></literal>secondary_domain<literal></literal> which has to be "
"declared first into the model."
msgstr ""
"Modelのような弱形式言語式で与えられる線形項を追加します． gf_model_set(model M, 'add linear term') "
"ではなく，二つのドメインの直積上での積分の場合には，最初に<literal></literal>mim<literal></literal>と<literal></literal>region<literal></literal>で指定されたものと<literal></literal>secondary_domain<literal></literal>で指定されたものを最初にモデルに宣言しなければなりません．"

#: ../source/scilab/cmdref_gf_model_set.rst:485
msgid ""
"``ind = gf_model_set(model M, 'add linear generic assembly brick', mesh_im "
"mim, string expression[, int region[, int is_symmetric[, int "
"is_coercive]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add linear generic assembly brick', mesh_im "
"mim, string expression[, int region[, int is_symmetric[, int "
"is_coercive]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:487
msgid "Deprecated. Use gf_model_set(model M, 'add linear term') instead."
msgstr "非推奨．代わりに gf_model_set(model M, 'add linear term') を使用してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:490
msgid ""
"``ind = gf_model_set(model M, 'add nonlinear term', mesh_im mim, string "
"expression[, int region[, int is_symmetric[, int is_coercive]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonlinear term', mesh_im mim, string "
"expression[, int region[, int is_symmetric[, int is_coercive]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:492
msgid ""
"Adds a nonlinear term given by the assembly string <literal>expr</literal> "
"which will be assembled in region <literal>region</literal> and with the "
"integration method <literal>mim</literal>. The expression can describe a "
"potential or a weak form. Second order terms (i.e. containing second order "
"test functions, Test2) are not allowed. You can specify if the term is "
"symmetric, coercive or not. If you are not sure, the better is to declare "
"the term not symmetric and not coercive. But some solvers (conjugate "
"gradient for instance) are not allowed for non-coercive problems. "
"<literal>brickname</literal> is an optional name for the brick."
msgstr ""
"アセンブリ文字列  <literal>expr</literal> で指定された非線形項を追加します．この非線形項は，領域 "
"<literal>region</literal> と積分法 <literal>mim</literal> "
"で組み立てられます．この表現は，ポテンシャルまたは弱形式を表すことができます．2次項(すなわち，2次試験関数Test2を含みます)は使用できません．項が対称か，強制かどうかを指定できます．よくわからない場合は，対称ではなく，強制ではないと宣言した方がよいでしょう．しかし，一部のソルバー(例えば共役勾配)は非強制問題には使用できません．"
" <literal>brickname</literal> はブリックのオプション名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:504
msgid ""
"``ind = gf_model_set(model M, 'add nonlinear twodomain term', mesh_im mim, "
"string expression, int region, string secondary_domain[, int is_symmetric[, "
"int is_coercive]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonlinear twodomain term', mesh_im mim, "
"string expression, int region, string secondary_domain[, int is_symmetric[, "
"int is_coercive]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:506
msgid ""
"Adds a nonlinear term given by a weak form language expression like "
"gf_model_set(model M, 'add nonlinear term') but for an integration on a "
"direct product of two domains, a first specfied by "
"<literal></literal>mim<literal></literal> and "
"<literal></literal>region<literal></literal> and a second one by "
"<literal></literal>secondary_domain<literal></literal> which has to be "
"declared first into the model."
msgstr ""
"弱形式言語の式で与えられる非線形項を追加します．  gf_model_set(model M, 'add nonlinear term') "
"のようではなく，二つのドメインの直積上での積分の場合には，最初に <literal></literal>mim<literal></literal> と"
" <literal></literal>region<literal></literal> で指定されたものと "
"<literal></literal>secondary_domain<literal></literal> "
"で指定されたものを最初にモデルに宣言しなければなりません．"

#: ../source/scilab/cmdref_gf_model_set.rst:513
msgid ""
"``ind = gf_model_set(model M, 'add nonlinear generic assembly brick', "
"mesh_im mim, string expression[, int region[, int is_symmetric[, int "
"is_coercive]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonlinear generic assembly brick', "
"mesh_im mim, string expression[, int region[, int is_symmetric[, int "
"is_coercive]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:515
msgid "Deprecated. Use gf_model_set(model M, 'add nonlinear term') instead."
msgstr "非推奨．代わりに gf_model_set(model M, 'add nonlinear term') を使用してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:518
msgid ""
"``ind = gf_model_set(model M, 'add source term', mesh_im mim, string "
"expression[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add source term', mesh_im mim, string "
"expression[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:520
msgid ""
"Adds a source term given by the assembly string <literal>expr</literal> "
"which will be assembled in region <literal>region</literal> and with the "
"integration method <literal>mim</literal>. Only the residual term will be "
"taken into account. Take care that if the expression contains some variables"
" and if the expression is a potential, the expression will be derivated with"
" respect to all variables. <literal>brickname</literal> is an optional name "
"for the brick."
msgstr ""
"アセンブリ文字列 <literal>expr</literal> で指定されたソース項を追加します．これは，領域  "
"<literal>region</literal> で積分法 <literal>mim</literal> "
"を使用してアセンブルされます．残差項のみが考慮されます．式にいくつかの変数が含まれていて，式がポテンシャルである場合，式はすべての変数に関して微分されることに注意してください．"
" <literal>brickname</literal> はブリックのオプション名です．"

#: ../source/scilab/cmdref_gf_model_set.rst:529
msgid ""
"``ind = gf_model_set(model M, 'add twodomain source term', mesh_im mim, "
"string expression, int region, string secondary_domain)``"
msgstr ""
"``ind = gf_model_set(model M, 'add twodomain source term', mesh_im mim, "
"string expression, int region, string secondary_domain)``"

#: ../source/scilab/cmdref_gf_model_set.rst:531
msgid ""
"Adds a source term given by a weak form language expression like "
"gf_model_set(model M, 'add source term') but for an integration on a direct "
"product of two domains, a first specfied by "
"<literal></literal>mim<literal></literal> and "
"<literal></literal>region<literal></literal> and a second one by "
"<literal></literal>secondary_domain<literal></literal> which has to be "
"declared first into the model."
msgstr ""
"gf_model_set(model M, 'add source term') "
"などのように弱形式言語表現で指定されたソース項を追加する場合があります．一方，2つのドメインの直積での積分の場合には，最初に "
"<literal></literal>mim<literal></literal> "
"と<literal></literal>region<literal></literal> によって指定されたものと "
"<literal></literal>secondary_domain<literal></literal> "
"によって指定されたものがあり，後者は最初にモデルに宣言されなければなりません．"

#: ../source/scilab/cmdref_gf_model_set.rst:538
msgid ""
"``ind = gf_model_set(model M, 'add source term generic assembly brick', "
"mesh_im mim, string expression[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add source term generic assembly brick', "
"mesh_im mim, string expression[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:540
msgid "Deprecated. Use gf_model_set(model M, 'add source term') instead."
msgstr "非推奨．代わりに gf_model_set(model M, 'add source term') を使用してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:543
msgid ""
"``gf_model_set(model M, 'add assembly assignment', string dataname, string "
"expression[, int region[, int order[, int before]]])``"
msgstr ""
"``gf_model_set(model M, 'add assembly assignment', string dataname, string "
"expression[, int region[, int order[, int before]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:545
msgid ""
"Adds expression <literal>expr</literal> to be evaluated at assembly time and"
" being assigned to the data <literal>dataname</literal> which has to be of "
"im_data type. This allows for instance to store a sub-expression of an "
"assembly computation to be used on an other assembly. It can be used for "
"instance to store the plastic strain in plasticity models. "
"<literal>order</literal> represents the order of assembly where this "
"assignement has to be done (potential(0), weak form(1) or tangent system(2) "
"or at each order(-1)). The default value is 1. If before = 1, the the "
"assignement is perfromed before the computation of the other assembly terms,"
" such that the data can be used in the remaining of the assembly as an "
"intermediary result (be careful that it is still considered as a data, no "
"derivation of the expression is performed for the tangent system). If before"
" = 0 (default), the assignement is done after the assembly terms."
msgstr ""
"アセンブリ時に評価され，im_data型であるデータ <literal>dataname</literal> に割り当てられる式 "
"<literal>expr</literal> "
"を追加します．これにより，インスタンスは，他のアセンブリで使用するアセンブリ計算のサブ式を保存できます．たとえば，塑性モデルに塑性歪みを保存するために使用できます．<literal>order</literal>は，この割り当てを行うアセンブリの次数(ポテンシャル"
" (0)，弱形式 (1)，接線システム "
"(2)，または各次数(-1))を表します．デフォルト値は1です．before=1の場合，他のアセンブリ項の計算の前に割り当てが実行され，データが残りのアセンブリで中間結果として使用できるようになります(接線システム式の微分が実行されず，データとみなされることに注意してください)．before=0(デフォルト)の場合，代入はアセンブリ項の後に行われます．"

#: ../source/scilab/cmdref_gf_model_set.rst:562
msgid "``gf_model_set(model M, 'clear assembly assignment')``"
msgstr "``gf_model_set(model M, 'clear assembly assignment')``"

#: ../source/scilab/cmdref_gf_model_set.rst:564
msgid "Delete all added assembly assignments"
msgstr "追加されたアセンブリの割り当てをすべて削除します"

#: ../source/scilab/cmdref_gf_model_set.rst:568
msgid ""
"``ind = gf_model_set(model M, 'add Laplacian brick', mesh_im mim, string "
"varname[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Laplacian brick', mesh_im mim, string "
"varname[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:570
msgid ""
"Add a Laplacian term to the model relatively to the variable "
"<literal>varname</literal> (in fact with a minus : <latex "
"style=\"text\"><![CDATA[-\\text{div}(\\nabla u)]]></latex>). If this is a "
"vector valued variable, the Laplacian term is added componentwise. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model."
msgstr ""
"変数 <literal>varname</literal> に相対的にLaplacian項をモデルに追加します(実際には負 <latex "
"style=\"text\"><![CDATA[-\\text{div}(\\nabla u)]]></latex> "
"です)．これがベクトル値の変数である場合，Laplace項がコンポーネントごとに追加されます． <literal>region</literal> "
"は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:578
msgid ""
"``ind = gf_model_set(model M, 'add generic elliptic brick', mesh_im mim, "
"string varname, string dataname[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add generic elliptic brick', mesh_im mim, "
"string varname, string dataname[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:580
msgid ""
"Add a generic elliptic term to the model relatively to the variable "
"<literal>varname</literal>. The shape of the elliptic term depends both on "
"the variable and the data. This corresponds to a term <latex "
"style=\"text\"><![CDATA[-\\text{div}(a\\nabla u)]]></latex> where <latex "
"style=\"text\"><![CDATA[a]]></latex> is the data and <latex "
"style=\"text\"><![CDATA[u]]></latex> the variable. The data can be a scalar,"
" a matrix or an order four tensor. The variable can be vector valued or not."
" If the data is a scalar or a matrix and the variable is vector valued then "
"the term is added componentwise. An order four tensor data is allowed for "
"vector valued variable only. The data can be constant or describbed on a "
"fem. Of course, when the data is a tensor describe on a finite element "
"method (a tensor field) the data can be a huge vector. The components of the"
" matrix/tensor have to be stored with the fortran order (columnwise) in the "
"data vector (compatibility with blas). The symmetry of the given "
"matrix/tensor is not verified (but assumed). If this is a vector valued "
"variable, the elliptic term is added componentwise. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Note that for "
"the real version which uses the high-level generic assembly language, "
"<literal>dataname</literal> can be any regular expression of the high-level "
"generic assembly language (like \"1\", \"sin(X(1))\" or \"Norm(u)\" for "
"instance) even depending on model variables. Return the brick index in the "
"model."
msgstr ""
"変数 <literal>varname</literal> "
"を基準にして，一般的な楕円項をモデルに追加します．楕円項の形状は変数とデータの両方に依存します．これは，以下の項に対応します． <latex "
"style=\"text\"></latex> ここで， <latex style=\"text\"></latex> はデータ， <latex "
"style=\"text\"></latex> "
"は変数です．データはスカラー，行列，または4次テンソルです．変数はベクトル値であってもなくてもかまいません．データがスカラーまたはマトリックスで，変数がベクトル値の場合，項はコンポーネント単位で追加されます．4次のテンソルデータは，ベクトル値変数にのみ使用できます．データは一定であってもよいし，数分で記述してもよいです．もちろん，データが有限要素法(テンソル場)で記述されるテンソルである場合，データは巨大なベクトルになる可能性があります．行列/テンソルの成分は(blasとの互換性から)データベクトルのFortran(列方向)次数で保存されなければなりません．与えられた行列/テンソルの(仮定されている)対称性は検証されません．これがベクトル値の変数である場合，楕円項はコンポーネントごとに追加されます．"
" <literal>region</literal> "
"は，項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．高水準汎用アセンブリ言語を使用する実数バージョンでは，モデル変数にも依存しますが，<literal>dataname</literal>(例えば"
" \"1\" ， \"sin(X(1))\" ，\"Norm(u)\" "
"など)は高水準汎用アセンブリ言語の任意の正規表現にすることができます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:606
msgid ""
"``ind = gf_model_set(model M, 'add source term brick', mesh_im mim, string "
"varname, string dataexpr[, int region[, string directdataname]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add source term brick', mesh_im mim, string "
"varname, string dataexpr[, int region[, string directdataname]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:608
msgid ""
"Add a source term to the model relatively to the variable "
"<literal>varname</literal>. The source term is represented by "
"<literal>dataexpr</literal> which could be any regular expression of the "
"high-level generic assembly language (except for the complex version where "
"it has to be a declared data of the model). <literal>region</literal> is an "
"optional mesh region on which the term is added. An additional optional data"
" <literal>directdataname</literal> can be provided. The corresponding data "
"vector will be directly added to the right hand side without assembly. Note "
"that when region is a boundary, this brick allows to prescribe a nonzero "
"Neumann boundary condition. Return the brick index in the model."
msgstr ""
"モデルに変数 <literal>varname</literal> に比例したソース項を追加します．ソース項は "
"<literal>dataexpr</literal> "
"で表現します．これは高水準汎用アセンブリ言語の任意の正規表現です（ただし複素数モデルの場合は，宣言されたデータでなければりません）．<literal>region</literal>"
" はオプションで項を追加するメッシュ領域です．追加のオプションデータ <literal>directdataname</literal> "
"を設定することもできます．対応するデータベクトルは，アセンブリなしで右側に直接追加されます．regionが境界である場合，このブリックでNeumann境界条件を設定することができます．"

#: ../source/scilab/cmdref_gf_model_set.rst:621
msgid ""
"``ind = gf_model_set(model M, 'add normal source term brick', mesh_im mim, "
"string varname, string dataname, int region)``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal source term brick', mesh_im mim, "
"string varname, string dataname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:623
msgid ""
"Add a source term on the variable <literal>varname</literal> on a boundary "
"<literal>region</literal>. This region should be a boundary. The source term"
" is represented by the data <literal>dataepxpr</literal> which could be any "
"regular expression of the high-level generic assembly language (except for "
"the complex version where it has to be a declared data of the model). A "
"scalar product with the outward normal unit vector to the boundary is "
"performed. The main aim of this brick is to represent a Neumann condition "
"with a vector data without performing the scalar product with the normal as "
"a pre-processing. Return the brick index in the model."
msgstr ""
"境界 <literal>region</literal> 上の変数  <literal>varname</literal> "
"にソース項を追加します．この領域は境界である必要があります．ソース項は，データ <literal>dataepxpr</literal> "
"によって表され，これは，高水準汎用アセンブリ言語(ただし，モデルの宣言されたデータでなければならない複素数バージョンは除きます)の任意の正規表現であり得る．境界への外向き法線単位ベクトルを持つスカラー積が実行されます．このブリックの主な目的は事前処理として法線を持つスカラー積を実行せずにベクトルデータでNeumann条件を表現することです．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:635
msgid ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with simplification',"
" string varname, int region[, string dataname])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with simplification',"
" string varname, int region[, string dataname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:637
msgid ""
"Adds a (simple) Dirichlet condition on the variable "
"<literal>varname</literal> and the mesh region <literal>region</literal>. "
"The Dirichlet condition is prescribed by a simple post-treatment of the "
"final linear system (tangent system for nonlinear problems) consisting of "
"modifying the lines corresponding to the degree of freedom of the variable "
"on <literal>region</literal> (0 outside the diagonal, 1 on the diagonal of "
"the matrix and the expected value on the right hand side). The symmetry of "
"the linear system is kept if all other bricks are symmetric. This brick is "
"to be reserved for simple Dirichlet conditions (only dof declared on the "
"corresponding boundary are prescribed). The application of this brick on "
"reduced dof may be problematic. Intrinsic vectorial finite element method "
"are not supported. <literal>dataname</literal> is the optional right hand "
"side of  the Dirichlet condition. It could be constant (but in that case, it"
" can only be applied to Lagrange f.e.m.) or (important) described on the "
"same finite element method as <literal>varname</literal>. Returns the brick "
"index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"に(単純な)Dirichlet条件を追加します．Dirichlet条件は，<literal>region</literal>(0は対角線の外側，1はマトリックスの対角線，期待値は右側)上の変数の自由度に対応する行を修正することからなる最終的な線形系(非線形問題の接線系)の簡単な後処理によって規定されます．線形システムの対称性は，他のすべてのブリックが対称である場合に維持されます．このブリックは，単純なDirichlet条件(一致境界で宣言された自由度のみが指定されています)用に予約されています．このブリックの還元された自由度への適用は問題があるかもしれません．固有ベクトル有限要素法はサポートされていません．"
" <literal>dataname</literal> はディリクレ条件のオプションの右側です．これは，定数(この場合は，Lagrange "
"femにのみ適用できます)または <literal>varname</literal> "
"と同じ有限要素法で記述された(重要な)にすることができます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:657
msgid ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with multipliers', "
"mesh_im mim, string varname, mult_description, int region[, string "
"dataname])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with multipliers', "
"mesh_im mim, string varname, mult_description, int region[, string "
"dataname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:659
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>. This region should be a boundary. "
"The Dirichlet condition is prescribed with a multiplier variable described "
"by <literal>mult_description</literal>. If "
"<literal>mult_description</literal> is a string this is assumed to be the "
"variable name corresponding to the multiplier (which should be first "
"declared as a multiplier variable on the mesh region in the model). If it is"
" a finite element method (mesh_fem object) then a multiplier variable will "
"be added to the model and build on this finite element method (it will be "
"restricted to the mesh region <literal>region</literal> and eventually some "
"conflicting dofs with some other multiplier variables will be suppressed). "
"If it is an integer, then a  multiplier variable will be added to the model "
"and build on a classical finite element of degree that integer. "
"<literal>dataname</literal> is the optional right hand side of  the "
"Dirichlet condition. It could be constant or described on a fem; scalar or "
"vector valued, depending on the variable on which the Dirichlet condition is"
" prescribed. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．この領域は境界である必要があります．Dirichlet条件は "
"<literal>mult_description</literal> によって記述される乗数変数で規定されます． "
"<literal>mult_description</literal> "
"が文字列の場合は，乗数(これは，最初にモデルのメッシュ領域で乗数変数として宣言する必要があります)に対応する変数名と見なされます．有限要素法(mesh_femオブジェクト)の場合は，乗数変数がモデルに追加され，この有限要素法(メッシュ領域<literal>region</literal>で制限され，最終的に他の乗数変数との自由度の競合が抑制されます)に基づいて構築されます．整数の場合は，乗数変数がモデルに追加され，その整数の次数の従来の有限要素に基づいて構築されます．"
" <literal>dataname</literal> "
"はDirichlet条件のオプションのRHSです．定数の場合もあれば，femで記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって異なります．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:677
msgid ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with Nitsche method',"
" mesh_im mim, string varname, string Neumannterm, string datagamma0, int "
"region[, scalar theta][, string dataname])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with Nitsche method',"
" mesh_im mim, string varname, string Neumannterm, string datagamma0, int "
"region[, scalar theta][, string dataname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:679
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>. This region should be a boundary. "
"<literal>Neumannterm</literal> is the expression of the Neumann term "
"(obtained by the Green formula) described as an expression of the high-level"
" generic assembly language. This term can be obtained by gf_model_get(model "
"M, 'Neumann term', varname, region) once all volumic bricks have been added "
"to the model. The Dirichlet condition is prescribed with Nitsche's method. "
"<literal>datag</literal> is the optional right hand side of the Dirichlet "
"condition. <literal>datagamma0</literal> is the Nitsche's method parameter. "
"<literal>theta</literal> is a scalar value which can be positive or "
"negative. <literal>theta = 1</literal> corresponds to the standard symmetric"
" method which is conditionally coercive for  <literal>gamma0</literal> "
"small. <literal>theta = -1</literal> corresponds to the skew-symmetric "
"method which is inconditionally coercive. <literal>theta = 0</literal> "
"(default) is the simplest method for which the second derivative of the "
"Neumann term is not necessary even for nonlinear problems. Return the brick "
"index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．この領域は境界である必要があります．<literal>Neumann項</literal>は，高水準汎用アセンブリ言語の表現である(Green公式により得られる)Neumann項の式です．すべての体積ブリックをモデルに追加すると，この項は"
" gf_model_get(model M, 'Neumann term', varname, region) によって得られます "
"．Dirichlet条件はNitsche法により処理されます． <literal>datag</literal> "
"はDirichlet条件のオプションのRHSです． <literal>datagamma0</literal> はNitsche法のパラメータです． "
"<literal>theta</literal> は正または負のスカラー値です． <literal>theta = 1</literal> は "
"<literal>gamma0</literal> が小さい場合に条件的が強制される標準的な対称法です． <literal>theta = "
"-1</literal> は無条件に強制的なskew対称法に対応します． <literal>theta = 0</literal> (デフォルト) "
"は非線形問題に対してもNeumann項の二次導関数を必要としない最も単純な方法です．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:698
msgid ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with penalization', "
"mesh_im mim, string varname, scalar coeff, int region[, string dataname, "
"mesh_fem mf_mult])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Dirichlet condition with penalization', "
"mesh_im mim, string varname, scalar coeff, int region[, string dataname, "
"mesh_fem mf_mult])``"

#: ../source/scilab/cmdref_gf_model_set.rst:700
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>. This region should be a boundary. "
"The Dirichlet condition is prescribed with penalization. The penalization "
"coefficient is initially <literal>coeff</literal> and will be added to the "
"data of the model. <literal>dataname</literal> is the optional right hand "
"side of the Dirichlet condition. It could be constant or described on a fem;"
" scalar or vector valued, depending on the variable on which the Dirichlet "
"condition is prescribed. <literal>mf_mult</literal> is an optional parameter"
" which allows to weaken the Dirichlet condition specifying a multiplier "
"space. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．この領域は境界である必要があります．Dirichlet条件はペナルティとともに処理されます．ペナルティ係数は初期値は"
" <literal>coeff</literal> であり，モデルのデータに追加されます．<literal>dataname</literal> "
"はDirichlet条件のオプションの右辺です．定数の場合もあれば，有限要素法で記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって異なります．"
" <literal>mf_mult</literal> "
"はオプションのパラメータで，乗数空間を指定してDirichlet条件を弱めることができます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:712
msgid ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with "
"multipliers', mesh_im mim, string varname, mult_description, int region[, "
"string dataname])``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with "
"multipliers', mesh_im mim, string varname, mult_description, int region[, "
"string dataname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:714
msgid ""
"Add a Dirichlet condition to the normal component of the vector (or tensor) "
"valued variable <literal>varname</literal> and the mesh region "
"<literal>region</literal>. This region should be a boundary. The Dirichlet "
"condition is prescribed with a multiplier variable described by "
"<literal>mult_description</literal>. If <literal>mult_description</literal> "
"is a string this is assumed to be the variable name corresponding to the "
"multiplier (which should be first declared as a multiplier variable on the "
"mesh region in the model). If it is a finite element method (mesh_fem "
"object) then a multiplier variable will be added to the model and build on "
"this finite element method (it will be restricted to the mesh region "
"<literal>region</literal> and eventually some conflicting dofs with some "
"other multiplier variables will be suppressed). If it is an integer, then a"
"  multiplier variable will be added to the model and build on a classical "
"finite element of degree that integer. <literal>dataname</literal> is the "
"optional right hand side of  the Dirichlet condition. It could be constant "
"or described on a fem; scalar or vector valued, depending on the variable on"
" which the Dirichlet condition is prescribed (scalar if the variable is "
"vector valued, vector if the variable is tensor valued). Returns the brick "
"index in the model."
msgstr ""
"ベクトル(またはテンソル)値変数 <literal>varname</literal> の法線コンポーネントとメッシュ領域 "
"<literal>region</literal> にDirichlet条件を追加します．この領域は境界である必要があります．Dirichlet条件は "
"<literal>mult_description</literal> によって記述される乗数変数で規定される． "
"<literal>mult_description</literal> "
"が文字列の場合は，乗数(これは，最初にモデルのメッシュ領域で乗数変数として宣言する必要があります)に対応する変数名と見なされます．有限要素法(mesh_femオブジェクト)の場合は，乗数変数がモデルに追加され，この有限要素法(メッシュ領域"
" <literal>region</literal> "
"に制限され，最終的に他の乗数変数との自由度の競合が抑制されます)に基づいて構築されます．整数の場合は，乗数変数がモデルに追加され，その整数の次数の従来の有限要素に基づいて構築されます．"
" <literal>dataname</literal> "
"はDirichlet条件のオプションの右辺です．定数の場合もあれば，有限要素法で記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって決まります(変数がベクトル値の場合はスカラー，テンソル値の場合はベクトルです)．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:735
msgid ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with "
"penalization', mesh_im mim, string varname, scalar coeff, int region[, "
"string dataname, mesh_fem mf_mult])``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with "
"penalization', mesh_im mim, string varname, scalar coeff, int region[, "
"string dataname, mesh_fem mf_mult])``"

#: ../source/scilab/cmdref_gf_model_set.rst:737
msgid ""
"Add a Dirichlet condition to the normal component of the vector (or tensor) "
"valued variable <literal>varname</literal> and the mesh region "
"<literal>region</literal>. This region should be a boundary. The Dirichlet "
"condition is prescribed with penalization. The penalization coefficient is "
"initially <literal>coeff</literal> and will be added to the data of the "
"model. <literal>dataname</literal> is the optional right hand side of the "
"Dirichlet condition. It could be constant or described on a fem; scalar or "
"vector valued, depending on the variable on which the Dirichlet condition is"
" prescribed (scalar if the variable is vector valued, vector if the variable"
" is tensor valued). <literal>mf_mult</literal> is an optional parameter "
"which allows to weaken the Dirichlet condition specifying a multiplier "
"space. Returns the brick index in the model."
msgstr ""
"ベクトル(またはテンソル)値変数 <literal>varname</literal> の法線コンポーネントとメッシュ領域 "
"<literal>region</literal> "
"にDirichlet条件を追加します．この領域は境界である必要があります．Dirichlet条件はペナリゼーションとともに処理される．ペナルティ係数は最初は"
" <literal>coeff</literal> であり，モデルのデータに追加されます． <literal>dataname</literal> "
"はDirichlet条件のオプションの右辺です．定数の場合もあれば，有限要素法で記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって決まります(変数がベクトル値の場合はスカラー，テンソル値の場合はベクトル)．"
" <literal>mf_mult</literal> "
"はオプションのパラメータで，乗数空間を指定してDirichlet条件を弱めることができます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:752
msgid ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with Nitsche "
"method', mesh_im mim, string varname, string Neumannterm, string gamma0name,"
" int region[, scalar theta][, string dataname])``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal Dirichlet condition with Nitsche "
"method', mesh_im mim, string varname, string Neumannterm, string gamma0name,"
" int region[, scalar theta][, string dataname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:754
msgid ""
"Add a Dirichlet condition to the normal component of the vector (or tensor) "
"valued variable <literal>varname</literal> and the mesh region "
"<literal>region</literal>. This region should be a boundary. "
"<literal>Neumannterm</literal> is the expression of the Neumann term "
"(obtained by the Green formula) described as an expression of the high-level"
" generic assembly language. This term can be obtained by gf_model_get(model "
"M, 'Neumann term', varname, region) once all volumic bricks have been added "
"to the model. The Dirichlet condition is prescribed with Nitsche's method. "
"<literal>dataname</literal> is the optional right hand side of the Dirichlet"
" condition. It could be constant or described on a fem. "
"<literal>gamma0name</literal> is the Nitsche's method parameter. "
"<literal>theta</literal> is a scalar value which can be positive or "
"negative. <literal>theta = 1</literal> corresponds to the standard symmetric"
" method which is conditionally coercive for  <literal>gamma0</literal> "
"small. <literal>theta = -1</literal> corresponds to the skew-symmetric "
"method which is inconditionally coercive. <literal>theta = 0</literal> is "
"the simplest method for which the second derivative of the Neumann term is "
"not necessary even for nonlinear problems. Returns the brick index in the "
"model. (This brick is not fully tested)"
msgstr ""
"ベクトル(またはテンソル)値変数 <literal>varname</literal> の法線コンポーネントとメッシュ領域 "
"<literal>region</literal> にDirichlet条件を追加します．この領域は境界である必要があります． "
"<literal>Neumannterm</literal> "
"は，高水準汎用アセンブリ言語の表現として説明されるNeumann項(Green公式により得られる)の表現である．この項は "
"gf_model_get(model M, 'Neumann term', varname, region) "
"によって得られます．すべてのボリュームブリックがモデルに追加されると，ディリクレ条件はNitscheの方法で処方される． "
"<literal>dataname</literal> "
"はDirichlet条件のオプションの右辺です．これは一定であるか，または有限要素法で記述できます． "
"<literal>gamma0name</literal> はNitsche法パラメータです． <literal>theta</literal> "
"は正または負のスカラー値です． <literal>theta = 1</literal> は <literal>gamma0</literal> "
"が小さい場合に条件的に強制される標準的な対称法に相当する． <literal>theta = -1</literal> "
"は無条件に強制的なskew対称法に対応します． <literal>theta = 0</literal> "
"は非線形問題に対してもNeumann項の2次導関数を必要としない最も単純な方法である．モデル内のブリックのインデックスを返します．(このブリックは完全にはテストされていません)"

#: ../source/scilab/cmdref_gf_model_set.rst:777
msgid ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"multipliers', mesh_im mim, string varname, mult_description, int region, "
"string dataname, string Hname)``"
msgstr ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"multipliers', mesh_im mim, string varname, mult_description, int region, "
"string dataname, string Hname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:779
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>.  This version is for vector field. "
"It prescribes a condition <latex style=\"text\"><![CDATA[Hu = r]]></latex> "
"where <literal>H</literal> is a matrix field. The region should be a "
"boundary. The Dirichlet condition is prescribed with a multiplier variable "
"described by <literal>mult_description</literal>. If "
"<literal>mult_description</literal> is a string this is assumed to be the "
"variable name corresponding to the multiplier (which should be first "
"declared as a multiplier variable on the mesh region in the model). If it is"
" a finite element method (mesh_fem object) then a multiplier variable will "
"be added to the model and build on this finite element method (it will be "
"restricted to the mesh region <literal>region</literal> and eventually some "
"conflicting dofs with some other multiplier variables will be suppressed). "
"If it is an integer, then a  multiplier variable will be added to the model "
"and build on a classical finite element of degree that integer. "
"<literal>dataname</literal> is the right hand side of  the Dirichlet "
"condition. It could be constant or described on a fem; scalar or vector "
"valued, depending on the variable on which the Dirichlet condition is "
"prescribed. <literal>Hname</literal> is the data corresponding to the matrix"
" field <literal>H</literal>. Returns the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．このバージョンはベクトルフィールド用です．それは <literal>H</literal> "
"が行列フィールドである条件 <latex style=\"text\"><![CDATA[Hu = r]]></latex> "
"を規定します．領域は境界である必要があります．Dirichlet条件は <literal>mult_description</literal> "
"によって記述される乗数変数で規定される． <literal>mult_description</literal> "
"が文字列の場合は，乗数(これは，最初にモデルのメッシュ領域で乗数変数として宣言する必要があります)に対応する変数名と見なされます．有限要素法(mesh_femオブジェクト)の場合は，乗数変数がモデルに追加され，この有限要素法(メッシュ領域"
" <literal>region</literal> "
"に制限され，最終的に他の乗数変数との自由度の競合が抑制されます)に基づいて構築されます．整数の場合は，乗数変数がモデルに追加され，その整数の次数の従来の有限要素に基づいて構築されます．"
" <literal>dataname</literal> "
"はDirichlet条件の右側です．定数の場合もあれば，有限要素法で記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって異なります．"
" <literal>Hname</literal> は行列フィールド <literal>H</literal> "
"に対応するデータです．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:801
msgid ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"penalization', mesh_im mim, string varname, scalar coeff, int region, string"
" dataname, string Hname[, mesh_fem mf_mult])``"
msgstr ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"penalization', mesh_im mim, string varname, scalar coeff, int region, string"
" dataname, string Hname[, mesh_fem mf_mult])``"

#: ../source/scilab/cmdref_gf_model_set.rst:803
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>. This version is for vector field. It"
" prescribes a condition <latex style=\"text\"><![CDATA[Hu = r]]></latex> "
"where <literal>H</literal> is a matrix field. The region should be a "
"boundary. The Dirichlet condition is prescribed with penalization. The "
"penalization coefficient is intially <literal>coeff</literal> and will be "
"added to the data of the model. <literal>dataname</literal> is the right "
"hand side of the Dirichlet condition. It could be constant or described on a"
" fem; scalar or vector valued, depending on the variable on which the "
"Dirichlet condition is prescribed. <literal>Hname</literal> is the data "
"corresponding to the matrix field <literal>H</literal>. It has to be a "
"constant matrix or described on a scalar fem. <literal>mf_mult</literal> is "
"an optional parameter which allows to weaken the Dirichlet condition "
"specifying a multiplier space. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．このバージョンはベクトルフィールド用です．これは <literal>H</literal> "
"が行列フィールドである条件 <latex style=\"text\"><![CDATA[Hu = r]]></latex> "
"を規定します．領域は境界である必要があります．ディリクレ状態はペナリゼーションとともに処方される．ペナルティ係数は本来 "
"<literal>coeff</literal> であり，モデルのデータに追加されます． <literal>dataname</literal> "
"はDirichlet条件の右辺です．定数の場合もあれば，有限要素法で記述される場合もあります．スカラー値またはベクトル値で，Dirichlet条件が指定されている変数によって異なります．"
" <literal>Hname</literal> は行列フィールド  <literal>H</literal> "
"に対応するデータです．定数行列であるか，スカラー関数で記述されている必要があります． <literal>mf_mult</literal> "
"はオプションのパラメータで，乗数空間を指定してDirichlet条件を弱めることができます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:821
msgid ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"Nitsche method', mesh_im mim, string varname, string Neumannterm, string "
"gamma0name, int region[, scalar theta], string dataname, string Hname)``"
msgstr ""
"``ind = gf_model_set(model M, 'add generalized Dirichlet condition with "
"Nitsche method', mesh_im mim, string varname, string Neumannterm, string "
"gamma0name, int region[, scalar theta], string dataname, string Hname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:823
msgid ""
"Add a Dirichlet condition on the variable <literal>varname</literal> and the"
" mesh region <literal>region</literal>. This version is for vector field. It"
" prescribes a condition @f$ Hu = r @f$ where <literal>H</literal> is a "
"matrix field. CAUTION : the matrix H should have all eigenvalues equal to 1 "
"or 0. The region should be a boundary.   <literal>Neumannterm</literal> is "
"the expression of the Neumann term (obtained by the Green formula) described"
" as an expression of the high-level generic assembly language. This term can"
" be obtained by gf_model_get(model M, 'Neumann term', varname, region) once "
"all volumic bricks have been added to the model.  The Dirichlet condition is"
" prescribed with Nitsche's method. <literal>dataname</literal> is the "
"optional right hand side of the Dirichlet condition. It could be constant or"
" described on a fem. <literal>gamma0name</literal> is the Nitsche's method "
"parameter. <literal>theta</literal> is a scalar value which can be positive "
"or negative. <literal>theta = 1</literal> corresponds to the standard "
"symmetric method which is conditionally coercive for  "
"<literal>gamma0</literal> small. <literal>theta = -1</literal> corresponds "
"to the skew-symmetric method which is inconditionally coercive. "
"<literal>theta = 0</literal> is the simplest method for which the second "
"derivative of the Neumann term is not necessary even for nonlinear problems."
" <literal>Hname</literal> is the data corresponding to the matrix field "
"<literal>H</literal>. It has to be a constant matrix or described on a "
"scalar fem. Returns the brick index in the model. (This brick is not fully "
"tested)"
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にDirichlet条件を追加します．このバージョンはベクトルフィールド用です．これは @f$ Hu = r @f$ という条件を規定しており，ここで "
"<literal>H</literal> は行列フィールドです．注意: "
"行列Hの固有値はすべて1または0である必要があります．領域は境界である必要があります． <literal>Neumannterm</literal> "
"は高水準汎用アセンブリ言語の表現として説明されるNeumann項(Green公式により得られる)の表現です．この項は "
"gf_model_get(model M, 'Neumann term', varname, region) "
"によってmodelに追加されます．すべてのボリュームブリックがモデルに追加されると．ディリクレ条件はNitsche法で処理されています． "
"<literal>dataname</literal> "
"はDirichlet条件のオプションの右辺です．これは一定であるか，または有限要素法で記述できます． "
"<literal>gamma0name</literal> はNitsche法のパラメータです． <literal>theta</literal> "
"は正または負のスカラー値です． <literal>theta = 1</literal> は <literal>gamma0</literal> "
"が小さい場合に条件的に強制される標準的な対称法に相当する． <literal>theta = -1</literal> "
"は無条件に強制的なskew対称法に対応します． <literal>theta = 0</literal> "
"は非線形問題に対してもNeumann項の2次導関数を必要としない最も単純な方法である． <literal>Hname</literal> "
"は行列フィールド <literal>H</literal> "
"に対応するデータである．定数行列であるか，スカラー関数で記述されている必要があります．モデル内のブリックのインデックスを返します．(このブリックは完全にはテストされていせん)．"

#: ../source/scilab/cmdref_gf_model_set.rst:850
msgid ""
"``ind = gf_model_set(model M, 'add pointwise constraints with multipliers', "
"string varname, string dataname_pt[, string dataname_unitv] [, string "
"dataname_val])``"
msgstr ""
"``ind = gf_model_set(model M, 'add pointwise constraints with multipliers', "
"string varname, string dataname_pt[, string dataname_unitv] [, string "
"dataname_val])``"

#: ../source/scilab/cmdref_gf_model_set.rst:852
msgid ""
"Add some pointwise constraints on the variable <literal>varname</literal> "
"using multiplier. The multiplier variable is automatically added to the "
"model. The conditions are prescribed on a set of points given in the data "
"<literal>dataname_pt</literal> whose dimension is the number of points times"
" the dimension of the mesh. If the variable represents a vector field, one "
"has to give the data <literal>dataname_unitv</literal> which represents a "
"vector of dimension the number of points times the dimension of the vector "
"field which should store some unit vectors. In that case the prescribed "
"constraint is the scalar product of the variable at the corresponding point "
"with the corresponding unit vector. The optional data "
"<literal>dataname_val</literal> is the vector of values to be prescribed at "
"the different points. This brick is specifically designed to kill rigid "
"displacement in a Neumann problem. Returns the brick index in the model."
msgstr ""
"multiplierを使用して，変数 <literal>varname</literal> "
"に点ワイズ制約を追加します．乗数変数が自動的にモデルに追加されます．条件は，データ <literal>dataname_pt</literal> "
"に指定された点のセットで規定され，その寸法は点の数とメッシュ次元の積である．変数がベクトルフィールドを表す場合には，データ "
"<literal>dataname_unitv</literal> "
"を与えなければならない．これは，次元のベクトルを表すものであり，点の数と単位ベクトルを格納すべきベクトルフィールドの次元を乗算したものである．この場合，指定拘束は，対応する点における変数と対応する単位ベクトルとのスカラー積である．オプションのデータ"
" <literal>dataname_val</literal> "
"は，異なる点で規定される値のベクトルです．このブリックは，Neumann問題における剛体変位を消滅させるために特別に設計されている．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:870
msgid ""
"``ind = gf_model_set(model M, 'add pointwise constraints with given "
"multipliers', string varname, string multname, string dataname_pt[, string "
"dataname_unitv] [, string dataname_val])``"
msgstr ""
"``ind = gf_model_set(model M, 'add pointwise constraints with given "
"multipliers', string varname, string multname, string dataname_pt[, string "
"dataname_unitv] [, string dataname_val])``"

#: ../source/scilab/cmdref_gf_model_set.rst:872
msgid ""
"Add some pointwise constraints on the variable <literal>varname</literal> "
"using a given multiplier <literal>multname</literal>. The conditions are "
"prescribed on a set of points given in the data "
"<literal>dataname_pt</literal> whose dimension is the number of points times"
" the dimension of the mesh. The multiplier variable should be a fixed size "
"variable of size the number of points. If the variable represents a vector "
"field, one has to give the data <literal>dataname_unitv</literal> which "
"represents a vector of dimension the number of points times the dimension of"
" the vector field which should store some unit vectors. In that case the "
"prescribed constraint is the scalar product of the variable at the "
"corresponding point with the corresponding unit vector. The optional data "
"<literal>dataname_val</literal> is the vector of values to be prescribed at "
"the different points. This brick is specifically designed to kill rigid "
"displacement in a Neumann problem. Returns the brick index in the model."
msgstr ""
"与えられた乗数 <literal>multname</literal> を使用して，変数 <literal>varname</literal> "
"の各点に制約を追加します．条件は，データ <literal>dataname_pt</literal> "
"に指定された点の集合で規定され，その寸法は点の数とメッシュの寸法の積です．乗数変数は，点数のサイズを固定サイズ変数にする必要があります．変数がベクトルフィールドを表す場合には，データ"
" <literal>dataname_unitv</literal> "
"を与えなければなりません．これは，次元のベクトルを表すものであり，点の数と単位ベクトルを格納すべきベクトルフィールドの次元を乗算したものです．この場合，指定拘束は，対応する点における変数と対応する単位ベクトルとのスカラー積である．オプションのデータ"
" <literal>dataname_val</literal> "
"は異なる点で規定される値のベクトルです．このブリックはNeumann問題における剛体変位を消滅させるために特別に設計されています．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:892
msgid ""
"``ind = gf_model_set(model M, 'add pointwise constraints with penalization',"
" string varname, scalar coeff, string dataname_pt[, string dataname_unitv] "
"[, string dataname_val])``"
msgstr ""
"``ind = gf_model_set(model M, 'add pointwise constraints with penalization',"
" string varname, scalar coeff, string dataname_pt[, string dataname_unitv] "
"[, string dataname_val])``"

#: ../source/scilab/cmdref_gf_model_set.rst:894
msgid ""
"Add some pointwise constraints on the variable <literal>varname</literal> "
"thanks to a penalization. The penalization coefficient is initially "
"<literal>penalization_coeff</literal> and will be added to the data of the "
"model. The conditions are prescribed on a set of points given in the data "
"<literal>dataname_pt</literal> whose dimension is the number of points times"
" the dimension of the mesh. If the variable represents a vector field, one "
"has to give the data <literal>dataname_unitv</literal> which represents a "
"vector of dimension the number of points times the dimension of the vector "
"field which should store some unit vectors. In that case the prescribed "
"constraint is the scalar product of the variable at the corresponding point "
"with the corresponding unit vector. The optional data "
"<literal>dataname_val</literal> is the vector of values to be prescribed at "
"the different points. This brick is specifically designed to kill rigid "
"displacement in a Neumann problem. Returns the brick index in the model."
msgstr ""
"ペナルティにより，変数 <literal>varname</literal> に点ごとの制約を追加します．ペナルティ係数は最初は "
"<literal>penalization_coeff</literal> で，モデルのデータに追加されます．条件は，データ "
"<literal>dataname_pt</literal>  "
"に指定された点の集合で規定され，その次元は点の数とメッシュの次元の積です．変数がベクトルフィールドを表す場合には，データ "
"<literal>dataname_unitv</literal> "
"を与えなければなりません．これは，次元のベクトルを表すものであり，点の数と単位ベクトルを格納すべきベクトルフィールドの次元を乗算したものです．この場合，指定拘束は，対応する点における変数と対応する単位ベクトルとのスカラー積です．オプションのデータ"
" <literal>dataname_val</literal> "
"は異なる点で規定される値のベクトルです．このブリックはNeumann問題における剛体変位を消滅させるために特別に設計されています．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:913
msgid ""
"``gf_model_set(model M, 'change penalization coeff', int ind_brick, scalar "
"coeff)``"
msgstr ""
"``gf_model_set(model M, 'change penalization coeff', int ind_brick, scalar "
"coeff)``"

#: ../source/scilab/cmdref_gf_model_set.rst:915
msgid ""
"Change the penalization coefficient of a Dirichlet condition with "
"penalization brick. If the brick is not of this kind, this function has an "
"undefined behavior."
msgstr ""
"penalizationブリックを使用してDirichlet条件のpenalization係数を変更します．ブリックがこの種類でない場合，この関数の動作は定義されていません．"

#: ../source/scilab/cmdref_gf_model_set.rst:920
msgid ""
"``ind = gf_model_set(model M, 'add Helmholtz brick', mesh_im mim, string "
"varname, string dataexpr[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Helmholtz brick', mesh_im mim, string "
"varname, string dataexpr[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:922
msgid ""
"Add a Helmholtz term to the model relatively to the variable "
"<literal>varname</literal>. <literal>dataexpr</literal> is the wave number. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model."
msgstr ""
"変数 <literal>varname</literal> に対して相対的にHelmholtz項をモデルに追加します． "
"<literal>dataexpr</literal> は波数です． <literal>region</literal> "
"はオプションの項が追加されるメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:928
msgid ""
"``ind = gf_model_set(model M, 'add Fourier Robin brick', mesh_im mim, string"
" varname, string dataexpr, int region)``"
msgstr ""
"``ind = gf_model_set(model M, 'add Fourier Robin brick', mesh_im mim, string"
" varname, string dataexpr, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:930
msgid ""
"Add a Fourier-Robin term to the model relatively to the variable "
"<literal>varname</literal>. This corresponds to a weak term of the form "
"<latex style=\"text\"><![CDATA[\\int (qu).v]]></latex>. "
"<literal>dataexpr</literal> is the parameter <latex "
"style=\"text\"><![CDATA[q]]></latex> of the Fourier-Robin condition.  It can"
" be an arbitrary valid expression of the high-level generic assembly "
"language (except for the complex version for which it should be a data of "
"the model). <literal>region</literal> is the mesh region on which the term "
"is added. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> に相対的にFourier-"
"Robin項を加えてください．これは以下の形式の形式の弱項に対応します． <latex style=\"text\"><![CDATA[\\int "
"(qu).v]]></latex> ．<literal>dataexpr</literal> はFourier-Robin条件のパラメータ <latex"
" style=\"text\"><![CDATA[q]]></latex> "
"です．高水準汎用アセンブリ言語(ただし，モデルのデータである必要がある複雑なバージョンは除きます．)の任意の有効な式を指定できます． "
"<literal>region</literal> は，項が追加されるメッシュ領域です．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:939
msgid ""
"``ind = gf_model_set(model M, 'add constraint with multipliers', string "
"varname, string multname, spmat B, {vec L | string dataname})``"
msgstr ""
"``ind = gf_model_set(model M, 'add constraint with multipliers', string "
"varname, string multname, spmat B, {vec L | string dataname})``"

#: ../source/scilab/cmdref_gf_model_set.rst:941
msgid ""
"Add an additional explicit constraint on the variable "
"<literal>varname</literal> thank to a multiplier <literal>multname</literal>"
" peviously added to the model (should be a fixed size variable). The "
"constraint is <latex style=\"text\"><![CDATA[BU=L]]></latex> with "
"<literal>B</literal> being a rectangular sparse matrix. It is possible to "
"change the constraint at any time with the methods gf_model_set(model M, "
"'set private matrix') and gf_model_set(model M, 'set private rhs'). If "
"<literal>dataname</literal> is specified instead of <literal>L</literal>, "
"the vector <literal>L</literal> is defined in the model as data with the "
"given name. Return the brick index in the model."
msgstr ""
"以前にモデルに追加した乗数 <literal>multname</literal> を使い，変数 <literal>varname</literal> "
"(は固定サイズ変数でなければなりません)に陽な制約を追加します．制約は <latex "
"style=\"text\"><![CDATA[BU=L]]></latex> です．ただし， <literal>B</literal> "
"は矩形の疎行列です． gf_model_set(model M, 'set private matrix') とgf_model_set(model "
"M, 'set private rhs') メソッドを使用すると，いつでも拘束を変更できます． <literal>L</literal> の代わりに "
"<literal>dataname</literal> が指定された場合，ベクトル <literal>L</literal> "
"は指定された名前のデータとしてモデル内で定義されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:951
msgid ""
"``ind = gf_model_set(model M, 'add constraint with penalization', string "
"varname, scalar coeff, spmat B, {vec L | string dataname})``"
msgstr ""
"``ind = gf_model_set(model M, 'add constraint with penalization', string "
"varname, scalar coeff, spmat B, {vec L | string dataname})``"

#: ../source/scilab/cmdref_gf_model_set.rst:953
msgid ""
"Add an additional explicit penalized constraint on the variable "
"<literal>varname</literal>. The constraint is :math<literal>BU=L</literal> "
"with <literal>B</literal> being a rectangular sparse matrix. Be aware that "
"<literal>B</literal> should not contain a plain row, otherwise the whole "
"tangent matrix will be plain. It is possible to change the constraint at any"
" time with the methods gf_model_set(model M, 'set private matrix') and "
"gf_model_set(model M, 'set private rhs'). The method gf_model_set(model M, "
"'change penalization coeff') can be used. If <literal>dataname</literal> is "
"specified instead of <literal>L</literal>, the vector <literal>L</literal> "
"is defined in the model as data with the given name. Return the brick index "
"in the model."
msgstr ""
"変数 <literal>varname</literal> に追加の明示的ペナルティ制約を追加します．制約は以下の通りである． "
":math<literal>BU=L</literal> と <literal>B</literal> は矩形の疎行列である． "
"<literal>B</literal> にはペイン行を含めないでください．そうしないと，接線行列全体が単純になります． "
"gf_model_set(model M, 'set private matrix') と  gf_model_set(model M, 'set "
"private rhs') メソッドを使用すると，いつでも拘束を変更できます．gf_model_set(model M, 'change "
"penalization coeff') を使用できます． <literal>L</literal> の代わりに  "
"<literal>dataname</literal> が指定された場合，ベクトル <literal>L</literal> "
"は指定された名前のデータとしてモデル内で定義されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:966
msgid ""
"``ind = gf_model_set(model M, 'add explicit matrix', string varname1, string"
" varname2, spmat B[, int issymmetric[, int iscoercive]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add explicit matrix', string varname1, string"
" varname2, spmat B[, int issymmetric[, int iscoercive]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:968
msgid ""
"Add a brick representing an explicit matrix to be added to the tangent "
"linear system relatively to the variables <literal>varname1</literal> and "
"<literal>varname2</literal>. The given matrix should have has many rows as "
"the dimension of <literal>varname1</literal> and as many columns as the "
"dimension of <literal>varname2</literal>. If the two variables are different"
" and if <literal>issymmetric</literal> is set to 1 then the transpose of the"
" matrix is also added to the tangent system (default is 0). Set "
"<literal>iscoercive</literal> to 1 if the term does not affect the "
"coercivity of the tangent system (default is 0). The matrix can be changed "
"by the command gf_model_set(model M, 'set private matrix'). Return the brick"
" index in the model."
msgstr ""
"変数 <literal>varname1</literal> と <literal>varname2</literal> "
"に対して相対的に接線線形システムに追加される陽な行列を表すブリックを追加します．与えられた行列は <literal>varname1</literal>"
" の次元と同じ数の行と <literal>varname2</literal> "
"の次元と同じ数の列を持つ必要があります．もし2つの変数が異なっていて，かつ <literal>issymmetric</literal> "
"が1に設定されているならば，行列の転置もまた接線系に加えられます(デフォルトは0です)．項が接線系の保磁力に影響を与えない場合(デフォルトは0です)， "
"<literal>iscoercive</literal> を1に設定します．行列は， gf_model_set(model M, 'set "
"private matrix') コマンドで変更できます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:980
msgid ""
"``ind = gf_model_set(model M, 'add explicit rhs', string varname, vec L)``"
msgstr ""
"``ind = gf_model_set(model M, 'add explicit rhs', string varname, vec L)``"

#: ../source/scilab/cmdref_gf_model_set.rst:982
msgid ""
"Add a brick representing an explicit right hand side to be added to the "
"right hand side of the tangent linear system relatively to the variable "
"<literal>varname</literal>. The given rhs should have the same size than the"
" dimension of <literal>varname</literal>. The rhs can be changed by the "
"command gf_model_set(model M, 'set private rhs'). If "
"<literal>dataname</literal> is specified instead of <literal>L</literal>, "
"the vector <literal>L</literal> is defined in the model as data with the "
"given name. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> "
"に対して相対的に接線線形システムの右側に追加される明示的な右辺を表すブリックを追加します．与えられた右辺は "
"<literal>varname</literal> の次元と同じ大きさでなければなりません．右辺は gf_model_set(model M, "
"'set private rhs') コマンドで変更できます． <literal>L</literal> の代わりに "
"<literal>dataname</literal> が指定された場合，ベクトル <literal>L</literal> "
"は指定された名前のデータとしてモデル内で定義されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:991
msgid "``gf_model_set(model M, 'set private matrix', int indbrick, spmat B)``"
msgstr ""
"``gf_model_set(model M, 'set private matrix', int indbrick, spmat B)``"

#: ../source/scilab/cmdref_gf_model_set.rst:993
msgid ""
"For some specific bricks having an internal sparse matrix (explicit bricks: "
"'constraint brick' and 'explicit matrix brick'), set this matrix."
msgstr "内部に疎行列がある特定のブリック(陽なブリック: '拘束ブリック' と '陽な行列ブリック' )では，この行列を設定します．"

#: ../source/scilab/cmdref_gf_model_set.rst:998
msgid "``gf_model_set(model M, 'set private rhs', int indbrick, vec B)``"
msgstr "``gf_model_set(model M, 'set private rhs', int indbrick, vec B)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1000
msgid ""
"For some specific bricks having an internal right hand side vector (explicit"
" bricks: 'constraint brick' and 'explicit rhs brick'), set this rhs."
msgstr "内部右辺ベクトル(陽なブリック: '拘束ブリック' と '陽なブリック')を持つ特定のブリックでは，このrhsを設定します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1005
msgid ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity brick', "
"mesh_im mim, string varname, string dataname_lambda, string dataname_mu[, "
"int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity brick', "
"mesh_im mim, string varname, string dataname_lambda, string dataname_mu[, "
"int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1007
msgid ""
"Add an isotropic linearized elasticity term to the model relatively to the "
"variable <literal>varname</literal>. <literal>dataname_lambda</literal> and "
"<literal>dataname_mu</literal> should contain the Lame coefficients. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model."
msgstr ""
"等方性線形化弾性項を，変数 <literal>varname</literal> "
"に対して相対的にモデルに追加します．<literal>dataname_lambda</literal> と "
"<literal>dataname_mu</literal> には，Lame係数を含める必要があります． "
"<literal>region</literal> "
"は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1014
msgid ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity pstrain "
"brick', mesh_im mim, string varname, string data_E, string data_nu[, int "
"region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity pstrain "
"brick', mesh_im mim, string varname, string data_E, string data_nu[, int "
"region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1016
msgid ""
"Add an isotropic linearized elasticity term to the model relatively to the "
"variable <literal>varname</literal>. <literal>data_E</literal> and "
"<literal>data_nu</literal> should contain the Young modulus and Poisson "
"ratio, respectively. <literal>region</literal> is an optional mesh region on"
" which the term is added. If it is not specified, it is added on the whole "
"mesh. On two-dimensional meshes, the term will correpsond to a plain strain "
"approximation. On three-dimensional meshes, it will correspond to the "
"standard model. Return the brick index in the model."
msgstr ""
"等方性線形化弾性項を，変数 <literal>varname</literal> に対してモデルに追加します． "
"<literal>data_E</literal> と <literal>data_nu</literal> "
"には，それぞれYoung率とPoisson比を含める必要があります． <literal>region</literal> "
"はオプションの項が追加されるメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．2次元メッシュでは，この項は単純な歪み近似と相関します．3次元メッシュでは，標準モデルに対応します．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1028
msgid ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity pstress "
"brick', mesh_im mim, string varname, string data_E, string data_nu[, int "
"region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add isotropic linearized elasticity pstress "
"brick', mesh_im mim, string varname, string data_E, string data_nu[, int "
"region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1030
msgid ""
"Add an isotropic linearized elasticity term to the model relatively to the "
"variable <literal>varname</literal>. <literal>data_E</literal> and "
"<literal>data_nu</literal> should contain the Young modulus and Poisson "
"ratio, respectively. <literal>region</literal> is an optional mesh region on"
" which the term is added. If it is not specified, it is added on the whole "
"mesh. On two-dimensional meshes, the term will correpsond to a plain stress "
"approximation. On three-dimensional meshes, it will correspond to the "
"standard model. Return the brick index in the model."
msgstr ""
"等方性線形化弾性項を，変数 <literal>varname</literal> に対してモデルに追加します． "
"<literal>data_E</literal> と <literal>data_nu</literal> "
"には，それぞれYoung率とPoisson比を含める必要があります． <literal>region</literal> "
"はオプションの項が追加されるメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．2次元メッシュでは，この項は単純な応力近似と相関します．3次元メッシュでは，標準モデルに対応します．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1042
msgid ""
"``ind = gf_model_set(model M, 'add linear incompressibility brick', mesh_im "
"mim, string varname, string multname_pressure[, int region[, string "
"dataexpr_coeff]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add linear incompressibility brick', mesh_im "
"mim, string varname, string multname_pressure[, int region[, string "
"dataexpr_coeff]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1044
msgid ""
"Add a linear incompressibility condition on <literal>variable</literal>. "
"<literal>multname_pressure</literal> is a variable which represent the "
"pressure. Be aware that an inf-sup condition between the finite element "
"method describing the pressure and the primal variable has to be satisfied. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. "
"<literal>dataexpr_coeff</literal> is an optional penalization coefficient "
"for nearly incompressible elasticity for instance. In this case, it is the "
"inverse of the Lame coefficient <latex "
"style=\"text\"><![CDATA[\\lambda]]></latex>. Return the brick index in the "
"model."
msgstr ""
"<literal>variable</literal> に線形非圧縮性条件を追加します． "
"<literal>multname_pressure</literal> "
"は圧力を表す変数です．圧力を記述する有限要素法と主変数との間の入力条件を満たす必要があることに注意してください． "
"<literal>region</literal> は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます． "
"<literal>dataexpr_coeff</literal> "
"は，たとえば，非圧縮性に近い弾性に対するオプションのペナルティ係数です．この場合，それはLame係数の逆数である <latex "
"style=\"text\"><![CDATA[\\lambda]]></latex> です．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1055
msgid ""
"``ind = gf_model_set(model M, 'add nonlinear elasticity brick', mesh_im mim,"
" string varname, string constitutive_law, string dataname[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonlinear elasticity brick', mesh_im mim,"
" string varname, string constitutive_law, string dataname[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1057
msgid ""
"Add a nonlinear elasticity term to the model relatively to the variable "
"<literal>varname</literal> (deprecated brick, use "
"add_finite_strain_elaticity instead). <literal>lawname</literal> is the "
"constitutive law which could be 'SaintVenant Kirchhoff', 'Mooney Rivlin', "
"'neo Hookean', 'Ciarlet Geymonat' or 'generalized Blatz Ko'. 'Mooney Rivlin'"
" and 'neo Hookean' law names can be preceded with the word 'compressible' or"
" 'incompressible' to force using the corresponding version. The compressible"
" version of these laws requires one additional material coefficient. By "
"default, the incompressible version of 'Mooney Rivlin' law and the "
"compressible one of the 'neo Hookean' law are considered. In general, 'neo "
"Hookean' is a special case of the 'Mooney Rivlin' law that requires one "
"coefficient less. IMPORTANT : if the variable is defined on a 2D mesh, the "
"plane strain approximation is automatically used. "
"<literal>dataname</literal> is a vector of parameters for the constitutive "
"law. Its length depends on the law. It could be a short vector of constant "
"values or a vector field described on a finite element method for variable "
"coefficients. <literal>region</literal> is an optional mesh region on which "
"the term is added. If it is not specified, it is added on the whole mesh. "
"This brick use the low-level generic assembly. Returns the brick index in "
"the model."
msgstr ""
"変数 <literal>varname</literal> (deprecated "
"brick，代わりにadd_finite_strain_elasticityを使用してください)に関する非線形弾性項をモデルに追加します．<literal>lawname</literal>"
" は構成則であり 'SaintVenant Kirchhoff' ， 'Mooney Rivlin' ， 'neo Hookean' ，  "
"'Ciarlet Geymonat'  または  'generalized Blatz Ko' のいずれかになります． 'Mooney Rivlin' "
"および 'neo Hookean' 則の名前の前に 'compressible' または 'incompressible' "
"を付けると，対応するバージョンが使用されます．これらの法則の圧縮性バージョンには，追加の材料係数が1つ必要です．既定では，'Mooney Rivlin'"
" 則の非圧縮性バージョンと'neo Hookean' 則の圧縮性バージョンが考慮されます．一般に 'neo Hookean' は'Mooney "
"Rivlin' "
"則の特殊なケースであり，一つの係数を少なくする必要があります．重要:変数が2次元メッシュ上で定義されている場合，平面歪み近似が自動的に使用されます． "
"<literal>dataname</literal> "
"は構成則のパラメータのベクトルです．長さは法則によります．これは，定数値の短いベクトル，または可変係数の有限要素法で記述されたベクトルフィールドです． "
"<literal>region</literal> "
"はオプションの項が追加されるメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．このブリックは，低水準汎用アセンブリを使用します．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1080
msgid ""
"``ind = gf_model_set(model M, 'add finite strain elasticity brick', mesh_im "
"mim, string constitutive_law, string varname, string params[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add finite strain elasticity brick', mesh_im "
"mim, string constitutive_law, string varname, string params[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1082
msgid ""
"Add a nonlinear elasticity term to the model relatively to the variable "
"<literal>varname</literal>. <literal>lawname</literal> is the constitutive "
"law which could be 'SaintVenant Kirchhoff', 'Mooney Rivlin', 'Neo Hookean', "
"'Ciarlet Geymonat' or 'Generalized Blatz Ko'. 'Mooney Rivlin' and 'Neo "
"Hookean' law names have to be preceeded with the word 'Compressible' or "
"'Incompressible' to force using the corresponding version. The compressible "
"version of these laws requires one additional material coefficient."
msgstr ""
"変数 <literal>varname</literal> を基準にしてモデルに非線形弾性項を追加します． "
"<literal>lawname</literal> は 'SaintVenant Kirchhoff' ， 'Mooney Rivlin' ， "
"'Neo Hookean' ， 'Ciarlet Geymonat' ，のいずれかです．対応するバージョンを使用するには，'Mooney Rivlin'"
" および'Neo Hookean' 法の前に 'Compressible' または 'Incompressible' "
"という語を付ける必要があります．これらの法則の圧縮性バージョンには，追加の材料係数が1つ必要です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1092
msgid ""
"IMPORTANT : if the variable is defined on a 2D mesh, the plane strain "
"approximation is automatically used. <literal>params</literal> is a vector "
"of parameters for the constitutive law. Its length depends on the law. It "
"could be a short vector of constant values or a vector field described on a "
"finite element method for variable coefficients. <literal>region</literal> "
"is an optional mesh region on which the term is added. If it is not "
"specified, it is added on the whole mesh. This brick use the high-level "
"generic assembly. Returns the brick index in the model."
msgstr ""
"重要: 変数が2次元メッシュ上で定義されている場合，平面歪み近似が自動的に使用されます． <literal>params</literal> "
"は構成則のパラメータのベクトルです．長さは法則によります．これは，定数値の短いベクトル，または可変係数の有限要素法で記述されたベクトルフィールドです．<literal>region</literal>"
" "
"は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．このブリックは，高水準の汎用アセンブリを使用します．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1103
msgid ""
"``ind = gf_model_set(model M, 'add small strain elastoplasticity brick', "
"mesh_im mim,  string lawname, string unknowns_type [, string varnames, ...] "
"[, string params, ...] [, string theta = '1' [, string dt = 'timestep']] [, "
"int region = -1])``"
msgstr ""
"``ind = gf_model_set(model M, 'add small strain elastoplasticity brick', "
"mesh_im mim,  string lawname, string unknowns_type [, string varnames, ...] "
"[, string params, ...] [, string theta = '1' [, string dt = 'timestep']] [, "
"int region = -1])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1105
msgid ""
"Adds a small strain plasticity term to the model <literal>M</literal>. This "
"is the main GetFEM brick for small strain plasticity. "
"<literal>lawname</literal> is the name of an implemented plastic law, "
"<literal>unknowns_type</literal> indicates the choice between a "
"discretization where the plastic multiplier is an unknown of the problem or "
"(return mapping approach) just a data of the model stored for the next "
"iteration. Remember that in both cases, a multiplier is stored anyway. "
"<literal>varnames</literal> is a set of variable and data names with length "
"which may depend on the plastic law (at least the displacement, the plastic "
"multiplier and the plastic strain). <literal>params</literal> is a list of "
"expressions for the parameters (at least elastic coefficients and the yield "
"stress). These expressions can be some data names (or even variable names) "
"of the model but can also be any scalar valid expression of the high level "
"assembly language (such as '1/2', '2+sin(X[0])', '1+Norm(v)' ...). The last "
"two parameters optionally provided in <literal>params</literal> are the "
"<literal>theta</literal> parameter of the <literal>theta</literal>-scheme "
"(generalized trapezoidal rule) used for the plastic strain integration and "
"the time-step<literal>dt</literal>. The default value for "
"<literal>theta</literal> if omitted is 1, which corresponds to the classical"
" Backward Euler scheme which is first order consistent. "
"<literal>theta=1/2</literal> corresponds to the Crank-Nicolson scheme "
"(trapezoidal rule) which is second order consistent. Any value between 1/2 "
"and 1 should be a valid value. The default value of <literal>dt</literal> is"
" 'timestep' which simply indicates the time step defined in the model (by "
"md.set_time_step(dt)). Alternatively it can be any expression (data name, "
"constant value ...). The time step can be altered from one iteration to the "
"next one. <literal>region</literal> is a mesh region."
msgstr ""
"モデル <literal>M</literal> に微小歪み塑性項を追加します．これは，微小ひずみ塑性の主要なGetFEMブリックです． "
"<literal>lawname</literal> は実行された塑性法則の名前であり， "
"<literal>unknowns_type</literal> "
"は，塑性乗数が問題の未知である場合の離散化，または(リターンマッピング法)が次のイテレーションのために格納されるモデルのデータのみの選択を示します．どちらの場合も，乗数は格納されます．<literal>varnames</literal>は，プラスチック則に依存する長さの変数名とデータ名の集合である(少なくとも変位，塑性乗数，塑性歪み)．<literal>params</literal>はパラメータの式のリストです(少なくとも弾性係数と降伏応力)．これらの式には，モデルのデータ名(または変数名)を使用できますが，高水準アセンブリ言語(例えば"
" '1/2'， '2+sin(X[0])'， '1+Norm(v)' "
"...)の有効なスカラー式を使用することもできます．<literal>params</literal>にオプションとして与えられる最後の二つのパラメータは，塑性歪み積分に使用されるスキーム(一般化台形則)のパラメータである"
" <literal>theta</literal> と時間ステップ <literal>dt</literal> です．省略された場合の "
"<literal>theta</literal> のデフォルト値は1であり，これは1次一貫性のある古典的な後方Euler法に対応します． "
"<literal>theta=1/2</literal> は2次適合であるCrank-"
"Nicolson法(台形則)に対応します．1/2から1の間の値は有効な値である必要があります． <literal>dt</literal> "
"のデフォルト値は 'timestep' であり，これは単に(md.set_time_step(dt) "
"により)モデルで定義された時間ステップです．または，任意の式(データ名，定数値...)を使用できます．時間ステップは，1つの反復から次のイテレーションに変更できます．"
" <literal>region</literal> はメッシュ領域です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1131
msgid "The available plasticity laws are:"
msgstr "使用可能な塑性則は次のとおりです．"

#: ../source/scilab/cmdref_gf_model_set.rst:1133
msgid ""
"'Prandtl Reuss' (or 'isotropic perfect plasticity'). Isotropic elasto-"
"plasticity with no hardening. The variables are the displacement, the "
"plastic multiplier and the plastic strain. The displacement should be a "
"variable and have a corresponding data having the same name preceded by "
"'Previous\\_' corresponding to the displacement at the previous time step "
"(typically 'u' and 'Previous_u'). The plastic multiplier should also have "
"two versions (typically 'xi' and 'Previous_xi') the first one being defined "
"as data if <literal>unknowns_type </literal> is 'DISPLACEMENT_ONLY' or the "
"integer value 0, or as a variable if <literal>unknowns_type</literal> is "
"DISPLACEMENT_AND_PLASTIC_MULTIPLIER or the integer value 1. The plastic "
"strain should represent a n x n data tensor field stored on mesh_fem or "
"(preferably) on an im_data (corresponding to <literal>mim</literal>). The "
"data are the first Lame coefficient, the second one (shear modulus) and the "
"uniaxial yield stress. A typical call is gf_model_get(model M, 'add small "
"strain elastoplasticity brick', mim, 'Prandtl Reuss', 0, 'u', 'xi', "
"'Previous_Ep', 'lambda', 'mu', 'sigma_y', '1', 'timestep'); IMPORTANT: Note "
"that this law implements the 3D expressions. If it is used in 2D, the "
"expressions are just transposed to the 2D. For the plane strain "
"approximation, see below."
msgstr ""
"'Prandtl Reuss' (または 'isotropic perfect plasticity' "
")．硬化のない等方性弾塑性．変数は変位，塑性乗数，塑性歪みです．変位は変数であり，前の時間ステップでの変位(通常は 'u' と 'Previous_u'"
" )に対応する 'Previous\\_' が先頭に付いた同じ名前の対応するデータを持つ必要があります．塑性乗数には，2つのバージョン(通常は 'xi'"
" と 'Previous_xi' )が必要です．最初のバージョンは， <literal>unknowns_type </literal> が "
"'DISPLACEMENT_ONLY' または整数値0の場合はデータとして， <literal>unknowns_type</literal> "
"がDISPLACEMENT_AND_PLASTIC_MULTIPLIERまたは整数値1の場合は変数として定義されます．塑性歪みは，mesh_femまたは(好ましくは)("
" <literal>mim</literal> に対応する)im_dataに保存されている n x n "
"データテンソルフィールドの形である必要があります．データは，最初のLame係数，次の係数(せん断弾性率)，および一軸降伏応力です．典型的な呼び出し方法は"
"  gf_model_get(model M, 'add small strain elastoplasticity brick', mim, "
"'Prandtl Reuss', 0, 'u', 'xi', 'Previous_Ep', 'lambda', 'mu', 'sigma_y', "
"'1', 'timestep');  "
"です．重要:この法則は3次元表現を実装することに注意してください．2次元で使用する場合，式は2次元に単純に転置されます．平面歪み近似については，以下を参照してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:1152
msgid ""
"\"plane strain Prandtl Reuss\" (or \"plane strain isotropic perfect "
"plasticity\") The same law as the previous one but adapted to the plane "
"strain approximation. Can only be used in 2D."
msgstr ""
"\"平面ひずみPrandtl Reuss\" (または "
"\"平面ひずみ等方性完全塑性\")前述の法則と同じですが，平面ひずみ近似に適用されます．2次元でのみ使用できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1156
msgid ""
"\"Prandtl Reuss linear hardening\" (or \"isotropic plasticity linear "
"hardening\"). Isotropic elasto-plasticity with linear isotropic and "
"kinematic hardening. An additional variable compared to \"Prandtl Reuss\" "
"law: the accumulated plastic strain. Similarly to the plastic strain, it is "
"only stored at the end of the time step, so a simple data is required "
"(preferably on an im_data). Two additional parameters: the kinematic "
"hardening modulus and the isotropic one. 3D expressions only. A typical call"
" is gf_model_get(model M, 'add small strain elastoplasticity brick', mim, "
"'Prandtl Reuss linear hardening', 0, 'u', 'xi', 'Previous_Ep', "
"'Previous_alpha', 'lambda', 'mu', 'sigma_y', 'H_k', H_i', '1', 'timestep');"
msgstr ""
"\"Prandtl Reuss 線形硬化\" (または \"等方性塑性線硬化\")．線形等方性および運動硬化を伴う等方性弾塑性． \"Prandtl "
"Reuss\" 法と比較される追加の変数，累積塑性歪み．塑性歪みと同様に，時間ステップの終了時にのみ保存されるため，単純なデータが必要です(好ましくは，"
" im_data)．2つの追加パラメータ: 運動学的硬化係数および等方性．3次元表現のみ．典型的な呼び出しは gf_model_get(model M,"
" 'add small strain elastoplasticity brick', mim, 'Prandtl Reuss linear "
"hardening', 0, 'u', 'xi', 'Previous_Ep', 'Previous_alpha', 'lambda', 'mu', "
"'sigma_y', 'H_k', H_i', '1', 'timestep');です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1166
msgid ""
"\"plane strain Prandtl Reuss linear hardening\" (or \"plane strain isotropic"
" plasticity linear hardening\"). The same law as the previous one but "
"adapted to the plane strain approximation. Can only be used in 2D."
msgstr ""
"\"平面ひずみPrandtl Reuss線形硬化\" (または "
"\"平面ひずみ等方性塑性線形硬化\")．前の法則と同じですが，平面ひずみ近似に適合しています．2次元でのみ使用できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1171
msgid ""
"See GetFEM user documentation for further explanations on the discretization"
" of the plastic flow and on the implemented plastic laws. See also GetFEM "
"user documentation on time integration strategy (integration of transient "
"problems)."
msgstr ""
"塑性流動の離散化および実装された塑性則の詳細についてはGetFEMユーザーマニュアルを参照してください．時間の積分法に関するGetFEMユーザーマニュアル(過渡問題の積分)も参照してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:1176
msgid ""
"IMPORTANT : remember that "
"<literal>small_strain_elastoplasticity_next_iter</literal> has to be called "
"at the end of each time step, before the next one (and before any post-"
"treatment : this sets the value of the plastic strain and plastic "
"multiplier)."
msgstr ""
"重要: <literal>small_strain_elastoplasticity_next_iter</literal> "
"は各時間ステップの終了時，次の時間ステップの前(と後処理の前: 塑性歪みおよび塑性乗数の値を設定します)に呼び出す必要があります．"

#: ../source/scilab/cmdref_gf_model_set.rst:1183
msgid ""
"``ind = gf_model_set(model M, 'add elastoplasticity brick', mesh_im mim "
",string projname, string varname, string previous_dep_name, string "
"datalambda, string datamu, string datathreshold, string datasigma[, int "
"region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add elastoplasticity brick', mesh_im mim "
",string projname, string varname, string previous_dep_name, string "
"datalambda, string datamu, string datathreshold, string datasigma[, int "
"region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1185
msgid ""
"Old (obsolete) brick which do not use the high level generic assembly. Add a"
" nonlinear elastoplastic term to the model relatively to the variable "
"<literal>varname</literal>, in small deformations, for an isotropic material"
" and for a quasistatic model. <literal>projname</literal> is the type of "
"projection that used: only the Von Mises projection is available with 'VM' "
"or 'Von Mises'. <literal>datasigma</literal> is the variable representing "
"the constraints on the material. <literal>previous_dep_name</literal> "
"represents the displacement at the previous time step. Moreover, the finite "
"element method on which <literal>varname</literal> is described is an K "
"ordered mesh_fem, the <literal>datasigma</literal> one have to be at least "
"an K-1 ordered mesh_fem. <literal>datalambda</literal> and "
"<literal>datamu</literal> are the Lame coefficients of the studied material."
" <literal>datathreshold</literal> is the plasticity threshold of the "
"material. The three last variables could be constants or described on the "
"same finite element method. <literal>region</literal> is an optional mesh "
"region on which the term is added. If it is not specified, it is added on "
"the whole mesh. Return the brick index in the model."
msgstr ""
"上位レベルの汎用アセンブリを使用しない古い(廃止予定の)ブリック．等方性材料および準静的モデルの場合，微小変形で変数 "
"<literal>varname</literal> に対して相対的に非線形弾塑性項をモデルに追加します． "
"<literal>projname</literal> は使用される投影のタイプです． 'VM' または 'Von Mises' で使用できるのは "
"Von Mises 投影だけです． <literal>datasigma</literal> はマテリアルの制約を表す変数です． "
"<literal>previous_dep_name</literal> は，前のタイムステップでのディスプレイスメントを表します．さらに， "
"<literal>varname</literal> が記述される有限要素法は，K次のmesh_femであり， "
"<literal>datasigma</literal> は，少なくともK-1次のmesh_femでなければなりません． "
"<literal>datalambda</literal> および <literal>datamu</literal> "
"は検討した材料のLame係数である． <literal>datathreshold</literal> "
"は材料の塑性閾値です．最後の3つの変数は，定数であったり，同じ有限要素法で記述されていたりします． <literal>region</literal> "
"は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1206
msgid ""
"``ind = gf_model_set(model M, 'add finite strain elastoplasticity brick', "
"mesh_im mim , string lawname, string unknowns_type [, string varnames, ...] "
"[, string params, ...] [, int region = -1])``"
msgstr ""
"``ind = gf_model_set(model M, 'add finite strain elastoplasticity brick', "
"mesh_im mim , string lawname, string unknowns_type [, string varnames, ...] "
"[, string params, ...] [, int region = -1])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1208
msgid ""
"Add a finite strain elastoplasticity brick to the model. For the moment "
"there is only one supported law defined through <literal>lawname</literal> "
"as \"Simo_Miehe\". This law supports to possibilities of unknown variables "
"to solve for defined by means of <literal>unknowns_type</literal> set to "
"either 'DISPLACEMENT_AND_PLASTIC_MULTIPLIER' (integer value 1) or "
"'DISPLACEMENT_AND_PLASTIC_MULTIPLIER_AND_PRESSURE' (integer value 3). The  "
"\"Simo_Miehe\" law expects as <literal>varnames</literal> a set of the "
"following names that have to be defined as variables in the model:"
msgstr ""
"有限ひずみ弾塑性ブリックをモデルに追加します．現在のところ，サポートされている法則は， <literal>lawname</literal> によって "
"\"Simo_Miehe\" と定義されたものだけです．この法則は， 'DISPLACEMENT_AND_PLASTIC_MULTIPLIER' "
"(整数値1)または 'DISPLACEMENT_AND_PLASTIC_MULTIPLIER_AND_PRESSURE' "
"(整数値3)のいずれかに設定された <literal>unknowns_type</literal> "
"によって定義される未知変数求解の可能性をサポートします． \"Simo_Miehe\" "
"の法則では，モデル内で変数として定義する必要がある次の名前の集合を <literal>varnames</literal> と想定しています．"

#: ../source/scilab/cmdref_gf_model_set.rst:1218
msgid "the displacement variable which has to be defined as an unknown,"
msgstr "未知変数として定義しなければならない変位です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1219
msgid "the plastic multiplier which has also defined as an unknown,"
msgstr "the plastic multiplier which has also defined as an unknown,"

#: ../source/scilab/cmdref_gf_model_set.rst:1220
msgid ""
"optionally the pressure variable for a mixed displacement-pressure "
"formulation for 'DISPLACEMENT_AND_PLASTIC_MULTIPLIER_AND_PRESSURE' as "
"<literal>unknowns_type</literal>,"
msgstr ""
"オプションで， 'DISPLACEMENT_AND_PLASTIC_MULTIPLIER_AND_PRESSURE' の混合変位-圧力式の圧力変数を "
"<literal>unknowns_type</literal> で指定します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1223
msgid ""
"the name of a (scalar) fem_data or im_data field that holds the plastic "
"strain at the previous time step, and"
msgstr "前の時間ステップでの塑性歪みを保持する(スカラー)fem_dataまたはim_dataフィールドの名前です．そして"

#: ../source/scilab/cmdref_gf_model_set.rst:1225
msgid ""
"the name of a fem_data or im_data field that holds all non-repeated "
"components of the inverse of the plastic right Cauchy-Green tensor at the "
"previous time step (it has to be a 4 element vector for plane strain 2D "
"problems and a 6 element vector for 3D problems)."
msgstr ""
"直前の時間ステップでの右Cauchy-"
"Greenテンソルの逆数の非反復成分をすべて保持するfem_dataまたはim_dataフィールドの名前です(平面歪み2次元問題では4要素ベクトル，3次元問題では6要素ベクトルでなければなりません)．"

#: ../source/scilab/cmdref_gf_model_set.rst:1231
msgid ""
"The  \"Simo_Miehe\" law also expects as <literal>params</literal> a set of "
"the following three parameters:"
msgstr "\"Simo_Miehe\" 法はまた，次の3つのパラメータの集合を<literal>params</literal>としています．"

#: ../source/scilab/cmdref_gf_model_set.rst:1234
msgid "an expression for the initial bulk modulus K,"
msgstr "初期体積弾性率Kの式です，"

#: ../source/scilab/cmdref_gf_model_set.rst:1235
msgid "an expression for the initial shear modulus G,"
msgstr "初期せん断弾性率Gの式です，"

#: ../source/scilab/cmdref_gf_model_set.rst:1236
msgid ""
"the name of a user predefined function that decribes the yield limit as a "
"function of the hardening variable (both the yield limit and the hardening "
"variable values are assumed to be Frobenius norms of appropriate stress and "
"strain tensors, respectively)."
msgstr ""
"硬化変数(降伏限界と硬化変数の値は，それぞれ適切な応力テンソルと歪テンソルのFrobeniusノルムと仮定します)の関数として降伏限界を表示するユーザ定義関数の名前です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1242
msgid ""
"As usual, <literal>region</literal> is an optional mesh region on which the "
"term is added. If it is not specified, it is added on the whole mesh. Return"
" the brick index in the model."
msgstr ""
"通常， <literal>region</literal> "
"は項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1247
msgid ""
"``ind = gf_model_set(model M, 'add nonlinear incompressibility brick', "
"mesh_im mim, string varname, string multname_pressure[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonlinear incompressibility brick', "
"mesh_im mim, string varname, string multname_pressure[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1249
msgid ""
"Add a nonlinear incompressibility condition on <literal>variable</literal> "
"(for large strain elasticity). <literal>multname_pressure</literal> is a "
"variable which represent the pressure. Be aware that an inf-sup condition "
"between the finite element method describing the pressure and the primal "
"variable has to be satisfied. <literal>region</literal> is an optional mesh "
"region on which the term is added. If it is not specified, it is added on "
"the whole mesh. Return the brick index in the model."
msgstr ""
"非線形非圧縮性条件を(有限歪み弾性の場合)<literal>variable</literal>に追加します． "
"<literal>multname_pressure</literal> "
"は圧力を表す変数です．圧力を記述する有限要素法と主変数との間の入力条件を満たす必要があることに注意してください． "
"<literal>region</literal> "
"はオプションの項が追加されるメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1258
msgid ""
"``ind = gf_model_set(model M, 'add finite strain incompressibility brick', "
"mesh_im mim, string varname, string multname_pressure[, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add finite strain incompressibility brick', "
"mesh_im mim, string varname, string multname_pressure[, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1260
msgid ""
"Add a finite strain incompressibility condition on "
"<literal>variable</literal> (for large strain elasticity). "
"<literal>multname_pressure</literal> is a variable which represent the "
"pressure. Be aware that an inf-sup condition between the finite element "
"method describing the pressure and the primal variable has to be satisfied. "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model. This brick is equivalent to the "
"<literal></literal>nonlinear incompressibility brick<literal></literal> but "
"uses the high-level generic assembly adding the term "
"<literal></literal>p*(1-Det(Id(meshdim)+Grad_u))<literal></literal> if "
"<literal></literal>p<literal></literal> is the multiplier and "
"<literal></literal>u<literal></literal> the variable which represent the "
"displacement."
msgstr ""
"有限ひずみ非圧縮性条件を(有限ひずみ弾性の場合)<literal>variable</literal>に追加します．<literal>multname_pressure</literal>"
" は圧力を表す変数である．圧力を記述する有限要素法と主変数との間の入力条件を満たす必要があることに注意してください． "
"<literal>region</literal> "
"は項が追加されるオプションのメッシュ領域です．指定しない場合はメッシュ全体に追加されます．モデル内のブリックインデックスを返します．<literal></literal>p<literal></literal>"
" が乗数で，<literal></literal>u<literal></literal> "
"が変位の場合，<literal></literal>非線形非圧縮性ブリック<literal></literal> "
"で，<literal></literal>p*(1-Det(Id(meshdim)+Grad_u))<literal></literal> "
"の高水準汎用アセンブリを追加すると等しいです．"

#: ../source/scilab/cmdref_gf_model_set.rst:1273
msgid ""
"``ind = gf_model_set(model M, 'add bilaplacian brick', mesh_im mim, string "
"varname, string dataname [, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add bilaplacian brick', mesh_im mim, string "
"varname, string dataname [, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1275
msgid ""
"Add a bilaplacian brick on the variable <literal>varname</literal> and on "
"the mesh region <literal>region</literal>. This represent a term <latex "
"style=\"text\"><![CDATA[\\Delta(D \\Delta u)]]></latex>. where <latex "
"style=\"text\"><![CDATA[D(x)]]></latex> is a coefficient determined by "
"<literal>dataname</literal> which could be constant or described on a f.e.m."
" The corresponding weak form is <latex style=\"text\"><![CDATA[\\int "
"D(x)\\Delta u(x) \\Delta v(x) dx]]></latex>. Return the brick index in the "
"model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にbilaplacianブリックを追加します．これは， <latex style=\"text\"><![CDATA[\\Delta(D \\Delta"
" u)]]></latex> という項を表しています．ここで，<latex style=\"text\"> "
"<![CDATA[D(x)]]></latex> は <literal>dataname</literal> "
"によって決定される係数であり，定数であるか，有限要素法で記述されます．対応する弱形式は <latex "
"style=\"text\"><![CDATA[\\int D(x)\\Delta u(x) \\Delta v(x) dx]]></latex> "
"の通りです．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1284
msgid ""
"``ind = gf_model_set(model M, 'add Kirchhoff-Love plate brick', mesh_im mim,"
" string varname, string dataname_D, string dataname_nu [, int region])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Kirchhoff-Love plate brick', mesh_im mim,"
" string varname, string dataname_D, string dataname_nu [, int region])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1286
msgid ""
"Add a bilaplacian brick on the variable <literal>varname</literal> and on "
"the mesh region <literal>region</literal>. This represent a term <latex "
"style=\"text\"><![CDATA[\\Delta(D \\Delta u)]]></latex> where <latex "
"style=\"text\"><![CDATA[D(x)]]></latex> is a the flexion modulus determined "
"by <literal>dataname_D</literal>. The term is integrated by part following a"
" Kirchhoff-Love plate model with <literal>dataname_nu</literal> the poisson "
"ratio. Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"にbilaplacianブリックを追加します．これは，項 <latex style=\"text\"><![CDATA[\\Delta(D "
"\\Delta u)]]></latex> を表し，ここで  <latex "
"style=\"text\"><![CDATA[D(x)]]></latex>  は <literal>dataname_D</literal> "
"によって決定される曲げ弾性率です．この項は，  <literal>dataname_nu</literal> をポアソン比とする Kirchhoff-"
"Love プレートモデルに従って部分的に積分されています．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1295
msgid ""
"``ind = gf_model_set(model M, 'add normal derivative source term brick', "
"mesh_im mim, string varname, string dataname, int region)``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal derivative source term brick', "
"mesh_im mim, string varname, string dataname, int region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1297
msgid ""
"Add a normal derivative source term brick <latex style=\"text\"><![CDATA[F ="
" \\int b.\\partial_n v]]></latex> on the variable <literal>varname</literal>"
" and the mesh region <literal>region</literal>."
msgstr ""
"変数 <literal>varname</literal> とメッシュ領域 <literal>region</literal> "
"に通常の微分ソース項ブリック <latex style=\"text\"><![CDATA[F = \\int b.\\partial_n "
"v]]></latex> を追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1301
msgid ""
"Update the right hand side of the linear system. <literal>dataname</literal>"
" represents <literal>b</literal> and <literal>varname</literal> represents "
"<literal>v</literal>. Return the brick index in the model."
msgstr ""
"線形システムの右辺を更新します． <literal>dataname</literal> は <literal>b</literal> を表し，  "
"<literal>varname</literal> は <literal>v</literal> "
"を表します．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1306
msgid ""
"``ind = gf_model_set(model M, 'add Kirchhoff-Love Neumann term brick', "
"mesh_im mim, string varname, string dataname_M, string dataname_divM, int "
"region)``"
msgstr ""
"``ind = gf_model_set(model M, 'add Kirchhoff-Love Neumann term brick', "
"mesh_im mim, string varname, string dataname_M, string dataname_divM, int "
"region)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1308
msgid ""
"Add a Neumann term brick for Kirchhoff-Love model on the variable "
"<literal>varname</literal> and the mesh region <literal>region</literal>. "
"<literal>dataname_M</literal> represents the bending moment tensor and  "
"<literal>dataname_divM</literal> its divergence. Return the brick index in "
"the model."
msgstr ""
"変数  <literal>varname</literal> とメッシュ領域 <literal>region</literal> にKirchhoff-"
"LoveモデルのNeumann項ブリックを追加します． <literal>dataname_M</literal> は曲げモーメントテンソルを表し， "
"<literal>dataname_divM</literal> はその発散を表します．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1315
msgid ""
"``ind = gf_model_set(model M, 'add normal derivative Dirichlet condition "
"with multipliers', mesh_im mim, string varname, mult_description, int region"
" [, string dataname, int R_must_be_derivated])``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal derivative Dirichlet condition "
"with multipliers', mesh_im mim, string varname, mult_description, int region"
" [, string dataname, int R_must_be_derivated])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1317
msgid ""
"Add a Dirichlet condition on the normal derivative of the variable "
"<literal>varname</literal> and on the mesh region <literal>region</literal> "
"(which should be a boundary). The general form is <latex "
"style=\"text\"><![CDATA[\\int \\partial_n u(x)v(x) = \\int r(x)v(x) \\forall"
" v]]></latex> where <latex style=\"text\"><![CDATA[r(x)]]></latex> is the "
"right hand side for the Dirichlet condition (0 for homogeneous conditions) "
"and <latex style=\"text\"><![CDATA[v]]></latex> is in a space of multipliers"
" defined by <literal>mult_description</literal>. If "
"<literal>mult_description</literal> is a string this is assumed to be the "
"variable name corresponding to the multiplier (which should be first "
"declared as a multiplier variable on the mesh region in the model). If it is"
" a finite element method (mesh_fem object) then a multiplier variable will "
"be added to the model and build on this finite element method (it will be "
"restricted to the mesh region <literal>region</literal> and eventually some "
"conflicting dofs with some other multiplier variables will be suppressed). "
"If it is an integer, then a  multiplier variable will be added to the model "
"and build on a classical finite element of degree that integer. "
"<literal>dataname</literal> is an optional parameter which represents the "
"right hand side of the Dirichlet condition. If "
"<literal>R_must_be_derivated</literal> is set to <literal>true</literal> "
"then the normal derivative of <literal>dataname</literal> is considered. "
"Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> の法線導関数とメッシュ領域 <literal>region</literal> "
"(境界である必要があります）にDirichlet条件を追加します．一般的な形式は以下の通りである<latex "
"style=\"text\"><![CDATA[\\int \\partial_n u(x)v(x) = \\int r(x)v(x) \\forall"
" v]]></latex>ここで， <latex style=\"text\"><![CDATA[r(x)]]></latex> "
"はDirichlet条件(均一条件の場合は0)の右辺であり，<latex style=\"text\"><![CDATA[v]]></latex>は "
"<literal>mult_description</literal> で定義される乗数の空間にある． "
"<literal>mult_description</literal> "
"が文字列の場合は，乗数(これは，最初にモデルのメッシュ領域で乗数変数として宣言する必要があります)に対応する変数名と見なされます．有限要素法(mesh_femオブジェクト)の場合は，乗数変数がモデルに追加され，この有限要素法(メッシュ領域"
"  <literal>region</literal> "
"に制限され，最終的に他の乗数変数との自由度の競合が抑制されます)に基づいて構築されます．整数の場合は，乗数変数がモデルに追加され，その整数の次数の従来の有限要素に基づいて構築されます．"
" <literal>dataname</literal> はDirichlet条件の右辺を表すオプションのパラメータです．もし "
"<literal>R_must_be_derivated</literal> が <literal>true</literal> に設定されていれば， "
"<literal>dataname</literal> の正規導関数が考慮されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1341
msgid ""
"``ind = gf_model_set(model M, 'add normal derivative Dirichlet condition "
"with penalization', mesh_im mim, string varname, scalar coeff, int region [,"
" string dataname, int R_must_be_derivated])``"
msgstr ""
"``ind = gf_model_set(model M, 'add normal derivative Dirichlet condition "
"with penalization', mesh_im mim, string varname, scalar coeff, int region [,"
" string dataname, int R_must_be_derivated])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1343
msgid ""
"Add a Dirichlet condition on the normal derivative of the variable "
"<literal>varname</literal> and on the mesh region <literal>region</literal> "
"(which should be a boundary). The general form is <latex "
"style=\"text\"><![CDATA[\\int \\partial_n u(x)v(x) = \\int r(x)v(x) \\forall"
" v]]></latex> where <latex style=\"text\"><![CDATA[r(x)]]></latex> is the "
"right hand side for the Dirichlet condition (0 for homogeneous conditions). "
"The penalization coefficient is initially <literal>coeff</literal> and will "
"be added to the data of the model. It can be changed with the command "
"gf_model_set(model M, 'change penalization coeff'). "
"<literal>dataname</literal> is an optional parameter which represents the "
"right hand side of the Dirichlet condition. If "
"<literal>R_must_be_derivated</literal> is set to <literal>true</literal> "
"then the normal derivative of <literal>dataname</literal> is considered. "
"Return the brick index in the model."
msgstr ""
"変数 <literal>varname</literal> の法線導関数とメッシュ領域 <literal>region</literal>  "
"(境界である必要があります）にDirichlet条件を追加します．一般的な形式は以下の通りです <latex "
"style=\"text\"><![CDATA[\\int \\partial_n u(x)v(x) = \\int r(x)v(x) \\forall"
" v]]></latex> ここで <latex style=\"text\"><![CDATA[r(x)]]></latex> "
"はDirichlet条件(均一条件の場合は0)の右辺です．ペナルティ係数は最初は <literal>coeff</literal> "
"であり，モデルのデータに追加されます．これは， gf_model_set(model M, 'change penalization coeff') "
"コマンドで変更できます． <literal>dataname</literal> はDirichlet条件の右辺を表すオプションのパラメータです．もし "
"<literal>R_must_be_derivated</literal> が <literal>true</literal> に設定されていれば，"
"  <literal>dataname</literal> の正規導関数が考慮されます．モデル内のブリックインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1360
msgid ""
"``ind = gf_model_set(model M, 'add Mindlin Reissner plate brick', mesh_im "
"mim, mesh_im mim_reduced, string varname_u3, string varname_theta , string "
"param_E, string param_nu, string param_epsilon, string param_kappa [,int "
"variant [, int region]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Mindlin Reissner plate brick', mesh_im "
"mim, mesh_im mim_reduced, string varname_u3, string varname_theta , string "
"param_E, string param_nu, string param_epsilon, string param_kappa [,int "
"variant [, int region]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1362
msgid ""
"Add a term corresponding to the classical Reissner-Mindlin plate model for "
"which <literal>varname_u3</literal> is the transverse displacement, "
"<literal>varname_theta</literal> the rotation of fibers normal to the "
"midplane, 'param_E' the Young Modulus, <literal>param_nu</literal> the "
"poisson ratio, <literal>param_epsilon</literal> the plate thickness, "
"<literal>param_kappa</literal> the shear correction factor. Note that since "
"this brick uses the high level generic assembly language, the parameter can "
"be regular expression of this language. There are three variants. "
"<literal>variant = 0</literal> corresponds to the an unreduced formulation "
"and in that case only the integration method <literal>mim</literal> is used."
" Practically this variant is not usable since it is subject to a strong "
"locking phenomenon. <literal>variant = 1</literal> corresponds to a reduced "
"integration where <literal>mim</literal> is used for the rotation term and "
"<literal>mim_reduced</literal> for the transverse shear term. "
"<literal>variant = 2</literal> (default) corresponds to the projection onto "
"a rotated RT0 element of the transverse shear term. For the moment, this is "
"adapted to quadrilateral only (because it is not sufficient to remove the "
"locking phenomenon on triangle elements). Note also that if you use high "
"order elements, the projection on RT0 will reduce the order of the "
"approximation. Returns the brick index in the model."
msgstr ""
"古典的なReissner-Mindlinプレートモデルに対応する項を追加します．ここで， <literal>varname_u3</literal> "
"は横方向の変位， <literal>varname_theta</literal> は中立面に垂直なファイバーの回転， 'param_E' はヤング率，"
" <literal>param_nu</literal> はポアソン比， <literal>param_epsilon</literal> "
"はプレートの厚さ， <literal>param_kappa</literal> "
"はせん断補正係数です．このブリックは高水準汎用アセンブリ言語を使用しているため，パラメータをこの言語の正規表現にすることができます．3つのバリエーションがあります．"
" <literal>variant = 0</literal> は非簡約化された定式化に対応し，その場合には積分法 "
"<literal>mim</literal> のみが使用されます．実際には，この変形は強いロック現象の影響を受けるため，使用できません． "
"<literal>variant = 1</literal> は， <literal>mim</literal> が回転項に使用され， "
"<literal>mim_reduced</literal> が横せん断項に使用される縮約積分に対応します． <literal>variant = "
"2</literal> "
"(デフォルト)は，横せん断項の回転RT0要素への投影に対応します．現時点では，(三角形要素のロック現象を除去するだけでは不十分であるため)四角形のみに適用されます．また，高次要素を使用する場合，RT0への投影によって近似の次数が減少することにも注意してください．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1388
msgid ""
"``ind = gf_model_set(model M, 'add enriched Mindlin Reissner plate brick', "
"mesh_im mim, mesh_im mim_reduced1, mesh_im mim_reduced2, string varname_ua, "
"string varname_theta,string varname_u3, string varname_theta3 , string "
"param_E, string param_nu, string param_epsilon [,int variant [, int "
"region]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add enriched Mindlin Reissner plate brick', "
"mesh_im mim, mesh_im mim_reduced1, mesh_im mim_reduced2, string varname_ua, "
"string varname_theta,string varname_u3, string varname_theta3 , string "
"param_E, string param_nu, string param_epsilon [,int variant [, int "
"region]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1390
msgid ""
"Add a term corresponding to the enriched Reissner-Mindlin plate model for "
"which <literal>varname_ua</literal> is the membrane displacements, "
"<literal>varname_u3</literal> is the transverse displacement, "
"<literal>varname_theta</literal> the rotation of fibers normal to the "
"midplane, <literal>varname_theta3</literal> the pinching, 'param_E' the "
"Young Modulus, <literal>param_nu</literal> the poisson ratio, "
"<literal>param_epsilon</literal> the plate thickness. Note that since this "
"brick uses the high level generic assembly language, the parameter can be "
"regular expression of this language. There are four variants. "
"<literal>variant = 0</literal> corresponds to the an unreduced formulation "
"and in that case only the integration method <literal>mim</literal> is used."
" Practically this variant is not usable since it is subject to a strong "
"locking phenomenon. <literal>variant = 1</literal> corresponds to a reduced "
"integration where <literal>mim</literal> is used for the rotation term and "
"<literal>mim_reduced1</literal> for the transverse shear term and "
"<literal>mim_reduced2</literal> for the pinching term. <literal>variant = "
"2</literal> (default) corresponds to the projection onto a rotated RT0 "
"element of the transverse shear term and a reduced integration for the "
"pinching term. For the moment, this is adapted to quadrilateral only "
"(because it is not sufficient to remove the locking phenomenon on triangle "
"elements). Note also that if you use high order elements, the projection on "
"RT0 will reduce the order of the approximation. <literal>variant = "
"3</literal> corresponds to the projection onto a rotated RT0 element of the "
"transverse shear term and the projection onto P0 element of the pinching "
"term. For the moment, this is adapted to quadrilateral only (because it is "
"not sufficient to remove the locking phenomenon on triangle elements). Note "
"also that if you use high order elements, the projection on RT0 will reduce "
"the order of the approximation. Returns the brick index in the model."
msgstr ""
"enriched Reissner-Mindlinプレートモデルに対応する項を追加します．ここで， "
"<literal>varname_ua</literal> は膜変位， <literal>varname_u3</literal> は横変位， "
"<literal>varname_theta</literal> は中間平面に垂直なファイバーの回転， "
"<literal>varname_theta3</literal> はピンチ， 'param_E' "
"はYoung率，<literal>param_nu</literal> はPoisson比， "
"<literal>param_epsilon</literal> "
"は板厚です．このブリックは高水準汎用アセンブリ言語を使用しているため，パラメータをこの言語の正規表現にすることができます．4つのバリエーションがあります．"
" <literal>variant = 0</literal> は非簡約化された定式化に対応し，その場合には積分法 "
"<literal>mim</literal> のみが使用されます．実際には，この変形は強いロック現象の影響を受けるため，使用できません． "
"<literal>variant = 1</literal> は，<literal>mim</literal> が回転項に使用され， "
"<literal>mim_reduced1</literal> が横せん断項に使用され， <literal>mim_reduced2</literal>"
" がピンチ項に使用される縮約積分に対応します． <literal>variant = 2</literal> "
"(デフォルト)は，横せん断項の回転RT0要素上への投影と，ピンチ項の縮約積分に対応します．現時点では，(三角形要素のロック現象を除去するだけでは不十分であるため)四角形のみに適用されます．また，高次要素を使用する場合，RT0への投影によって近似の次数が減少することにも注意してください．"
" <literal>variant = 3</literal> "
"は，横せん断項の回転RT0要素への投影と，ピンチ項のP0要素への投影とに対応します．現時点では，(三角形要素のロック現象を除去するだけでは不十分であるため)四角形のみに適用されます．また，高次要素を使用する場合，RT0への投影によって近似の次数が減少することにも注意してください．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1425
msgid ""
"``ind = gf_model_set(model M, 'add mass brick', mesh_im mim, string "
"varname[, string dataexpr_rho[, int region]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add mass brick', mesh_im mim, string "
"varname[, string dataexpr_rho[, int region]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1427
msgid ""
"Add mass term to the model relatively to the variable "
"<literal>varname</literal>. If specified, the data "
"<literal>dataexpr_rho</literal> is the density (1 if omitted). "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model."
msgstr ""
"変数 <literal>varname</literal> に対して質量項をモデルに追加します．指定された場合，データ "
"<literal>dataexpr_rho</literal> は密度(省略した場合は1)です． <literal>region</literal> "
"は，項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1434
msgid ""
"``ind = gf_model_set(model M, 'add lumped mass for first order brick', "
"mesh_im mim, string varname[, string dataexpr_rho[, int region]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add lumped mass for first order brick', "
"mesh_im mim, string varname[, string dataexpr_rho[, int region]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1436
msgid ""
"Add lumped mass for first order term to the model relatively to the variable"
" <literal>varname</literal>. If specified, the data "
"<literal>dataexpr_rho</literal> is the density (1 if omitted). "
"<literal>region</literal> is an optional mesh region on which the term is "
"added. If it is not specified, it is added on the whole mesh. Return the "
"brick index in the model."
msgstr ""
"変数 <literal>varname</literal> に対して1次の集中質量項をモデルに追加します．指定された場合，データ "
"<literal>dataexpr_rho</literal> は密度(省略した場合は1)です． <literal>region</literal> "
"は，項が追加されるオプションのメッシュ領域です．指定しない場合は，メッシュ全体に追加されます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1443
msgid "``gf_model_set(model M, 'shift variables for time integration')``"
msgstr "``gf_model_set(model M, 'shift variables for time integration')``"

#: ../source/scilab/cmdref_gf_model_set.rst:1445
msgid ""
"Function used to shift the variables of a model to the data corresponding of"
" ther value on the previous time step for time integration schemes. For each"
" variable for which a time integration scheme has been declared, the scheme "
"is called to perform the shift. This function has to be called between two "
"time steps."
msgstr ""
"モデルの変数を，時間積分スキームの前の時間ステップの他の値に対応するデータにシフトするために使用される関数です．時間積分スキームが宣言されている変数ごとに，スキームが呼び出されてシフトが実行されます．この関数は，2つのタイムステップの間に呼び出す必要があります．"

#: ../source/scilab/cmdref_gf_model_set.rst:1452
msgid "``gf_model_set(model M, 'perform init time derivative', scalar ddt)``"
msgstr "``gf_model_set(model M, 'perform init time derivative', scalar ddt)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1454
msgid ""
"By calling this function, indicates that the next solve will compute the "
"solution for a (very) small time step <literal>ddt</literal> in order to "
"initalize the data corresponding to the derivatives needed by time "
"integration schemes (mainly the initial time derivative for order one in "
"time problems  and the second order time derivative for second order in time"
" problems). The next solve will not change the value of the variables."
msgstr ""
"この関数を呼び出すことにより，時間積分スキームによって必要とされる導関数に対応するデータを初期化するためには，次の求解が(非常に)小さな時間ステップ<literal>ddt</literal>(主に時間問題では1次の初期時間微分，時間問題では2次の2次時間微分)の解を計算することを示します．次の求解では，変数の値は変更されません．"

#: ../source/scilab/cmdref_gf_model_set.rst:1462
msgid "``gf_model_set(model M, 'set time step', scalar dt)``"
msgstr "``gf_model_set(model M, 'set time step', scalar dt)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1464
msgid ""
"Set the value of the time step to <literal>dt</literal>. This value can be "
"change from a step to another for all one-step schemes (i.e. for the moment "
"to all proposed time integration schemes)."
msgstr ""
"時間ステップの値を <literal>dt</literal> "
"に設定します．この値は，すべてのワンステップスキームでステップから別のステップに変更できます(すなわち現時点では，提案されているすべての時間積分法)．"

#: ../source/scilab/cmdref_gf_model_set.rst:1469
msgid "``gf_model_set(model M, 'set time', scalar t)``"
msgstr "``gf_model_set(model M, 'set time', scalar t)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1471
msgid ""
"Set the value of the data <literal>t</literal> corresponding to the current "
"time to <literal>t</literal>."
msgstr "現在時刻 <literal>t</literal> に対応するデータの値を <literal>t</literal> に設定します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1475
msgid ""
"``gf_model_set(model M, 'add theta method for first order', string varname, "
"scalar theta)``"
msgstr ""
"``gf_model_set(model M, 'add theta method for first order', string varname, "
"scalar theta)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1477
msgid ""
"Attach a theta method for the time discretization of the variable "
"<literal>varname</literal>. Valid only if there is at most first order time "
"derivative of the variable."
msgstr ""
"変数 <literal>varname</literal> "
"の時間離散化にtheta法を適用します．変数の最大でも1次の時間導関数が存在する場合にのみ有効です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1482
msgid ""
"``gf_model_set(model M, 'add theta method for second order', string varname,"
" scalar theta)``"
msgstr ""
"``gf_model_set(model M, 'add theta method for second order', string varname,"
" scalar theta)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1484
#: ../source/scilab/cmdref_gf_model_set.rst:1491
msgid ""
"Attach a theta method for the time discretization of the variable "
"<literal>varname</literal>. Valid only if there is at most second order time"
" derivative of the variable."
msgstr ""
"変数 "
"<literal>varname</literal>の時間離散化にtheta法を適用します．変数の2次時間導関数が多くても存在する場合にのみ有効です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1489
msgid ""
"``gf_model_set(model M, 'add Newmark scheme', string varname, scalar beta, "
"scalar gamma)``"
msgstr ""
"``gf_model_set(model M, 'add Newmark scheme', string varname, scalar beta, "
"scalar gamma)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1496
msgid "``gf_model_set(model M, 'add_Houbolt_scheme', string varname)``"
msgstr "``gf_model_set(model M, 'add_Houbolt_scheme', string varname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1498
msgid ""
"Attach a Houbolt method for the time discretization of the variable "
"<literal>varname</literal>. Valid only if there is at most second order time"
" derivative of the variable"
msgstr ""
"変数 "
"<literal>varname</literal>の時間離散化にHoubolt法を適用します．変数の2次時間導関数が多くても存在する場合にのみ有効です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1503
msgid "``gf_model_set(model M, 'disable bricks', ivec bricks_indices)``"
msgstr "``gf_model_set(model M, 'disable bricks', ivec bricks_indices)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1505
msgid ""
"Disable a brick (the brick will no longer participate to the building of the"
" tangent linear system)."
msgstr "ブリックを無効にします(ブリックは接線線形システムの構築に関与しなくなります)．"

#: ../source/scilab/cmdref_gf_model_set.rst:1509
msgid "``gf_model_set(model M, 'enable bricks', ivec bricks_indices)``"
msgstr "``gf_model_set(model M, 'enable bricks', ivec bricks_indices)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1511
msgid "Enable a disabled brick."
msgstr "無効なブリックを有効にします．"

#: ../source/scilab/cmdref_gf_model_set.rst:1514
msgid "``gf_model_set(model M, 'disable variable', string varname)``"
msgstr "``gf_model_set(model M, 'disable variable', string varname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1516
msgid ""
"Disable a variable for a solve (and its attached multipliers). The next "
"solve will operate only on the remaining variables. This allows to solve "
"separately different parts of a model. If there is a strong coupling of the "
"variables, a fixed point strategy can the be used."
msgstr ""
"求解のため変数(とその添付乗数)を使用不可にします．次の求解は，残りの変数に対してのみ実行されます．これにより，モデルの異なる部分を別々に求解できます．変数の強連成がある場合は，固定小数点方式を使用できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1523
msgid "``gf_model_set(model M, 'enable variable', string varname)``"
msgstr "``gf_model_set(model M, 'enable variable', string varname)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1525
msgid "Enable a disabled variable (and its attached multipliers)."
msgstr "使用不可の変数(と付属の乗数)を使用可能にします．"

#: ../source/scilab/cmdref_gf_model_set.rst:1528
msgid "``gf_model_set(model M, 'first iter')``"
msgstr "``gf_model_set(model M, 'first iter')``"

#: ../source/scilab/cmdref_gf_model_set.rst:1530
msgid ""
"To be executed before the first iteration of a time integration scheme."
msgstr "時間積分スキームの最初の反復の前に実行します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1534
msgid "``gf_model_set(model M, 'next iter')``"
msgstr "``gf_model_set(model M, 'next iter')``"

#: ../source/scilab/cmdref_gf_model_set.rst:1536
msgid ""
"To be executed at the end of each iteration of a time integration scheme."
msgstr "時間積分スキームの各反復の終了時に実行されます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1540
msgid ""
"``ind = gf_model_set(model M, 'add basic contact brick', string varname_u, "
"string multname_n[, string multname_t], string dataname_r, spmat BN[, spmat "
"BT, string dataname_friction_coeff][, string dataname_gap[, string "
"dataname_alpha[, int augmented_version[, string dataname_gamma, string "
"dataname_wt]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add basic contact brick', string varname_u, "
"string multname_n[, string multname_t], string dataname_r, spmat BN[, spmat "
"BT, string dataname_friction_coeff][, string dataname_gap[, string "
"dataname_alpha[, int augmented_version[, string dataname_gamma, string "
"dataname_wt]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1542
msgid ""
"Add a contact with or without friction brick to the model. If U is the "
"vector of degrees of freedom on which the unilateral constraint is applied, "
"the matrix <literal>BN</literal> have to be such that this constraint is "
"defined by <latex style=\"text\"><![CDATA[B_N U \\le 0]]></latex>. A "
"friction condition can be considered by adding the three parameters "
"<literal>multname_t</literal>, <literal>BT</literal> and "
"<literal>dataname_friction_coeff</literal>. In this case, the tangential "
"displacement is <latex style=\"text\"><![CDATA[B_T U]]></latex> and the "
"matrix <literal>BT</literal> should have as many rows as "
"<literal>BN</literal> multiplied by <latex "
"style=\"text\"><![CDATA[d-1]]></latex> where <latex "
"style=\"text\"><![CDATA[d]]></latex> is the domain dimension. In this case "
"also, <literal>dataname_friction_coeff</literal> is a data which represents "
"the coefficient of friction. It can be a scalar or a vector representing a "
"value on each contact condition.  The unilateral constraint is prescribed "
"thank to a multiplier <literal>multname_n</literal> whose dimension should "
"be equal to the number of rows of <literal>BN</literal>. If a friction "
"condition is added, it is prescribed with a multiplier "
"<literal>multname_t</literal> whose dimension should be equal to the number "
"of rows of <literal>BT</literal>. The augmentation parameter "
"<literal>r</literal> should be chosen in a range of acceptabe values (see "
"Getfem user documentation). <literal>dataname_gap</literal> is an optional "
"parameter representing the initial gap. It can be a single value or a vector"
" of value. <literal>dataname_alpha</literal> is an optional homogenization "
"parameter for the augmentation parameter (see Getfem user documentation).  "
"The parameter <literal>augmented_version</literal> indicates the "
"augmentation strategy : 1 for the non-symmetric Alart-Curnier augmented "
"Lagrangian, 2 for the symmetric one (except for the coupling between contact"
" and Coulomb friction), 3 for the unsymmetric method with augmented "
"multipliers, 4 for the unsymmetric method with augmented multipliers and De "
"Saxce projection."
msgstr ""
"摩擦ブリック付きまたは摩擦ブリックなしの接触をモデルに追加します．Uが，片側拘束が適用される自由度のベクトルである場合，行列  "
"<literal>BN</literal> はこの拘束が <latex style=\"text\"><![CDATA[B_N U \\le "
"0]]></latex>によって定義されるようでなければなりません．摩擦条件は，3つのパラメータ "
"<literal>multname_t</literal> ， <literal>BT</literal>  ， "
"<literal>dataname_friction_coeff</literal> を追加することで考慮できます．この場合，接線変位は <latex "
"style=\"text\"><![CDATA[B_T U]]></latex> であり，行列 <literal>BT</literal> は， "
"<literal>BN</literal> に <latex style=\"text\"><![CDATA[d-1]]></latex> "
"を掛けた数だけの行を持たなければなります．ここで，<latex "
"style=\"text\"><![CDATA[d]]></latex>はドメインの次元です．ここでも， "
"<literal>dataname_friction_coeff</literal> "
"は摩擦係数を表すデータです．各接触条件の値を表すスカラーまたはベクトルです．一方的制約は，その次元が <literal>BN</literal> "
"の行数に等しくなければならない乗算器 <literal>multname_n</literal> "
"のおかげで規定される．摩擦条件が追加される場合には，その次元が <literal>BT</literal> の行数に等しくなければならない乗算器 "
"<literal>multname_t</literal> によって規定されます．拡張パラメータ <literal>r</literal> "
"は許容値(Getfemユーザマニュアルを参照)の範囲内で選択するべきです． <literal>dataname_gap</literal> "
"は初期ギャップを表すオプションのパラメータです．単一の値または値のベクトルを指定できます． "
"<literal>dataname_alpha</literal> "
"は増大パラメータ(Getfemユーザマニュアルを参照)のためのオプションの均質化パラメータである．パラメータ "
"<literal>augmented_version</literal> は拡大戦略を示します．1は非対称Alart-"
"Curnier拡大ラグランジアン，2は対称的なもの(接触とCoulomb摩擦の結合を除きます)，3は拡大乗算器を用いた非対称方法，4は拡大乗算器と De"
" Saxce 射影を用いた非対称方法です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1572
msgid ""
"``ind = gf_model_set(model M, 'add basic contact brick two deformable "
"bodies', string varname_u1, string varname_u2, string multname_n, string "
"dataname_r, spmat BN1, spmat BN2[, string dataname_gap[, string "
"dataname_alpha[, int augmented_version]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add basic contact brick two deformable "
"bodies', string varname_u1, string varname_u2, string multname_n, string "
"dataname_r, spmat BN1, spmat BN2[, string dataname_gap[, string "
"dataname_alpha[, int augmented_version]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1591
msgid ""
"Add a frictionless contact condition to the model between two deformable"
msgstr "2つの変形可能モデル間に摩擦なし接触条件を追加します"

#: ../source/scilab/cmdref_gf_model_set.rst:1575
msgid ""
"bodies. If U1, U2 are the vector of degrees of freedom on which the "
"unilateral constraint is applied, the matrices <literal>BN1</literal> and "
"<literal>BN2</literal> have to be such that this condition is defined by "
"$B_{N1} U_1 B_{N2} U_2 + \\le gap$. The constraint is prescribed thank to a "
"multiplier <literal>multname_n</literal> whose dimension should be equal to "
"the number of lines of <literal>BN</literal>. The augmentation parameter "
"<literal>r</literal> should be chosen in a range of acceptabe values (see "
"Getfem user documentation). <literal>dataname_gap</literal> is an optional "
"parameter representing the initial gap. It can be a single value or a vector"
" of value. <literal>dataname_alpha</literal> is an optional homogenization "
"parameter for the augmentation parameter (see Getfem user documentation). "
"The parameter <literal>aug_version</literal> indicates the augmentation "
"strategy : 1 for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for"
" the symmetric one, 3 for the unsymmetric method with augmented multiplier."
msgstr ""
"体．U1，U2が片側拘束が適用される自由度のベクトルである場合，行列 <literal>BN1</literal> および "
"<literal>BN2</literal> は，この条件が $B_{N1} U_1 B_{N2} U_2 + \\le gap$ "
"によって定義されるようでなければならない．この制約は，次元が <literal>BN</literal> の行数に等しくなければならない乗数 "
"<literal>multname_n</literal> によって規定されます．拡張パラメータ <literal>r</literal> "
"は許容値(Getfemユーザマニュアルを参照)の範囲内で選択されるべきです． <literal>dataname_gap</literal> "
"は初期ギャップを表すオプションのパラメータです．単一の値または値のベクトルを指定できます． "
"<literal>dataname_alpha</literal> "
"は，増大パラメータ(Getfemユーザマニュアルを参照)のためのオプションの均質化パラメータである．パラメータ "
"<literal>aug_version</literal> は拡大法を示します．1は非対称Alart-"
"Curnier拡大Lagrangian，2は対称Lagrangian，3は拡大乗数を伴う非対称法です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1593
msgid ""
"``gf_model_set(model M, 'contact brick set BN', int indbrick, spmat BN)``"
msgstr ""
"``gf_model_set(model M, 'contact brick set BN', int indbrick, spmat BN)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1595
msgid "Can be used to set the BN matrix of a basic contact/friction brick."
msgstr "基本的な接触/摩擦ブリックのBNマトリックスの設定に使用できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1598
msgid ""
"``gf_model_set(model M, 'contact brick set BT', int indbrick, spmat BT)``"
msgstr ""
"``gf_model_set(model M, 'contact brick set BT', int indbrick, spmat BT)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1600
msgid ""
"Can be used to set the BT matrix of a basic contact with friction brick."
msgstr "摩擦ブリックとの基本接触のBTマトリックスの設定に使用できます．"

#: ../source/scilab/cmdref_gf_model_set.rst:1604
msgid ""
"``ind = gf_model_set(model M, 'add nodal contact with rigid obstacle brick',"
"  mesh_im mim, string varname_u, string multname_n[, string multname_t], "
"string dataname_r[, string dataname_friction_coeff], int region, string "
"obstacle[,  int augmented_version])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nodal contact with rigid obstacle brick',"
"  mesh_im mim, string varname_u, string multname_n[, string multname_t], "
"string dataname_r[, string dataname_friction_coeff], int region, string "
"obstacle[,  int augmented_version])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1606
msgid ""
"Add a contact with or without friction condition with a rigid obstacle to "
"the model. The condition is applied on the variable "
"<literal>varname_u</literal> on the boundary corresponding to "
"<literal>region</literal>. The rigid obstacle should be described with the "
"string <literal>obstacle</literal> being a signed distance to the obstacle. "
"This string should be an expression where the coordinates are 'x', 'y' in 2D"
" and 'x', 'y', 'z' in 3D. For instance, if the rigid obstacle correspond to "
"<latex style=\"text\"><![CDATA[z \\le 0]]></latex>, the corresponding signed"
" distance will be simply \"z\". <literal>multname_n</literal> should be a "
"fixed size variable whose size is the number of degrees of freedom on "
"boundary <literal>region</literal>. It represents the contact equivalent "
"nodal forces. In order to add a friction condition one has to add the "
"<literal>multname_t</literal> and <literal>dataname_friction_coeff</literal>"
" parameters. <literal>multname_t</literal> should be a fixed size variable "
"whose size is the number of degrees of freedom on boundary "
"<literal>region</literal> multiplied by <latex "
"style=\"text\"><![CDATA[d-1]]></latex> where <latex "
"style=\"text\"><![CDATA[d]]></latex> is the domain dimension. It represents "
"the friction equivalent nodal forces. The augmentation parameter "
"<literal>r</literal> should be chosen in a range of acceptabe values (close "
"to the Young modulus of the elastic body, see Getfem user documentation).  "
"<literal>dataname_friction_coeff</literal> is the friction coefficient. It "
"could be a scalar or a vector of values representing the friction "
"coefficient on each contact node. The parameter "
"<literal>augmented_version</literal> indicates the augmentation strategy : 1"
" for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the "
"symmetric one (except for the coupling between contact and Coulomb "
"friction), 3 for the new unsymmetric method. Basically, this brick compute "
"the matrix BN and the vectors gap and alpha and calls the basic contact "
"brick."
msgstr ""
"摩擦条件の有無にかかわらず，剛体障害物のある接触をモデルに追加します．条件は， <literal>region</literal> "
"に対応する境界上の変数 <literal>varname_u</literal> に適用されます．剛障害物は，障害物への符号付き距離である文字列 "
"<literal>obstacle</literal> で記述します．この文字列は，座標が2次元では 'x'， 'y' ，3次元では'x'， 'y'， "
"'z' の式である必要があります．たとえば，障害物が <latex style=\"text\"><![CDATA[z \\le "
"0]]></latex> に対応する場合，対応する符号付き距離は単に \"z\" になります． "
"<literal>multname_n</literal> はサイズが境界 <literal>region</literal> "
"の自由度数である固定サイズ変数でなければなりません．これは接触等価節点力を表します．摩擦条件を追加するには，  "
"<literal>multname_t</literal> および <literal>dataname_friction_coeff</literal>"
" パラメータを追加する必要があります．<literal>multname_t</literal> "
"は固定サイズの変数でなければならず，そのサイズは境界<literal>region</literal> 上の自由度の数に <latex "
"style=\"text\"><![CDATA[d-1]]></latex> を乗じたものである．ここで <latex "
"style=\"text\"><![CDATA[d]]></latex> は領域の次元です．これは摩擦相当節点力を表します．拡張パラメータ "
"<literal>r</literal> "
"は許容値(弾性体のYoung率に近い値．Getfemのユーザードキュメントを参照)の範囲内で選択される必要があります．<literal>dataname_friction_coeff</literal>"
" は摩擦係数です．各接触節点の摩擦係数を表すスカラー値または値のベクトルです．パラメータ "
"<literal>augmented_version</literal> は拡大戦略を示します: 1は非対称のAlart-"
"Curnier拡張Lagrangian，2は対称(接触とCoulomb摩擦の結合を除く)，3は新しい非対称方法です．基本的に，このブリックは行列BNおよびベクトルgapおよびalphaを計算し，基本接触ブリックを呼び出します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1635
msgid ""
"``ind = gf_model_set(model M, 'add contact with rigid obstacle brick',  "
"mesh_im mim, string varname_u, string multname_n[, string multname_t], "
"string dataname_r[, string dataname_friction_coeff], int region, string "
"obstacle[,  int augmented_version])``"
msgstr ""
"``ind = gf_model_set(model M, 'add contact with rigid obstacle brick',  "
"mesh_im mim, string varname_u, string multname_n[, string multname_t], "
"string dataname_r[, string dataname_friction_coeff], int region, string "
"obstacle[,  int augmented_version])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1637
msgid ""
"DEPRECATED FUNCTION. Use 'add nodal contact with rigid obstacle brick' "
"instead."
msgstr "非推奨機能です．代わりに 'add nodal contact with rigid obstacle brick' を使用してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:1640
msgid ""
"``ind = gf_model_set(model M, 'add integral contact with rigid obstacle "
"brick',  mesh_im mim, string varname_u, string multname, string "
"dataname_obstacle, string dataname_r [, string dataname_friction_coeff], int"
" region [, int option [, string dataname_alpha [, string dataname_wt [, "
"string dataname_gamma [, string dataname_vt]]]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add integral contact with rigid obstacle "
"brick',  mesh_im mim, string varname_u, string multname, string "
"dataname_obstacle, string dataname_r [, string dataname_friction_coeff], int"
" region [, int option [, string dataname_alpha [, string dataname_wt [, "
"string dataname_gamma [, string dataname_vt]]]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1642
msgid ""
"Add a contact with or without friction condition with a rigid obstacle to "
"the model. This brick adds a contact which is defined in an integral way. It"
" is the direct approximation of an augmented Lagrangian formulation (see "
"Getfem user documentation) defined at the continuous level. The advantage is"
" a better scalability: the number of Newton iterations should be more or "
"less independent of the mesh size. The contact condition is applied on the "
"variable <literal>varname_u</literal> on the boundary corresponding to "
"<literal>region</literal>. The rigid obstacle should be described with the "
"data <literal>dataname_obstacle</literal> being a signed distance to the "
"obstacle (interpolated on a finite element method). "
"<literal>multname</literal> should be a fem variable representing the "
"contact stress. An inf-sup condition beetween <literal>multname</literal> "
"and <literal>varname_u</literal> is required. The augmentation parameter "
"<literal>dataname_r</literal> should be chosen in a range of acceptabe "
"values. The optional parameter <literal>dataname_friction_coeff</literal> is"
" the friction coefficient which could be constant or defined on a finite "
"element method. Possible values for <literal>option</literal> is 1 for the "
"non-symmetric Alart-Curnier augmented Lagrangian method, 2 for the symmetric"
" one, 3 for the non-symmetric Alart-Curnier method with an additional "
"augmentation and 4 for a new unsymmetric method. The default value is 1. In "
"case of contact with friction, <literal>dataname_alpha</literal> and "
"<literal>dataname_wt</literal> are optional parameters to solve evolutionary"
" friction problems. <literal>dataname_gamma</literal> and "
"<literal>dataname_vt</literal> represent optional data for adding a "
"parameter-dependent sliding velocity to the friction condition."
msgstr ""
"摩擦条件の有無にかかわらず，剛体障害物のある接触をモデルに追加します．このブリックは，完全な方法で定義された接触を追加します．これは連続レベルで定義された拡張Lagrangian定式化(Getfemユーザマニュアルを参照)の直接近似である．利点は拡張性が高いことです．ニュートン法の反復回数は，メッシュサイズに多少依存しません．接触条件は"
" <literal>region</literal> に対応する境界上の変数 <literal>varname_u</literal> "
"に適用されます．剛体障害物は，データ <literal>dataname_obstacle</literal> "
"が障害物までの符号付き距離(有限要素法による補間)で記述されるべきである． <literal>multname</literal> "
"は接触応力を表す有限要素法変数でなければなりません． <literal>multname</literal> と "
"<literal>varname_u</literal> の間のinf-sup条件が必要です．拡張パラメータ "
"<literal>dataname_r</literal> は，許容値の範囲内で選択する必要があります．オプションのパラメータ "
"<literal>dataname_friction_coeff</literal> "
"は摩擦係数で，一定にすることも，有限要素法で定義することもできます． <literal>option</literal> の可能な値は"
"，非対称Alart-Curnier拡張Lagrangian法では1，対称的なものでは2，追加の拡張を伴う非対称Alart-"
"Curnier法では3，新しい非対称法では4です．デフォルト値は1です．摩擦がある場合，  "
"<literal>dataname_alpha</literal> と <literal>dataname_wt</literal> "
"は摩擦の進化を解決するためのオプションパラメータです．<literal>dataname_gamma</literal> および "
"<literal>dataname_vt</literal> は，パラメータに依存するすべり速度を摩擦条件に追加するためのオプションデータを表します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1669
msgid ""
"``ind = gf_model_set(model M, 'add penalized contact with rigid obstacle "
"brick',  mesh_im mim, string varname_u, string dataname_obstacle, string "
"dataname_r [, string dataname_coeff], int region [, int option, string "
"dataname_lambda, [, string dataname_alpha [, string dataname_wt]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add penalized contact with rigid obstacle "
"brick',  mesh_im mim, string varname_u, string dataname_obstacle, string "
"dataname_r [, string dataname_coeff], int region [, int option, string "
"dataname_lambda, [, string dataname_alpha [, string dataname_wt]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1671
msgid ""
"Add a penalized contact with or without friction condition with a rigid "
"obstacle to the model. The condition is applied on the variable "
"<literal>varname_u</literal> on the boundary corresponding to "
"<literal>region</literal>. The rigid obstacle should be described with the "
"data <literal>dataname_obstacle</literal> being a signed distance to the "
"obstacle (interpolated on a finite element method). The penalization "
"parameter <literal>dataname_r</literal> should be chosen large enough to "
"prescribe approximate non-penetration and friction conditions but not too "
"large not to deteriorate too much the conditionning of the tangent system. "
"<literal>dataname_lambda</literal> is an optional parameter used if option "
"is 2. In that case, the penalization term is shifted by lambda (this allows "
"the use of an Uzawa algorithm on the corresponding augmented Lagrangian "
"formulation)"
msgstr ""
"摩擦条件の有無にかかわらず，剛体障害物のペナルティ接触をモデルに追加します．条件は <literal>region</literal> "
"に対応する境界上の変数 <literal>varname_u</literal> に適用されます．剛体障害物はデータ "
"<literal>dataname_obstacle</literal> "
"が障害物までの符号付き距離(有限要素法による補間)で記述されるべきである．ペナルティパラメータ "
"<literal>dataname_r</literal> "
"は，近似の非貫通条件および摩擦条件を規定するのに十分な大きさに選択する必要がありますが，接線システムの条件を過度に悪化させないようにするには大きすぎません．"
" <literal>dataname_lambda</literal> "
"はオプションが2の場合に使用されるオプションのパラメータです．その場合，ペナルティ項はlambda単位でシフトされます(これは，対応する拡張Lagrangian定式化上でのUzawaアルゴリズムの使用を可能にします)．"

#: ../source/scilab/cmdref_gf_model_set.rst:1688
msgid ""
"``ind = gf_model_set(model M, 'add Nitsche contact with rigid obstacle "
"brick', mesh_im mim, string varname, string Neumannterm, string "
"dataname_obstacle, string gamma0name,  int region[, scalar theta[, string "
"dataname_friction_coeff[, string dataname_alpha, string dataname_wt]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Nitsche contact with rigid obstacle "
"brick', mesh_im mim, string varname, string Neumannterm, string "
"dataname_obstacle, string gamma0name,  int region[, scalar theta[, string "
"dataname_friction_coeff[, string dataname_alpha, string dataname_wt]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1690
msgid ""
"Adds a contact condition with or without Coulomb friction on the variable "
"<literal>varname</literal> and the mesh boundary <literal>region</literal>. "
"The contact condition is prescribed with Nitsche's method. The rigid "
"obstacle should be described with the data "
"<literal>dataname_obstacle</literal> being a signed distance to the obstacle"
" (interpolated on a finite element method). <literal>gamma0name</literal> is"
" the Nitsche's method parameter. <literal>theta</literal> is a scalar value "
"which can be positive or negative. <literal>theta = 1</literal> corresponds "
"to the standard symmetric method which is conditionally coercive for  "
"<literal>gamma0</literal> small. <literal>theta = -1</literal> corresponds "
"to the skew-symmetric method which is inconditionally coercive. "
"<literal>theta = 0</literal> is the simplest method for which the second "
"derivative of the Neumann term is not necessary. The optional parameter "
"<literal>dataname_friction_coeff</literal> is the friction coefficient which"
" could be constant or defined on a finite element method. CAUTION: This "
"brick has to be added in the model after all the bricks corresponding to "
"partial differential terms having a Neumann term. Moreover, This brick can "
"only be applied to bricks declaring their Neumann terms. Returns the brick "
"index in the model."
msgstr ""
"Coulomb摩擦の有無にかかわらず，接触条件を変数 <literal>varname</literal> とメッシュ境界 "
"<literal>region</literal> に追加します．接触条件はNitsche法で規定されています．剛体障害物は，データ "
"<literal>dataname_obstacle</literal> が障害物までの符号付き距離(有限要素法による補間)で記述されるべきです． "
"<literal>gamma0name</literal> はNitsche法のパラメータです． <literal>theta</literal> "
"は正または負のスカラー値です． <literal>theta = 1</literal> は <literal>gamma0</literal> "
"が小さい場合に条件的に強制される標準的な対称法に相当する．<literal>theta=-1</literal>は無条件に強制的なスキュー対称法に対応する．"
" <literal>theta = 0</literal> はNeumann項の2次導関数を必要としない最も単純な方法です．オプションのパラメータ "
"<literal>dataname_friction_coeff</literal> "
"は摩擦係数で，一定にすることも，有限要素法で定義することもできます．注意: "
"このブリックはNeumann項を持つ偏微分項に対応するすべてのブリックの後にモデルに追加する必要があります．さらに，このブリックはNeumann項を宣言するブリックにのみ適用できます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1712
msgid ""
"``ind = gf_model_set(model M, 'add Nitsche midpoint contact with rigid "
"obstacle brick', mesh_im mim, string varname, string Neumannterm, string "
"Neumannterm_wt, string dataname_obstacle, string gamma0name,  int region, "
"scalar theta, string dataname_friction_coeff, string dataname_alpha, string "
"dataname_wt)``"
msgstr ""
"``ind = gf_model_set(model M, 'add Nitsche midpoint contact with rigid "
"obstacle brick', mesh_im mim, string varname, string Neumannterm, string "
"Neumannterm_wt, string dataname_obstacle, string gamma0name,  int region, "
"scalar theta, string dataname_friction_coeff, string dataname_alpha, string "
"dataname_wt)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1714
msgid ""
"EXPERIMENTAL BRICK: for midpoint scheme only !! Adds a contact condition "
"with or without Coulomb friction on the variable <literal>varname</literal> "
"and the mesh boundary <literal>region</literal>. The contact condition is "
"prescribed with Nitsche's method. The rigid obstacle should be described "
"with the data <literal>dataname_obstacle</literal> being a signed distance "
"to the obstacle (interpolated on a finite element method). "
"<literal>gamma0name</literal> is the Nitsche's method parameter. "
"<literal>theta</literal> is a scalar value which can be positive or "
"negative. <literal>theta = 1</literal> corresponds to the standard symmetric"
" method which is conditionally coercive for  <literal>gamma0</literal> "
"small. <literal>theta = -1</literal> corresponds to the skew-symmetric "
"method which is inconditionally coercive. <literal>theta = 0</literal> is "
"the simplest method for which the second derivative of the Neumann term is "
"not necessary. The optional parameter "
"<literal>dataname_friction_coeff</literal> is the friction coefficient which"
" could be constant or defined on a finite element method. Returns the brick "
"index in the model."
msgstr ""
"実験的なBRICK: 中間点法専用!! Coulomb摩擦の有無にかかわらず，接触条件を変数 <literal>varname</literal> "
"とメッシュ境界 <literal>region</literal> に追加します．接触条件はNitsche法で規定されています．剛体障害物は，データ "
"<literal>dataname_obstacle</literal> が障害物までの符号付き距離(有限要素法による補間)で記述されるべきです． "
"<literal>gamma0name</literal> はNitsche法のメソッドパラメータです． "
"<literal>theta</literal> は正または負のスカラー値です． <literal>theta = 1</literal> は "
"<literal>gamma0</literal> が小さい場合に条件的に強制される標準的な対称法に相当します． <literal>theta = "
"-1</literal> は無条件に強制的なスキュー対称法に対応します． <literal>theta = 0</literal> "
"はNeumann項の2次導関数を必要としない最も単純な方法です．オプションのパラメータ "
"<literal>dataname_friction_coeff</literal> "
"は摩擦係数で，一定にすることも，有限要素法で定義することもできます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1735
msgid ""
"``ind = gf_model_set(model M, 'add Nitsche fictitious domain contact brick',"
" mesh_im mim, string varname1, string varname2, string dataname_d1, string "
"dataname_d2, string gamma0name [, scalar theta[, string "
"dataname_friction_coeff[, string dataname_alpha, string dataname_wt1,string "
"dataname_wt2]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Nitsche fictitious domain contact brick',"
" mesh_im mim, string varname1, string varname2, string dataname_d1, string "
"dataname_d2, string gamma0name [, scalar theta[, string "
"dataname_friction_coeff[, string dataname_alpha, string dataname_wt1,string "
"dataname_wt2]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1737
msgid ""
"Adds a contact condition with or without Coulomb friction between two bodies"
" in a fictitious domain. The contact condition is applied on the variable "
"<literal>varname_u1</literal> corresponds with the first and slave body with"
" Nitsche's method and on the variable <literal>varname_u2</literal> "
"corresponds with the second and master body with Nitsche's method. The "
"contact condition is evaluated on the fictitious slave boundary. The first "
"body should be described by the level-set <literal>dataname_d1</literal> and"
" the second body should be described by the level-set "
"<literal>dataname_d2</literal>. <literal>gamma0name</literal> is the "
"Nitsche's method parameter. <literal>theta</literal> is a scalar value which"
" can be positive or negative. <literal>theta = 1</literal> corresponds to "
"the standard symmetric method which is conditionally coercive for  "
"<literal>gamma0</literal> small. <literal>theta = -1</literal> corresponds "
"to the skew-symmetric method which is inconditionally coercive. "
"<literal>theta = 0</literal> is the simplest method for which the second "
"derivative of the Neumann term is not necessary. The optional parameter "
"<literal>dataname_friction_coeff</literal> is the friction coefficient which"
" could be constant or defined on a finite element method. CAUTION: This "
"brick has to be added in the model after all the bricks corresponding to "
"partial differential terms having a Neumann term. Moreover, This brick can "
"only be applied to bricks declaring their Neumann terms. Returns the brick "
"index in the model."
msgstr ""
"仮想ドメイン内の2つのボディ間にクーロン摩擦の有無による接触条件を追加します．接触条件は，Nitsche法では変数 "
"<literal>varname_u1</literal> が第1およびスレーブボディに対応し，Nitsche法では変数 "
"<literal>varname_u2</literal> "
"が第2およびマスターボディに対応します．接触条件を仮想スレーブ境界上で評価しました．最初のボディはレベルセット "
"<literal>dataname_d1</literal> によって記述され，2番目のボディはレベルセット "
"<literal>dataname_d2</literal> によって記述されます． <literal>gamma0name</literal> "
"はNitsche法のパラメータです． `theta` は正または負のスカラー値です． <literal>theta = 1</literal> は  "
"<literal>gamma0</literal> が小さい場合に条件的に強制される標準的な対称法に相当する． <literal>theta = "
"-1</literal> は無条件に強制的なスキュー対称法に対応する． <literal>theta = 0</literal> "
"はNeumann項の2次導関数を必要としない最も単純な方法です．オプションのパラメータ "
"<literal>dataname_friction_coeff</literal> "
"は摩擦係数で，一定にすることも，有限要素法で定義することもできます．注意: このブリックは Neumann "
"項を持つ偏微分項に対応するすべてのブリックの後にモデルに追加する必要があります．さらに，このブリックはNeumann項を宣言するブリックにのみ適用できます．モデル内のブリックのインデックスを返します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1760
msgid ""
"``ind = gf_model_set(model M, 'add nodal contact between nonmatching meshes "
"brick',  mesh_im mim1[, mesh_im mim2], string varname_u1[, string "
"varname_u2], string multname_n[, string multname_t], string dataname_r[, "
"string dataname_fr], int rg1, int rg2[, int slave1, int slave2,  int "
"augmented_version])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nodal contact between nonmatching meshes "
"brick',  mesh_im mim1[, mesh_im mim2], string varname_u1[, string "
"varname_u2], string multname_n[, string multname_t], string dataname_r[, "
"string dataname_fr], int rg1, int rg2[, int slave1, int slave2,  int "
"augmented_version])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1762
msgid ""
"Add a contact with or without friction condition between two faces of one or"
" two elastic bodies. The condition is applied on the variable "
"<literal>varname_u1</literal> or the variables <literal>varname_u1</literal>"
" and <literal>varname_u2</literal> depending if a single or two distinct "
"displacement fields are given. Integers <literal>rg1</literal> and "
"<literal>rg2</literal> represent the regions expected to come in contact "
"with each other. In the single displacement variable case the regions "
"defined in both <literal>rg1</literal> and <literal>rg2</literal> refer to "
"the variable <literal>varname_u1</literal>. In the case of two displacement "
"variables, <literal>rg1</literal> refers to <literal>varname_u1</literal> "
"and <literal>rg2</literal> refers to <literal>varname_u2</literal>. "
"<literal>multname_n</literal> should be a fixed size variable whose size is "
"the number of degrees of freedom on those regions among the ones defined in "
"<literal>rg1</literal> and <literal>rg2</literal> which are characterized as"
" \"slaves\". It represents the contact equivalent nodal normal forces. "
"<literal>multname_t</literal> should be a fixed size variable whose size "
"corresponds to the size of <literal>multname_n</literal> multiplied by qdim "
"- 1 . It represents the contact equivalent nodal tangent (frictional) "
"forces. The augmentation parameter <literal>r</literal> should be chosen in "
"a range of acceptabe values (close to the Young modulus of the elastic body,"
" see Getfem user documentation). The friction coefficient stored in the "
"parameter <literal>fr</literal> is either a single value or a vector of the "
"same size as <literal>multname_n</literal>. The optional parameters "
"<literal>slave1</literal> and <literal>slave2</literal> declare if the "
"regions defined in <literal>rg1</literal> and <literal>rg2</literal> are "
"correspondingly considered as \"slaves\". By default "
"<literal>slave1</literal> is true and <literal>slave2</literal> is false, "
"i.e. <literal>rg1</literal> contains the slave surfaces, while 'rg2' the "
"master surfaces. Preferrably only one of <literal>slave1</literal> and "
"<literal>slave2</literal> is set to true.  The parameter "
"<literal>augmented_version</literal> indicates the augmentation strategy : 1"
" for the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the "
"symmetric one (except for the coupling between contact and Coulomb "
"friction), 3 for the new unsymmetric method. Basically, this brick computes "
"the matrices BN and BT and the vectors gap and alpha and calls the basic "
"contact brick."
msgstr ""
"1つまたは2つの弾性体の2つの面の間に，摩擦条件の有無にかかわらず接触を追加します．条件は，変数 "
"<literal>varname_u1</literal> または変数  <literal>varname_u1</literal> と "
"<literal>varname_u2</literal> "
"に適用されます．これは，1つまたは2つの個別の変位フィールドが指定されているかどうかによって異なります．整数 "
"<literal>rg1</literal> および rg2 は，互いに接触すると予想される領域を表す．単一変位変数の場合， "
"<literal>rg1</literal> と <literal>rg2</literal> "
"の両方で定義された領域は，変数<literal>varname_u1</literal> "
"を参照します．2つの変位変数の場合，<literal>rg1</literal> は <literal>varname_u1</literal> "
"を参照し，<literal>rg2</literal> は <literal>varname_u2</literal> を参照します． "
"<literal>multname_t</literal> は，<literal>rg1</literal> "
"と<literal>rg2</literal> で定義されている領域のうち， \"slaves\" "
"とされている領域の自由度をサイズとする固定サイズ変数です．接触等価節点垂直力を表します．<literal>multname_t</literal> は"
"，qdim-1で乗算された <literal>multname_n</literal> "
"のサイズに対応するサイズの固定サイズ変数でなければなりません．接触等価節点正接(摩擦の)力を表します．拡張パラメータ "
"<literal>r</literal> "
"は，許容値(弾性体のYoung率に近い値．Getfemのユーザードキュメントを参照)の範囲内で選択されるべきです．パラメータ "
"<literal>fr</literal> に格納される摩擦係数は，単一の値または <literal>multname_n</literal> "
"と同じサイズのベクトルのいずれかです．オプションのパラメータ <literal>slave1</literal> と "
"<literal>slave2</literal> は， <literal>rg1</literal> と <literal>rg2</literal>"
" で定義された領域が \"slaves\" とみなされるかどうかを宣言します．デフォルトでは， <literal>slave1</literal> "
"はtrue， <literal>slave2</literal> はfalseです．つまり， <literal>rg1</literal> "
"はスレーブ面を含み，マスタ面を 'rg2' とします． <literal>slave1</literal> "
"と<literal>slave2</literal> のどちらか一方だけをtrueに設定するのが好ましいです．パラメータ "
"<literal>augmented_version</literal> は拡大戦略を示しｍす: 1は非対称のAlart-"
"Curnier拡張Lagrangian，2は対称のもの(接触とCoulomb摩擦の結合を除きます)，3は新しい非対称法です．基本的に，このブリックは行列BNとBTとベクトルgapとalphaを計算し，基本的な接触ブリックを呼び出します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1794
msgid ""
"``ind = gf_model_set(model M, 'add nonmatching meshes contact brick',  "
"mesh_im mim1[, mesh_im mim2], string varname_u1[, string varname_u2], string"
" multname_n[, string multname_t], string dataname_r[, string dataname_fr], "
"int rg1, int rg2[, int slave1, int slave2,  int augmented_version])``"
msgstr ""
"``ind = gf_model_set(model M, 'add nonmatching meshes contact brick',  "
"mesh_im mim1[, mesh_im mim2], string varname_u1[, string varname_u2], string"
" multname_n[, string multname_t], string dataname_r[, string dataname_fr], "
"int rg1, int rg2[, int slave1, int slave2,  int augmented_version])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1796
msgid ""
"DEPRECATED FUNCTION. Use 'add nodal contact between nonmatching meshes "
"brick' instead."
msgstr ""
"非推奨機能です．代わりに 'add nodal contact between nonmatching meshes brick' を使用してください．"

#: ../source/scilab/cmdref_gf_model_set.rst:1799
msgid ""
"``ind = gf_model_set(model M, 'add integral contact between nonmatching "
"meshes brick',  mesh_im mim, string varname_u1, string varname_u2, string "
"multname, string dataname_r [, string dataname_friction_coeff], int region1,"
" int region2 [, int option [, string dataname_alpha [, string dataname_wt1 ,"
" string dataname_wt2]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add integral contact between nonmatching "
"meshes brick',  mesh_im mim, string varname_u1, string varname_u2, string "
"multname, string dataname_r [, string dataname_friction_coeff], int region1,"
" int region2 [, int option [, string dataname_alpha [, string dataname_wt1 ,"
" string dataname_wt2]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1801
msgid ""
"Add a contact with or without friction condition between nonmatching meshes "
"to the model. This brick adds a contact which is defined in an integral way."
" It is the direct approximation of an augmented agrangian formulation (see "
"Getfem user documentation) defined at the continuous level. The advantage "
"should be a better scalability: the number of Newton iterations should be "
"more or less independent of the mesh size. The condition is applied on the "
"variables <literal>varname_u1</literal> and <literal>varname_u2</literal> on"
" the boundaries corresponding to <literal>region1</literal> and "
"<literal>region2</literal>. <literal>multname</literal> should be a fem "
"variable representing the contact stress for the frictionless case and the "
"contact and friction stress for the case with friction. An inf-sup condition"
" between <literal>multname</literal> and <literal>varname_u1</literal> and "
"<literal>varname_u2</literal> is required. The augmentation parameter "
"<literal>dataname_r</literal> should be chosen in a range of acceptable "
"values. The optional parameter <literal>dataname_friction_coeff</literal> is"
" the friction coefficient which could be constant or defined on a finite "
"element method on the same mesh as <literal>varname_u1</literal>. Possible "
"values for <literal>option</literal> is 1 for the non-symmetric Alart-"
"Curnier augmented Lagrangian method, 2 for the symmetric one, 3 for the non-"
"symmetric Alart-Curnier method with an additional augmentation and 4 for a "
"new unsymmetric method. The default value is 1. In case of contact with "
"friction, <literal>dataname_alpha</literal>, <literal>dataname_wt1</literal>"
" and <literal>dataname_wt2</literal> are optional parameters to solve "
"evolutionary friction problems."
msgstr ""
"摩擦条件の有無にかかわらず，一致しないメッシュ間に接触をモデルに追加します．このブリックは，完全な方法で定義された接触を追加します．これは,連続レベルで定義された拡張Lagrangian定式化(Getfemユーザマニュアルを参照)の直接近似です．この利点は，スケーラビリティの向上です．Newton法の反復回数は，メッシュサイズに多少依存しません．条件は，"
"  <literal>region1</literal> および <literal>region2</literal> に対応する境界上の変数 "
"<literal>varname_u1</literal> および <literal>varname_u2</literal> に適用されます． "
"<literal>multname</literal> "
"は，摩擦がない場合の接触応力と，摩擦がある場合の接触および摩擦応力を表す有限要素法の変数である必要があります． "
"<literal>multname</literal> と<literal>varname_u1</literal> と "
"<literal>varname_u2</literal> の間のinf-sup条件が必要です．拡張パラメータ "
"<literal>dataname_r</literal> は許容値の範囲内で選択する必要があります．オプションのパラメータ "
"<literal>dataname_friction_coeff</literal> は摩擦係数で，一定であるか，または "
"<literal>varname_u1</literal> と同じメッシュ上の有限要素法で定義できます． "
"<literal>option</literal> の値は，非対称 Alart-Curnier "
"拡張Lagrangian法では1，対称的なものでは2，追加の拡張を伴う非対称 Alart-Curnier "
"法では3，新しい非対称法では4となります．デフォルト値は1です．摩擦がある場合， <literal>dataname_alpha</literal>  "
"， <literal>dataname_wt1</literal> および <literal>dataname_wt2</literal> "
"は，摩擦の進展を解くためのオプションパラメータです．"

#: ../source/scilab/cmdref_gf_model_set.rst:1829
msgid ""
"``ind = gf_model_set(model M, 'add penalized contact between nonmatching "
"meshes brick',  mesh_im mim, string varname_u1, string varname_u2, string "
"dataname_r [, string dataname_coeff], int region1, int region2 [, int option"
" [, string dataname_lambda, [, string dataname_alpha [, string dataname_wt1,"
" string dataname_wt2]]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add penalized contact between nonmatching "
"meshes brick',  mesh_im mim, string varname_u1, string varname_u2, string "
"dataname_r [, string dataname_coeff], int region1, int region2 [, int option"
" [, string dataname_lambda, [, string dataname_alpha [, string dataname_wt1,"
" string dataname_wt2]]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1831
msgid ""
"Add a penalized contact condition with or without friction between "
"nonmatching meshes to the model. The condition is applied on the variables "
"<literal>varname_u1</literal> and  <literal>varname_u2</literal> on the "
"boundaries corresponding to <literal>region1</literal> and "
"<literal>region2</literal>. The penalization parameter "
"<literal>dataname_r</literal> should be chosen large enough to prescribe "
"approximate non-penetration and friction conditions but not too large not to"
" deteriorate too much the conditionning of the tangent system. The optional "
"parameter <literal>dataname_friction_coeff</literal> is the friction "
"coefficient which could be constant or defined on a finite element method on"
" the same mesh as <literal>varname_u1</literal>. "
"<literal>dataname_lambda</literal> is an optional parameter used if option "
"is 2. In that case, the penalization term is shifted by lambda (this allows "
"the use of an Uzawa algorithm on the corresponding augmented Lagrangian "
"formulation) In case of contact with friction, "
"<literal>dataname_alpha</literal>, <literal>dataname_wt1</literal> and "
"<literal>dataname_wt2</literal> are optional parameters to solve "
"evolutionary friction problems."
msgstr ""
"モデルに，一致しないメッシュ間の摩擦の有無にかかわらずペナルティ接触条件を追加します．条件は，  <literal>region1</literal> "
"および <literal>region2</literal> に対応する境界上の変数 <literal>varname_u1</literal> および"
" <literal>varname_u2</literal> に適用されます．ペナルティパラメータ "
"<literal>dataname_r</literal> "
"は，近似の非貫通条件および摩擦条件を規定するのに十分な大きさに選択する必要がありますが，接線システムの条件を過度に悪化させないようにするには大きすぎません．オプションのパラメータ"
" <literal>dataname_friction_coeff</literal> は摩擦係数で，一定であるか，または "
"<literal>varname_u1</literal> と同じメッシュ上の有限要素法で定義できます． "
"<literal>dataname_lambda</literal> "
"は，optionが2の場合に使用されるオプションのパラメータです．その場合，ペナルティ項はlambda単位でシフトされます(これは，対応する拡張Lagrangian定式化上でのUzawaアルゴリズムの使用を可能にします)．接触摩擦の場合，"
" <literal>dataname_alpha</literal> ， <literal>dataname_wt1</literal>  および "
"<literal>dataname_wt2</literal> は進展摩擦の問題を解決するためのオプションのパラメータです．"

#: ../source/scilab/cmdref_gf_model_set.rst:1852
msgid ""
"``ind = gf_model_set(model M, 'add integral large sliding contact brick "
"raytracing', string dataname_r, scalar release_distance, [, string "
"dataname_fr[, string dataname_alpha[, int version]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add integral large sliding contact brick "
"raytracing', string dataname_r, scalar release_distance, [, string "
"dataname_fr[, string dataname_alpha[, int version]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1854
msgid ""
"Adds a large sliding contact with friction brick to the model. This brick is"
" able to deal with self-contact, contact between several deformable bodies "
"and contact with rigid obstacles. It uses the high-level generic assembly. "
"It adds to the model a raytracing_interpolate_transformation object. For "
"each slave boundary a multiplier variable should be defined. The release "
"distance should be determined with care (generally a few times a mean "
"element size, and less than the thickness of the body). Initially, the brick"
" is added with no contact boundaries. The contact boundaries and rigid "
"bodies are added with special functions. <literal>version</literal> is 0 "
"(the default value) for the non-symmetric version and 1 for the more "
"symmetric one (not fully symmetric even without friction)."
msgstr ""
"摩擦ブリックとの有限すべり接触をモデルに追加します．このブリックは自己接触，複数の変形可能体間の接触及び剛体障害物との接触に対処できます．高水準汎用アセンブリを使用します．モデルに"
" raytracing_interpolate_transformation "
"オブジェクトを追加します．スレーブ境界ごとに乗数変数を定義する必要があります．リリース距離は慎重に決定すべきです(一般に平均要素サイズの数倍で，物体の厚さよりも薄いです)．最初は，ブリックは接触境界なしで追加されます．接触境界と剛体には，特別な機能が追加されています．"
" <literal>version</literal> "
"は，非対称バージョンでは0(デフォルト値)，より対称なバージョンでは1(摩擦がなくても完全に対称的でない)です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1869
msgid ""
"``gf_model_set(model M, 'add rigid obstacle to large sliding contact brick',"
" int indbrick, string expr, int N)``"
msgstr ""
"``gf_model_set(model M, 'add rigid obstacle to large sliding contact brick',"
" int indbrick, string expr, int N)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1871
#: ../source/scilab/cmdref_gf_model_set.rst:1917
msgid ""
"Adds a rigid obstacle to an existing large sliding contact with friction "
"brick. <literal>expr</literal> is an expression using the high-level generic"
" assembly language (where <literal>x</literal> is the current point n the "
"mesh) which should be a signed distance to the obstacle. "
"<literal>N</literal> is the mesh dimension."
msgstr ""
"摩擦ブリックとの既存の有限すべり接触に，硬質の障害物を追加します． <literal>expr</literal> は高水準汎用アセンブリ言語(ここで，"
" <literal>x</literal> はメッシュの現在の点です)を使用した式であり，障害物までの符号付き距離である必要があります． "
"<literal>N</literal> はメッシュの次元です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1878
msgid ""
"``gf_model_set(model M, 'add master contact boundary to large sliding "
"contact brick', int indbrick, mesh_im mim, int region, string dispname[, "
"string wname])``"
msgstr ""
"``gf_model_set(model M, 'add master contact boundary to large sliding "
"contact brick', int indbrick, mesh_im mim, int region, string dispname[, "
"string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1880
msgid ""
"Adds a master contact boundary to an existing large sliding contact with "
"friction brick."
msgstr "摩擦ブリックを持つ既存の有限すべり接触にマスター接触境界を追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1884
msgid ""
"``gf_model_set(model M, 'add slave contact boundary to large sliding contact"
" brick', int indbrick, mesh_im mim, int region, string dispname, string "
"lambdaname[, string wname])``"
msgstr ""
"``gf_model_set(model M, 'add slave contact boundary to large sliding contact"
" brick', int indbrick, mesh_im mim, int region, string dispname, string "
"lambdaname[, string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1886
msgid ""
"Adds a slave contact boundary to an existing large sliding contact with "
"friction brick."
msgstr "摩擦ブリックを持つ既存の有限滑り接触にスレーブ接触境界を追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1890
msgid ""
"``gf_model_set(model M, 'add master slave contact boundary to large sliding "
"contact brick', int indbrick, mesh_im mim, int region, string dispname, "
"string lambdaname[, string wname])``"
msgstr ""
"``gf_model_set(model M, 'add master slave contact boundary to large sliding "
"contact brick', int indbrick, mesh_im mim, int region, string dispname, "
"string lambdaname[, string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1892
msgid ""
"Adds a contact boundary to an existing large sliding contact with friction "
"brick which is both master and slave (allowing the self-contact)."
msgstr "接触境界を，マスターでもスレーブでもある摩擦ブリックの既存の有限滑り接触に追加します(自己接触は許容します)．"

#: ../source/scilab/cmdref_gf_model_set.rst:1897
msgid ""
"``ind = gf_model_set(model M, 'add Nitsche large sliding contact brick "
"raytracing', bool unbiased_version, string dataname_r, scalar "
"release_distance[, string dataname_fr[, string dataname_alpha[, int "
"version]]])``"
msgstr ""
"``ind = gf_model_set(model M, 'add Nitsche large sliding contact brick "
"raytracing', bool unbiased_version, string dataname_r, scalar "
"release_distance[, string dataname_fr[, string dataname_alpha[, int "
"version]]])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1899
msgid ""
"Adds a large sliding contact with friction brick to the model based on the "
"Nitsche's method. This brick is able to deal with self-contact, contact "
"between several deformable bodies and contact with rigid obstacles. It uses "
"the high-level generic assembly. It adds to the model a "
"raytracing_interpolate_transformation object. \"unbiased_version\" refers to"
" the version of Nische's method to be used. (unbiased or biased one). For "
"each slave boundary a  material law should be defined as a function of the "
"dispacement variable on this boundary. The release distance should be "
"determined with care (generally a few times a mean element size, and less "
"than the thickness of the body). Initially, the brick is added with no "
"contact boundaries. The contact boundaries and rigid bodies are added with "
"special functions. <literal>version</literal> is 0 (the default value) for "
"the non-symmetric version and 1 for the more symmetric one (not fully "
"symmetric even without friction)."
msgstr ""
"Nitsche法に基づいて，摩擦ブリックと有限滑り接触をモデルに追加します．このブリックは自己接触，複数の変形可能体間の接触及び剛体障害物との接触に対処できます．上位レベルの汎用アセンブリを使用します．モデルに"
" raytracing_interpolate_transformation オブジェクトを追加します． \"unbiased_version\" "
"とは，使用するNitsche法のバージョンのことです．(バイアスされていない，またはバイアスされているもの)．スレーブ境界ごとに，この境界上の表示変数の関数として材料法則を定義する必要があります．放出距離は慎重に決定すべきです(一般に平均要素サイズの数倍で，ボディの厚さよりも薄いです)．最初は，ブリックは接触境界なしで追加されます．接触境界と剛体には，特別な機能が追加されています．"
" <literal>version</literal> "
"は非対称バージョンでは0(デフォルト値)，より対称なバージョンでは1(摩擦がなくても完全に対称的でない)です．"

#: ../source/scilab/cmdref_gf_model_set.rst:1915
msgid ""
"``gf_model_set(model M, 'add rigid obstacle to Nitsche large sliding contact"
" brick', int indbrick, string expr, int N)``"
msgstr ""
"``gf_model_set(model M, 'add rigid obstacle to Nitsche large sliding contact"
" brick', int indbrick, string expr, int N)``"

#: ../source/scilab/cmdref_gf_model_set.rst:1924
msgid ""
"``gf_model_set(model M, 'add master contact boundary to biased Nitsche large"
" sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname[, string wname])``"
msgstr ""
"``gf_model_set(model M, 'add master contact boundary to biased Nitsche large"
" sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname[, string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1926
msgid ""
"Adds a master contact boundary to an existing biased Nitsche's large sliding"
" contact with friction brick."
msgstr "摩擦ブリックと既存のバイアスされたNitscheの有限スライド接触にマスター接触境界を追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1930
msgid ""
"``gf_model_set(model M, 'add slave contact boundary to biased Nitsche large "
"sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname, string lambdaname[, string wname])``"
msgstr ""
"``gf_model_set(model M, 'add slave contact boundary to biased Nitsche large "
"sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname, string lambdaname[, string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1932
msgid ""
"Adds a slave contact boundary to an existing biased Nitsche's large sliding "
"contact with friction brick."
msgstr "摩擦ブリックとの既存のバイアスされたNitscheの有限滑り接触にスレーブ接触境界を追加します．"

#: ../source/scilab/cmdref_gf_model_set.rst:1936
msgid ""
"``gf_model_set(model M, 'add contact boundary to unbiased Nitsche large "
"sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname, string lambdaname[, string wname])``"
msgstr ""
"``gf_model_set(model M, 'add contact boundary to unbiased Nitsche large "
"sliding contact brick', int indbrick, mesh_im mim, int region, string "
"dispname, string lambdaname[, string wname])``"

#: ../source/scilab/cmdref_gf_model_set.rst:1938
msgid ""
"Adds a contact boundary to an existing unbiased Nitschelarge sliding contact"
" with friction brick which is both master and slave."
msgstr "接触境界をマスターとスレーブの両方である摩擦ブリックを持つ既存のバイアスされていないNitschelargeスライド接触に追加します．"
