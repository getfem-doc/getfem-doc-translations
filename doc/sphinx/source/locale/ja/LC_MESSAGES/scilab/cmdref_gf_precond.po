# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-07 01:21+0000\n"
"PO-Revision-Date: 2018-07-16 06:58+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/scilab/cmdref_gf_precond.rst:8
msgid "gf_precond"
msgstr "gf_precond"

#: ../source/scilab/cmdref_gf_precond.rst:10
msgid "**Synopsis**"
msgstr "**概要**"

#: ../source/scilab/cmdref_gf_precond.rst:24
msgid "**Description :**"
msgstr "**説明 :**"

#: ../source/scilab/cmdref_gf_precond.rst:27
msgid "General constructor for precond objects."
msgstr "precond オブジェクトの汎用的なコンストラクタ"

#: ../source/scilab/cmdref_gf_precond.rst:29
msgid ""
"The preconditioners may store REAL or COMPLEX values. They accept getfem "
"sparse matrices and Matlab sparse matrices."
msgstr "前処理行列は、REAL値またはCOMPLEX値を記憶することができます。getfem疎行列とMatlab疎行列が使用可能です。"

#: ../source/scilab/cmdref_gf_precond.rst:33
msgid "**Command list :**"
msgstr "**コマンドリスト**"

#: ../source/scilab/cmdref_gf_precond.rst:37
msgid "``PC = gf_precond('identity')``"
msgstr "``PC = gf_precond('identity')``"

#: ../source/scilab/cmdref_gf_precond.rst:39
msgid "Create a REAL identity precondioner."
msgstr "実数の前処理行列を作成します。"

#: ../source/scilab/cmdref_gf_precond.rst:42
msgid "``PC = gf_precond('cidentity')``"
msgstr "``PC = gf_precond('cidentity')``"

#: ../source/scilab/cmdref_gf_precond.rst:44
msgid "Create a COMPLEX identity precondioner."
msgstr "``PC = Precond('cidentity')`` COMPLEX 単位前処理行列を作成します。"

#: ../source/scilab/cmdref_gf_precond.rst:47
msgid "``PC = gf_precond('diagonal', vec D)``"
msgstr "``PC = gf_precond('diagonal', vec D)``"

#: ../source/scilab/cmdref_gf_precond.rst:49
msgid "Create a diagonal precondioner."
msgstr "``PC = Precond('diagonal', vec D)`` 対角前処理行列を作成します。"

#: ../source/scilab/cmdref_gf_precond.rst:52
msgid "``PC = gf_precond('ildlt', spmat m)``"
msgstr "``PC = gf_precond('ildlt', spmat m)``"

#: ../source/scilab/cmdref_gf_precond.rst:54
msgid ""
"Create an ILDLT (Cholesky) preconditioner for the (symmetric) sparse matrix "
"<literal>m</literal>. This preconditioner has the same sparsity pattern than"
" <literal>m</literal> (no fill-in)."
msgstr ""
"(Cholesky)疎行列 <literal>m</literal> のILDLT(Cholesky)前処理行列を作成します。この前処理行列は"
"(fill-in無しの) <literal>m</literal> と同じ非ゼロパターンです。"

#: ../source/scilab/cmdref_gf_precond.rst:59
msgid "``PC = gf_precond('ilu', spmat m)``"
msgstr "``PC = gf_precond('ilu', spmat m)``"

#: ../source/scilab/cmdref_gf_precond.rst:61
msgid ""
"Create an ILU (Incomplete LU) preconditioner for the sparse matrix "
"<literal>m</literal>. This preconditioner has the same sparsity pattern than"
" <literal>m</literal> (no fill-in)."
msgstr ""
"疎行列 <literal>m</literal> に対するILU(不完全なLU)前処理行列を作成します。この前処理行列は、(fill-in無し) "
"<literal>m</literal> と同じじ非ゼロパターンを有します。"

#: ../source/scilab/cmdref_gf_precond.rst:66
msgid ""
"``PC = gf_precond('ildltt', spmat m[, int fillin[, scalar threshold]])``"
msgstr ""
"``PC = gf_precond('ildltt', spmat m[, int fillin[, scalar threshold]])``"

#: ../source/scilab/cmdref_gf_precond.rst:68
msgid ""
"Create an ILDLTT (Cholesky with filling) preconditioner for the (symmetric) "
"sparse matrix <literal>m</literal>. The preconditioner may add at most "
"<literal>fillin</literal> additional non-zero entries on each line. The "
"default value for <literal>fillin</literal> is 10, and the default threshold"
" is1e-7."
msgstr ""
"(対称の)疎行列 <literal>m</literal> のILDLTT( 密なCholesky "
")前処理行列を作成します。前処理行列は、各行上に追加の非ゼロのエントリを最大 <literal>fillin</literal> "
"個追加することができます。 <literal>fillin</literal> のデフォルト値は10で、デフォルトの閾値は1e-7です。"

#: ../source/scilab/cmdref_gf_precond.rst:74
msgid "``PC = gf_precond('ilut', spmat m[, int fillin[, scalar threshold]])``"
msgstr ""
"``PC = gf_precond('ilut', spmat m[, int fillin[, scalar threshold]])``"

#: ../source/scilab/cmdref_gf_precond.rst:76
msgid ""
"Create an ILUT (Incomplete LU with filling) preconditioner for the sparse "
"matrix <literal>m</literal>. The preconditioner may add at most "
"<literal>fillin</literal> additional non-zero entries on each line. The "
"default value for <literal>fillin</literal> is 10, and the default threshold"
" is 1e-7."
msgstr ""
"疎行列 <literal>m</literal> "
"に対するILUT(フィルされている不完全なLU)前処理行列を作成します。前処理行列は、各行上に追加の非ゼロのエントリを多くとも "
"<literal>fillin</literal> 個追加することができます。 <literal>fillin</literal>のデフォルト値は10で"
"、デフォルトの閾値は1e-7です。"

#: ../source/scilab/cmdref_gf_precond.rst:82
msgid "``PC = gf_precond('superlu', spmat m)``"
msgstr "``PC = gf_precond('superlu', spmat m)``"

#: ../source/scilab/cmdref_gf_precond.rst:84
msgid ""
"Uses SuperLU to build an exact factorization of the sparse matrix "
"<literal>m</literal>. This preconditioner is only available if the getfem-"
"interface was built with SuperLU support. Note that LU factorization is "
"likely to eat all your memory for 3D problems."
msgstr ""
"SuperLUを使用して、疎行列 <literal>m</literal> の正確な因数分解を構築します。この前処理行列は、SuperLU "
"をサポートするgetfem-"
"interfaceが構築されている場合にのみ使用できます。LU分解は、3次元問題の場合、メモリをすべて消費する可能性が高いことに注意してください。"

#: ../source/scilab/cmdref_gf_precond.rst:90
msgid "``PC = gf_precond('spmat', spmat m)``"
msgstr "``PC = gf_precond('spmat', spmat m)``"

#: ../source/scilab/cmdref_gf_precond.rst:92
msgid "Preconditioner given explicitely by a sparse matrix."
msgstr "疎行列によって明示的に与えられる前処理行列です。"
