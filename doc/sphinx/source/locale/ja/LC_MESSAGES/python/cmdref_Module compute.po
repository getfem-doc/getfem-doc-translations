# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-16 12:10+0000\n"
"PO-Revision-Date: 2018-07-16 07:17+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/python/cmdref_Module compute.rst:8
msgid "Module compute"
msgstr "computeモジュール"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_L2_norm:1
msgid "Compute the L2 norm of the (real or complex) field `U`."
msgstr "(実数または複素数の)フィールド `U` のL2ノルムを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_L2_norm:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_L2_dist:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_semi_norm:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_semi_dist:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_norm:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H2_semi_norm:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H2_norm:3
msgid ""
"If `CVids` is given, the norm will be computed only on the listed elements."
msgstr "`CVids` が指定されている場合、ノルムはリストされた要素でのみ計算されます。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_L2_dist:1
msgid "Compute the L2 distance between `U` and `U2`."
msgstr "`U` と `U2` の間のL2距離を計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_semi_norm:1
msgid "Compute the L2 norm of grad(`U`)."
msgstr "grad(`U`) のL2ノルムを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_semi_dist:1
msgid "Compute the semi H1 distance between `U` and `U2`."
msgstr "`U` と `U2` の間の準H1距離を計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H1_norm:1
msgid "Compute the H1 norm of `U`."
msgstr "`U` のH1ノルムを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H2_semi_norm:1
msgid "Compute the L2 norm of D^2(`U`)."
msgstr "D^2(`U`) のL2ノルムを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_H2_norm:1
msgid "Compute the H2 norm of `U`."
msgstr "`U` のH2ノルムを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_gradient:1
msgid "Compute the gradient of the field `U` defined on MeshFem `mf_du`."
msgstr "MeshFem `mf_du`上で定義されたフィールド `U` の勾配を計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_gradient:3
msgid ""
"The gradient is interpolated on the MeshFem `mf_du`, and returned in `DU`. "
"For example, if `U` is defined on a P2 MeshFem, `DU` should be evaluated on "
"a P1-discontinuous MeshFem. `mf` and `mf_du` should share the same mesh."
msgstr ""
"勾配はMeshFemの `mf_du` で補間され `DU` に返されます。例えば、 `U` がP2 MeshFemで定義されている場合、 `DU` "
"はP1不連続MeshFemで評価されます。 `mf` と `mf_du` は同じメッシュを共有する必要があります。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_gradient:8
msgid ""
"`U` may have any number of dimensions (i.e. this function is not restricted "
"to the gradient of scalar fields, but may also be used for tensor fields). "
"However the last dimension of `U` has to be equal to the number of dof of "
"`mf`. For example, if `U` is a [3x3xNmf] array (where Nmf is the number of "
"dof of `mf`), `DU` will be a [Nx3x3[xQ]xNmf_du] array, where N is the "
"dimension of the mesh, Nmf_du is the number of dof of `mf_du`, and the "
"optional Q dimension is inserted if `Qdim_mf != Qdim_mf_du`, where Qdim_mf "
"is the Qdim of `mf` and Qdim_mf_du is the Qdim of `mf_du`."
msgstr ""
"`U` は任意の数の次元を持つことができます(すなわち、この関数はスカラー場の勾配に限定されず、テンソル場にも使用できます)。ただし、 `U` "
"の最後の次元は `mf` の自由度の数に等しくなければなりません。たとえば、 `U` が [3x3xNmf] 配列(ここで、Nmfは `mf` "
"の自由度の数です)の場合、 `DU` は [Nx3x3[xQ]xNmf_du] 配列となり、 N はメッシュの次元、 Nmf_du は `mf_du` "
"の自由度の数であり、 `Qdim_mf != Qdim_mf_du` の場合、オプションのQ次が挿入されます、ここで、 Qdim_mf は `mf` "
"のQdimであり、Qdim_mf_duは `mf_du` のQdimです。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_hessian:1
msgid "Compute the hessian of the field `U` defined on MeshFem `mf_h`."
msgstr "MeshFem `mf_h` に定義されているフィールド `U` のHessianを計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_hessian:3
msgid "See also gf_compute('gradient', MeshFem mf_du)."
msgstr "gf_compute('gradient', MeshFem mf_du) も参照してください。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_eval_on_triangulated_surface:1
msgid ""
"[OBSOLETE FUNCTION! will be removed in a future release] Utility function "
"designed for 2D triangular meshes : returns a list of triangles coordinates "
"with interpolated U values. This can be used for the accurate visualization "
"of data defined on a discontinous high order element. On output, the six "
"first rows of UP contains the triangle coordinates, and the others rows "
"contain the interpolated values of U (one for each triangle vertex) CVLIST "
"may indicate the list of convex number that should be consider, if not used "
"then all the mesh convexes will be used. U should be a row vector."
msgstr ""
"[廃止された機能! 将来のリリースで削除される予定です] "
"2次元三角形メッシュ用に設計されたユーティリティ関数は補間されたU値を持つ三角形座標のリストを返します。これは、不連続な高次要素上で定義されたデータを正確に視覚化するために使用できます。出力では、UPの6つの最初の行は三角形座標を含み、他の行はU(三角形の頂点ごとに1つ)のCVLISTの補間された値を含み、考慮されるべき凸包数のリストを示すことができ、もし使用されなければ、全てのメッシュ凸包が使用されます。Uは行ベクトルでなければなりません。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:1
msgid ""
"Synopsis: Ui = compute_interpolate_on(MeshFem MF, vec U, {MeshFem mfi | "
"Slice sli | vec pts})"
msgstr ""
"概要: Ui = compute_interpolate_on(MeshFem MF, vec U, {MeshFem mfi | Slice sli "
"| vec pts})"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:3
msgid "Interpolate a field on another MeshFem or a Slice or a list of points."
msgstr "別のMeshFem、Slice、またはポイントのリストのフィールドを補間します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:6
msgid "Interpolation on another MeshFem `mfi`:"
msgstr "別のMeshFem `mfi` 上の補間"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:6
msgid ""
"`mfi` has to be Lagrangian. If `mf` and `mfi` share the same mesh object, "
"the interpolation will be much faster."
msgstr ""
"`mfi` はLagrangianでなければなりません。 `mf` と `mfi` "
"が同じメッシュオブジェクトを共有する場合、補間は非常に高速になります。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:11
msgid "Interpolation on a Slice `sli`:"
msgstr "スライス  `sli` の補間。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:9
msgid ""
"this is similar to interpolation on a refined P1-discontinuous mesh, but it "
"is much faster. This can also be used with Slice('points') to obtain field "
"values at a given set of points."
msgstr ""
"これは、洗練されたP1-不連続メッシュの補間に似ていますが、はるかに高速です。また、 Slice('points') "
"と組み合わせて使用し、特定のポイント集合におけるフィールド値を取得することもできます。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:13
msgid "Interpolation on a set of points `pts`"
msgstr "点 `pts` の集合の補間"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_interpolate_on:15
msgid "See also gf_asm('interpolation matrix')"
msgstr "gf_asm('interpolation matrix') も参照"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_extrapolate_on:1
msgid "Extrapolate a field on another MeshFem."
msgstr "フィールドを別のMeshFemに外挿します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_extrapolate_on:3
msgid ""
"If the mesh of `mfe` is stricly included in the mesh of `mf`, this function "
"does stricly the same job as gf_compute('interpolate_on'). However, if the "
"mesh of `mfe` is not exactly included in `mf` (imagine interpolation between"
" a curved refined mesh and a coarse mesh), then values which are outside "
"`mf` will be extrapolated."
msgstr ""
"`mfe` のメッシュが `mf` "
"のメッシュに厳密に含まれている場合、この関数はgf_compute('interpolate_on')と厳密に同じ処理を行います。しかし、 `mfe` "
"のメッシュが `mf` に正確に含まれていない場合(曲線状のリファインされたメッシュと粗いメッシュの間の補間を想像してください)、 `mf` "
"外の値が外挿されます。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_extrapolate_on:10
msgid "See also gf_asm('extrapolation matrix')"
msgstr "gf_asm('extrapolation matrix') も参照"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_error_estimate:1
msgid "Compute an a posteriori error estimate."
msgstr "事後誤差推定値を計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_error_estimate:3
#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_error_estimate_nitsche:3
msgid ""
"Currently there is only one which is available: for each convex, the jump of"
" the normal derivative is integrated on its faces."
msgstr "現在、使用できるのは1つだけです。各凸包に対して、法線導関数のジャンプが面に対して積分されます。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_error_estimate_nitsche:1
msgid "Compute an a posteriori error estimate in the case of Nitsche method."
msgstr "Nitsche法の場合、事後誤差推定値を計算します。"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_convect:1
msgid ""
"Synopsis: compute_convect(MeshFem MF, vec U, MeshFem mf_v, vec V, scalar dt,"
" int nt[, string option[, vec per_min, vec per_max]])"
msgstr ""
"概要: compute_convect(MeshFem MF, vec U, MeshFem mf_v, vec V, scalar dt, int "
"nt[, string option[, vec per_min, vec per_max]])"

#: ../../../../../../../virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.compute_convect:3
msgid ""
"Compute a convection of `U` with regards to a steady state velocity field "
"`V` with a Characteristic-Galerkin method. The result is returned in-place "
"in `U`. This method is restricted to pure Lagrange fems for U. `mf_v` should"
" represent a continuous finite element method. `dt` is the integration time "
"and `nt` is the number of integration step on the caracteristics. `option` "
"is an option for the part of the boundary where there is a re-entrant "
"convection. `option = 'extrapolation'` for an extrapolation on the nearest "
"element, `option = 'unchanged'` for a constant value on that boundary or "
"`option = 'periodicity'` for a peridiodic boundary. For this latter option "
"the two vectors per_min, per_max has to be given and represent the limits of"
" the periodic domain (on components where per_max[k] < per_min[k] no "
"operation is done). This method is rather dissipative, but stable."
msgstr ""
"Characteristic-Galerkin法を用いて定常状態の速度場Vに関するUの対流を計算します。結果は、そのまま `U` "
"で返されます。この方法は、 U. `mf_v` が連続有限要素法を表現するための純粋なLagrange関数に限定されます。 `dt` は積分時間、  "
"`nt` は特性上の積分ステップ数です。 `option`  は、re-entrant対流がある境界部分のオプションです。最も近い要素への外挿の場合は "
"`option = 'extrapolation'` で、その境界上の定数値の場合は `option = 'unchanged'` "
"です、周期境界の場合は `option = 'periodicity'` "
"となります。後者のオプションでは、per_min、per_maxの二つのベクトルが与えられ、周期領域(per_max[k] < "
"per_min[k]が設定されているコンポーネントに対しては、何も実行されません)の限界を表現しなければなりません。この方法はかなり散逸的ですが、安定しています。"
