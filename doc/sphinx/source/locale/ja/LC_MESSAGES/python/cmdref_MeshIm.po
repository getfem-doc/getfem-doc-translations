# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-18 02:17+0000\n"
"PO-Revision-Date: 2018-07-16 07:18+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/python/cmdref_MeshIm.rst:8
msgid "MeshIm"
msgstr "MeshIm"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:1
msgid "GetFEM MeshIm object"
msgstr "GetFEM MeshIm オブジェクト"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:3
msgid ""
"This object represents an integration method defined on a whole mesh (an  "
"potentially on its boundaries)."
msgstr "このオブジェクトは，メッシュ全体で定義された積分法を表します(潜在的に境界にあります)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:7
msgid "General constructor for MeshIm objects"
msgstr "MeshImオブジェクトの汎用的なコンストラクタ"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:9
msgid ""
"``MIM = MeshIm('load', string fname[, Mesh m])`` Load a MeshIm from a file."
msgstr "``MIM = MeshIm('load', string fname[, Mesh m])`` ファイルからMeshImをロードします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:12
msgid ""
"If the mesh `m` is not supplied (this kind of file does not store the mesh),"
" then it is read from the file and its descriptor is returned as the second "
"output argument."
msgstr ""
"メッシュ `m` "
"が与えられなかった場合(この種類のファイルにはメッシュは保存されません)，ファイルから読み込まれ，そのdescriptorが2番目の出力引数として返されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:16
msgid ""
"``MIM = MeshIm('from string', string s[, Mesh m])`` Create a MeshIm object "
"from its string description."
msgstr ""
"``MIM = MeshIm('from string', string s[, Mesh m])`` は文字列から MeshIm "
"オブジェクトを作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:19
msgid "See also ``MeshIm.char()``"
msgstr "``MeshIm.char()`` も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:21
msgid "``MIM = MeshIm('clone', MeshIm mim)`` Create a copy of a MeshIm."
msgstr "``MIM = MeshIm('clone', MeshIm mim)`` MeshImのコピーを作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:24
msgid ""
"``MIM = MeshIm('levelset', MeshLevelSet mls, string where, Integ im[, Integ "
"im_tip[, Integ im_set]])`` Build an integration method conformal to a "
"partition defined implicitly by a levelset."
msgstr ""
"``MIM = MeshIm('levelset', MeshLevelSet mls, string where, Integ im[, Integ "
"im_tip[, Integ im_set]])`` levelsetによって暗黙的に定義されたパーティションに準拠する積分法を構築します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:28
msgid ""
"The `where` argument define the domain of integration with respect to the "
"levelset, it has to be chosen among 'ALL', 'INSIDE', 'OUTSIDE' and "
"'BOUNDARY'."
msgstr ""
"`where` 引数はlevelsetに関する積分領域を定義します．この引数は 'ALL', 'INSIDE', 'OUTSIDE' および "
"'BOUNDARY' の中から選択する必要があります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:32
msgid ""
"it can be completed by a string defining the boolean operation to define the"
" integration domain when there is more than one levelset."
msgstr "複数のlevelsetがある場合は，ブール演算を定義する文字列を使用して積分領域を定義できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:35
msgid ""
"the syntax is very simple, for example if there are 3 different levelset,"
msgstr "構文は非常に単純です．たとえば，3つの異なるレベルセットがある場合，"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:38
msgid ""
"\"a*b*c\" is the intersection of the domains defined by each levelset (this "
"is the default behaviour if this function is not called)."
msgstr "\"a*b*c\" は各levelsetによって定義された領域の交差です(この関数が呼び出されない場合のデフォルトの動作です)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:42
msgid "\"a+b+c\" is the union of their domains."
msgstr "\"a+b+c\" は領域の結合です．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:44
msgid ""
"\"c-(a+b)\" is the domain of the third levelset minus the union of the "
"domains of the two others."
msgstr "\"c-(a+b)\" は第3levelsetの領域から他の二つの領域の和集合を引いたものです．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:47
msgid ""
"\"!a\" is the complementary of the domain of a (i.e. it is the domain where "
"a(x)>0)"
msgstr "\"!a\" は(すなわち a(x)>0 である)領域の補完領域です．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:50
msgid ""
"The first levelset is always referred to with \"a\", the second with \"b\", "
"and so on."
msgstr "最初のlevelsetは常に \"a\" で参照され，次のレベルセットは \"b\" で参照されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:53
msgid "for intance INSIDE(a*b*c)"
msgstr "インスタンス INSIDE(a*b*c) 用"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:55
msgid ""
"CAUTION: this integration method will be defined only on the element cut by "
"the level-set. For the 'ALL', 'INSIDE' and 'OUTSIDE' options it is mandatory"
" to use the method ``MeshIm.set_integ()`` to define the integration method "
"on the remaining elements."
msgstr ""
"注意：この積分法は level-set で切り取られた要素にのみ定義されます． 'ALL' ， 'INSIDE' と  'OUTSIDE' "
"オプションの場合は，必ず ``MeshIm.set_integ()`` メソッドを使って残りの要素の積分法を定義する必要があります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:60
msgid ""
"``MIM = MeshIm(Mesh m, [{Integ im|int im_degree}])`` Build a new MeshIm "
"object."
msgstr ""
"``MIM = MeshIm(Mesh m, [{Integ im|int im_degree}])`` 新しい MeshIm "
"オブジェクトを作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm:63
msgid ""
"For convenience, optional arguments (`im` or `im_degree`) can be provided, "
"in that case a call to ``MeshIm.integ()`` is issued with these arguments."
msgstr ""
"便宜上，オプションの引数( `im` または `im_degree` )を指定することもできます． ``MeshIm.integ()`` "
"への呼び出しがこれらの引数とともに出力されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.adapt:1
msgid ""
"For a MeshIm levelset object only. Adapt the integration methods to a change"
" of the levelset function."
msgstr "MeshIm levelsetオブジェクトの場合のみ使用します．levelset関数の変更に合わせて積分法を変更します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.char:1
msgid "Output a string description of the MeshIm."
msgstr "MeshImの説明を文字列で出力します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.char:3
msgid ""
"By default, it does not include the description of the linked Mesh object."
msgstr "既定値では，リンクされたメッシュオブジェクトの説明は含まれません．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.convex_index:1
msgid "Return the list of convexes who have a integration method."
msgstr "積分法がある凸のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.convex_index:3
msgid "Convexes who have the dummy IM_NONE method are not listed."
msgstr "ダミーの IM_NONE メソッドを持つ凸は表示されません．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.display:1
msgid "displays a short summary for a MeshIm object."
msgstr "MeshImオブジェクトの簡単な概要が表示されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.eltm:1
msgid ""
"Return the elementary matrix (or tensor) integrated on the convex `cv`."
msgstr "凸の `cv` 上で積分された基本行列(またはテンソル)を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.eltm:3
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.im_nodes:6
msgid "**WARNING**"
msgstr "**警告**"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.eltm:5
msgid ""
"Be sure that the fem used for the construction of `em` is compatible with "
"the fem assigned to element `cv` ! This is not checked by the function ! If "
"the argument `f` is given, then the elementary tensor is integrated on the "
"face `f` of `cv` instead of the whole convex."
msgstr ""
" `em` の作成に使用する有限要素法が，要素 `cv` に割り当てられた有限要素法と互換性があることを確認してください ! "
"これは関数によってチェックされません．引数 `f` が与えられた場合，基本テンソルは，全体の凸ではなく， `cv` の面 `f` 上で積分されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.im_nodes:1
msgid "Return the coordinates of the integration points, with their weights."
msgstr "積分点の座標とその重みを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.im_nodes:3
msgid ""
"`CVids` may be a list of convexes, or a list of convex faces, such as "
"returned by Mesh.region()"
msgstr "`CVids` は Mesh.region() によって返される凸のリストまたは凸面のリストです．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.im_nodes:8
msgid ""
"Convexes which are not part of the mesh, or convexes which do not have an "
"approximate integration method do not have their corresponding entry (this "
"has no meaning for exact integration methods!)."
msgstr "メッシュの一部でない凸，または近似積分法を持たない凸には，対応するエントリ(これは，厳密な積分法には意味がありません!)がありません．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.integ:1
msgid "Return a list of integration methods used by the MeshIm."
msgstr "MeshImで使用される積分法のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.integ:3
msgid ""
"`I` is an array of all Integ objects found in the convexes given in `CVids`."
" If `CV2I` was supplied as an output argument, it contains, for each convex "
"listed in `CVids`, the index of its correspounding integration method in "
"`I`."
msgstr ""
"`I` は `CVids` で与えられた凸にあるすべての整数オブジェクトの配列です． `CV2I` が出力引数として与えられた場合， `CVids` "
"に列挙されている各凸に対し， `I` における相関積分法のインデックスを含みます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.integ:8
msgid ""
"Convexes which are not part of the mesh, or convexes which do not have any "
"integration method have their correspounding entry in `CV2I` set to -1."
msgstr "メッシュの一部ではない凸，または積分法を持たない凸については， `CV2I` の対応エントリを-1に設定します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.linked_mesh:1
msgid "Returns a reference to the Mesh object linked to `mim`."
msgstr "`mim` にリンクされているMeshオブジェクトへの参照を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.memsize:1
msgid "Return the amount of memory (in bytes) used by the MeshIm object."
msgstr "MeshImオブジェクトによって使用されるメモリの量(バイト単位)を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.memsize:3
msgid "The result does not take into account the linked Mesh object."
msgstr "この結果では，リンクされたメッシュオブジェクトは考慮されません．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.save:1
msgid "Saves a MeshIm in a text file (and optionally its linked mesh object)."
msgstr "MeshImをテキストファイル(とオプションでリンクされたメッシュオブジェクト)に保存します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.set_integ:1
msgid ""
"Synopsis: MeshIm.set_integ(self,{Integ im|int im_degree}[, ivec CVids])"
msgstr "概要: MeshIm.set_integ(self,{Integ im|int im_degree}[, ivec CVids])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.set_integ:3
msgid "Set the integration method."
msgstr "積分法を設定します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.MeshIm.set_integ:5
msgid ""
"Assign an integration method to all convexes whose #ids are listed in "
"`CVids`. If `CVids` is not given, the integration is assigned to all "
"convexes. It is possible to assign a specific integration method with an "
"integration method handle `im` obtained via Integ('IM_SOMETHING'), or to let"
" getfem choose a suitable integration method with `im_degree` (choosen such "
"that polynomials of :math:`\\text{degree} \\leq \\text{im\\_degree}` are "
"exactly integrated. If `im_degree=-1`, then the dummy integration method "
"IM_NONE will  be used.)"
msgstr ""
"`CVids` に#idがリストされているすべての凸に積分法を割り当てます． `CVids` "
"が指定されていない場合，積分はすべての凸に割り当てられます． Integ('IM_SOMETHING') から取得した積分法ハンドル `im` "
"を用いて，特定の積分法を割り当てることもできるし， `im_degree` を用いて，getfemに適切な積分法を選択させることもできます．( "
":math:`\\text{degree} \\leq \\text{im\\_degree}` の多項式が正確に積分されるように選択します． "
"`im_degree=-1` の場合，ダミーの積分法 IM_NONE が使用されます．)．"
