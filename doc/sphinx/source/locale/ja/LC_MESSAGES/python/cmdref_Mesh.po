# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2020 GetFEM project
# This file is distributed under the same license as the GetFEM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM 5.4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-29 01:05+0000\n"
"PO-Revision-Date: 2018-07-16 07:17+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/python/cmdref_Mesh.rst:8
msgid "Mesh"
msgstr "Mesh"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:1
msgid "GetFEM Mesh object"
msgstr "GetFEM Meshオブジェクト"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:3
msgid ""
"This object is able to store any element in any dimension even if you mix "
"elements with different dimensions."
msgstr "このオブジェクトは，異なる次元の要素を混在させても，任意の次元の任意の要素を格納できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:9
msgid "General constructor for Mesh objects"
msgstr "Meshオブジェクトの汎用的なコンストラクタ"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:11
msgid "``M = Mesh('empty', int dim)`` Create a new empty mesh."
msgstr "``M = Mesh('empty', int dim)`` 新しい空のメッシュを作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:14
msgid ""
"``M = Mesh('cartesian', vec X[, vec Y[, vec Z,..]])`` Build quickly a "
"regular mesh of quadrangles, cubes, etc."
msgstr ""
"``M = Mesh('cartesian', vec X[, vec Y[, vec Z,..]])`` "
"四角形や立方体などの規則的なメッシュを素早く作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:17
msgid ""
"``M = Mesh('pyramidal', vec X[, vec Y[, vec Z,..]])`` Build quickly a "
"regular mesh of pyramids, etc."
msgstr ""
"``M = Mesh('pyramidal', vec X[, vec Y[, vec Z,..]])`` "
"ピラミッドなどの規則的なメッシュを素早く作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:20
msgid ""
"``M = Mesh('cartesian Q1', vec X, vec Y[, vec Z,..])`` Build quickly a "
"regular mesh of quadrangles, cubes, etc. with Q1 elements."
msgstr ""
"``M = Mesh('cartesian Q1', vec X, vec Y[, vec Z,..])`` "
"Q1要素で四角形や立方体などの規則的なメッシュを素早く作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:24
msgid ""
"``M = Mesh('triangles grid', vec X, vec Y)`` Build quickly a regular mesh of"
" triangles."
msgstr "``M = Mesh('triangles grid', vec X, vec Y)`` 三角形の規則的なメッシュを素早く作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:27
msgid ""
"This is a very limited and somehow deprecated function (See also "
"``Mesh('ptND')``, ``Mesh('regular simplices')`` and ``Mesh('cartesian')``)."
msgstr ""
"これは非常に限定された関数であり，何らかの理由で廃止された関数です( ``Mesh('ptND')``, ``Mesh('regular "
"simplices')`` と ``Mesh('cartesian')`` も参照)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:31
msgid ""
"``M = Mesh('regular simplices', vec X[, vec Y[, vec Z,...]]['degree', int "
"k]['noised'])`` Mesh a n-dimensional parallelepiped with simplices "
"(triangles, tetrahedrons etc) ."
msgstr ""
"``M = Mesh('regular simplices', vec X[, vec Y[, vec Z,...]]['degree', int "
"k]['noised'])`` 単純なメッシュ(三角形，四面体など)によるn元の平行四面体を作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:35
msgid ""
"The optional degree may be used to build meshes with non linear geometric "
"transformations."
msgstr "オプションの次数を使用して，非線形幾何変換でメッシュを構築できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:38
msgid ""
"``M = Mesh('curved', Mesh m, vec F)`` Build a curved (n+1)-dimensions mesh "
"from a n-dimensions mesh `m`."
msgstr ""
"``M = Mesh('curved', Mesh m, vec F)`` n次元のメッシュ `m` から曲 (n+1)次元のメッシュを構築します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:41
msgid ""
"The points of the new mesh have one additional coordinate, given by the "
"vector `F`. This can be used to obtain meshes for shells. `m` may be a "
"MeshFem object, in that case its linked mesh will be used."
msgstr ""
"新しいメッシュの点には，ベクトル `F` によって与えられる追加の座標が1つあります．これを使用して，シェルのメッシュを取得できます． `m` "
"はMeshFemオブジェクトも指定可能です．その場合はリンクされたメッシュが使用されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:45
msgid ""
"``M = Mesh('prismatic', Mesh m, int nl[, int degree])`` Extrude a prismatic "
"Mesh `M` from a Mesh `m`."
msgstr ""
"``M = Mesh('prismatic', Mesh m, int nl[, int degree])`` Mesh `M` から角柱Mesh "
"`M` を押し出します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:48
msgid ""
"In the additional dimension there are `nl` layers of elements distributed "
"from ``0`` to ``1``. If the optional parameter `degree` is provided with a "
"value greater than the default value of ``1``, a non-linear transformation "
"of corresponding degree is considered in the extrusion direction."
msgstr ""
"付加次元には， ``0`` から ``1`` に分布する要素の `nl` 層があります．オプションのパラメータ `degree` にデフォルト値 "
"``1`` より大きい値を指定すると，対応する次数の非線形変換が押し出し方向で考慮されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:54
msgid ""
"``M = Mesh('pt2D', mat P, imat T[, int n])`` Build a mesh from a 2D "
"triangulation."
msgstr "``M = Mesh('pt2D', mat P, imat T[, int n])`` 2次元三角形分割からメッシュを構築します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:57
msgid ""
"Each column of `P` contains a point coordinate, and each column of `T` "
"contains the point indices of a triangle. `n` is optional and is a zone "
"number. If `n` is specified then only the zone number `n` is converted (in "
"that case, `T` is expected to have 4 rows, the fourth containing these zone "
"numbers)."
msgstr ""
"`P` の各列は点座標を含み， `T` の各列は三角形の点インデックスを含みます． `n` はオプションであり，領域番号です． `n` "
"が指定された場合，領域番号 `n` のみが変換されます(この場合， `T` には4つの行があり，4行目には領域番号が入ります)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:65
msgid ""
"``M = Mesh('ptND', mat P, imat T)`` Build a mesh from a n-dimensional "
"\"triangulation\"."
msgstr "``M = Mesh('ptND', mat P, imat T)``  n次元 \"triangulation\" からメッシュを構築します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:68
msgid ""
"Similar function to 'pt2D', for building simplexes meshes from a "
"triangulation given in `T`, and a list of points given in `P`. The dimension"
" of the mesh will be the number of rows of `P`, and the dimension of the "
"simplexes will be the number of rows of `T`."
msgstr ""
"`T` で与えられた三角形分割と `P` で与えられた点のリストから単体メッシュを構築する 'pt2D' と同様の関数．メッシュの次元は `P` "
"の行数であり，単体の次元は `T` の行数です．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:73
msgid ""
"``M = Mesh('load', string filename)`` Load a mesh from a GetFEM ascii mesh "
"file."
msgstr ""
"``M = Mesh('load', string filename)``  GetFEM ASCIIメッシュファイルからメッシュをロードします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:76
msgid "See also ``Mesh.save(string filename)``."
msgstr "``Mesh.save(string filename)`` も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:78
msgid ""
"``M = Mesh('from string', string s)`` Load a mesh from a string description."
msgstr ""
"``M = Mesh('from string', string s)`` string descriptionからメッシュをロードします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:81
msgid "For example, a string returned by ``Mesh.char()``."
msgstr "例えば， ``Mesh.char()`` が返す文字列．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:83
msgid "``M = Mesh('import', string format, string filename)`` Import a mesh."
msgstr "``M = Mesh('import', string format, string filename)`` メッシュをインポートします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:86
msgid "`format` may be:"
msgstr "`format` には次のいずれかを指定できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:88
msgid "'gmsh' for a mesh created with `Gmsh`"
msgstr "'gmsh' は `Gmsh` で作成されたメッシュを表します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:89
msgid ""
"'gmsh_with_lower_dim_elt' for a mesh created with `Gmsh` and including "
"elements of lower dimension than the mesh"
msgstr "`Gmsh` で作成され，メッシュよりも低次元の要素を含むメッシュの 'gmsh_with_lower_dim_elt'"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:90
msgid "'gid' for a mesh created with `GiD`"
msgstr "'gid' は `GiD` で作成されたメッシュを表します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:91
msgid "'cdb' for a mesh created with `ANSYS`"
msgstr "'cdb' は `ANSYS` で作成されたメッシュを表します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:92
msgid "'am_fmt' for a mesh created with `EMC2`"
msgstr "'am_fmt' は `EMC2` で作成されたメッシュを表します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:94
msgid "``M = Mesh('clone', Mesh m2)`` Create a copy of a mesh."
msgstr "``M = Mesh('clone', Mesh m2)`` メッシュのコピーを作成します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh:97
msgid ""
"``M = Mesh('generate', MesherObject mo, scalar h[, int K = 1[, mat "
"vertices]])`` Call the experimental mesher of Getfem on the geometry "
"represented by `mo`. please control the conformity of the produced mesh. You"
" can help the mesher by adding a priori vertices in the array `vertices` "
"which should be of size ``n x m`` where ``n`` n is the dimension of the mesh"
" and ``m`` the number of points. `h` is approximate diameter of the "
"elements. `K` is the degree of the mesh ( > 1 for curved boundaries).  The "
"mesher try to optimize the quality of the elements. This operation may be "
"time consuming. Note that if the mesh generation fails, because of some "
"random procedure used, it can be run again since it will not give "
"necessarily the same result due to random procedures used. The messages send"
" to the console by the mesh generation can be deactivated using "
"`gf_util('trace level', 2)`. More information can be obtained by "
"`gf_util('trace level', 4)`. See ``MesherObject`` to manipulate geometric "
"primitives in order to describe the geometry."
msgstr ""
"``M = Mesh('generate', MesherObject mo, scalar h[, int K = 1[, mat "
"vertices]])`` `mo` はGetfemの実験的幾何メッシャーを指します．作成したメッシュの整合性は制御してください．配列  "
"`vertices` にアプリオリに頂点を追加して，メッシュの次元nを ``n`` ，点の数を ``m`` として，サイズを ``n x m`` "
"とすることで，メッシャーを支援できます． `h` は要素のおおよその直径です． `K` はメッシュの次数(>1 "
"曲線境界の場合)です．メッシャは要素の品質を最適化しようとします．この操作には時間がかかる場合があります．メッシュの生成が失敗した場合は，使用されたランダムプロシージャのために必ずしも同じ結果が得られないため，再度実行できます．メッシュ生成によってコンソールに送信されるメッセージは，"
"  `gf_util('trace level', 2)` を使って非アクティブにすることができる．より詳しい情報は  `gf_util('trace "
"level', 4)` で得ることができる．ジオメトリを記述するためにジオメトリプリミティブを操作するには， ``MesherObject`` "
"を参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.add_convex:1
msgid "Add a new convex into the mesh."
msgstr "メッシュに新しい凸包を追加します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.add_convex:3
msgid ""
"The convex structure (triangle, prism,...) is given by `GT` (obtained with "
"GeoTrans('...')), and its points are given by the columns of `PTS`. On "
"return, `CVIDs` contains the convex #ids. `PTS` might be a 3-dimensional "
"array in order to insert more than one convex (or a two dimensional array "
"correctly shaped according to Fortran ordering)."
msgstr ""
"凸包(三角形，プリズム，...)は `GT` (  GeoTrans('...') で取得されます)によって与えられ，その点は `PTS` "
"の列によって与えられます．返される `CVID` には凸包の #idが含まれます． `PTS` "
"は複数の凸包(またはFortranの次数に従って正しく形成された2次元配列)を挿入するための3次元配列の場合もあります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.add_point:1
msgid "Insert new points in the mesh and return their #ids."
msgstr "メッシュに新しいポイントを挿入し，その #id を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.add_point:3
msgid ""
"`PTS` should be an ``nxm`` matrix , where ``n`` is the mesh dimension, and "
"``m`` is the number of points that will be added to the mesh. On output, "
"`PIDs` contains the point #ids of these new points."
msgstr ""
"`PTS` は  ``nxm`` 行列でなければなりません．ここで ``n``  はメッシュの次元， ``m`` "
"はメッシュに追加される点の数です．出力では， `PID` にこれらの新しいポイントのポイント番号IDが含まれます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.add_point:8
msgid ""
"Remark: if some points are already part of the mesh (with a small tolerance "
"of approximately ``1e-8``), they won't be inserted again, and `PIDs` will "
"contain the previously assigned #ids of these points."
msgstr ""
"注: ( ``1e-8`` 程度の小さな許容範囲で)既にメッシュの一部になっているポイントがある場合，それらのポイントは再挿入されず， `PIDs` "
"には以前に割り当てられた #id のポイントが含まれます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.adjacent_face:1
msgid ""
"Return convex face of the neighbor element if it exists. If the convex have "
"more than one neighbor relatively to the face ``f`` (think to bar elements "
"in 3D for instance), return the first face found."
msgstr ""
"存在する場合，隣接する要素の凸包面を返します．凸包が面 ``f`` "
"(例えば，3次元で要素を抑制することを考える)に対して相対的に隣接する面を複数持つ場合，最初に見つかった面を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.all_faces:1
msgid ""
"Return the set of faces of the in CVIDs (in all the mesh if CVIDs is "
"omitted). Note that the face shared by two neighbor elements will be "
"represented twice."
msgstr ""
"CVID(CVIDが省略されている場合，すべてのメッシュで)での面の集合を返します．2つの隣接する要素が共有する面が2回表示されることに注意してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.boundaries:1
msgid "DEPRECATED FUNCTION. Use 'regions' instead."
msgstr "非推奨関数です．代わりに 'regions' を使用してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.boundary:1
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.set_boundary:1
msgid "DEPRECATED FUNCTION. Use 'region' instead."
msgstr "非推奨関数です．代わりに 'regions' を使用してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.char:1
msgid "Output a string description of the mesh."
msgstr "メッシュのstring descriptionを出力します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.convex_area:1
msgid "Return an estimate of the area of each convex."
msgstr "各凸包の面積の推定値を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.convex_radius:1
msgid "Return an estimate of the radius of each convex."
msgstr "各凸包の半径の推定値を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.convexes_in_box:1
msgid ""
"Return the set of convexes lying entirely within the box defined by the "
"corner points `pmin` and `pmax`."
msgstr "コーナーポイント  `pmin` と `pmax` で定義されたボックス内に完全に収まる凸包集合を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.convexes_in_box:3
msgid ""
"The output `CVIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). If "
"`CVIDs` is given, it returns portion of the boundary of the convex set "
"defined by the #ids listed in `CVIDs`."
msgstr ""
"出力される `CVID` は二行行列で，最初の行には凸の#idがリストされ，次の行には面の番号(凸包のローカル番号)がリストされます． `CVID` "
"が指定された場合， `CVID` にリストされた#idによって定義される凸包集合の境界の一部を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.curved_edges:1
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.edges:3
msgid "[OBSOLETE FUNCTION! will be removed in a future release]"
msgstr "[廃止される関数! 将来のリリースで削除される予定です]"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.curved_edges:3
msgid ""
"Return E and C. More sophisticated version of Mesh.edges() designed for "
"curved elements. This one will return N (N>=2) points of the (curved) edges."
" With N==2, this is equivalent to Mesh.edges(). Since the points are no more"
" always part of the mesh, their coordinates are returned instead of points "
"number, in the array E which is a [ mesh_dim x 2 x nb_edges ] array.  If the"
" optional output argument C is specified, it will contain the convex number "
"associated with each edge."
msgstr ""
"EとCを返します．曲線要素用に設計された Mesh.edges() "
"のより洗練されたバージョン．これは(曲がった)エッジのN(N>=2)点を返します．N==2の場合，これは Mesh.edges() "
"と同等です．点は常にメッシュの一部ではないため， [ mesh_dim x 2 x nb_edges ] "
"配列である配列Eで，点の番号の代わりに座標が返されます．オプションの出力引数Cを指定すると，各エッジに関連付けられた凸包の番号が含まれます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvid:1
msgid "Return the list of all convex #id."
msgstr "すべての凸包#idのリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvid:3
msgid ""
"Note that their numbering is not supposed to be contiguous from 0 to "
"Mesh.nbcvs()-1, especially if some points have been removed from the mesh. "
"You can use Mesh.optimize_structure() to enforce a contiguous numbering."
msgstr ""
"番号付けは，特にメッシュからいくつかのポイントが削除された場合は，0から Mesh.nbcvs()-1 まで連続していないことに注意してください． "
"Mesh.optimize_structure() を使用すると，連続した番号付けが行われます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvid_from_pid:1
msgid "Return convex #ids related with the point #ids given in `PIDs`."
msgstr "`PIDs` で指定されたポイント #ids に関連する凸包 #ids を戻します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvid_from_pid:3
msgid ""
"If `share=False`, search convex whose vertex #ids are in `PIDs`. If "
"`share=True`, search convex #ids that share the point #ids given in `PIDs`. "
"`CVIDs` is a  vector (possibly empty)."
msgstr ""
"`share=False` の場合は，頂点#idsが `PIDs` にある凸包を検索します． `share=True` の場合は，  `PIDs` "
"で指定されたポイント #ids を共有する凸包 #ids を検索します． `CVIDs` は(空である可能性がある)ベクトルです．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvstruct:1
msgid "Return an array of the convex structures."
msgstr "凸包構造の配列を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.cvstruct:3
msgid ""
"If `CVIDs` is not given, all convexes are considered. Each convex structure "
"is listed once in `S`, and `CV2S` maps the convexes indice in `CVIDs` to the"
" indice of its structure in `S`."
msgstr ""
"`CVIDs` が指定されていない場合，すべての凸包が考慮されます．各凸包構造は `S` に1つずつ記載されており， `CV2S` は `CVIDs` "
"の凸包のインデックスを `S` の構造インデックスにマップしています．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_convex:1
msgid "Remove one or more convexes from the mesh."
msgstr "メッシュから1つまたは複数の凸包を削除します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_convex:3
msgid ""
"`CVIDs` should contain the convexes #ids, such as the ones returned by the "
"'add convex' command."
msgstr "`CVIDs` には 'add convex' コマンドで返されるような凸包 #id を含める必要があります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_convex_of_dim:1
msgid "Remove all convexes of dimension listed in `DIMs`."
msgstr "`DIMs` に表示されている次元の凸包をすべて削除します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_convex_of_dim:3
msgid ""
"For example; ``Mesh.del_convex_of_dim([1,2])`` remove all line segments, "
"triangles and quadrangles."
msgstr "例えば ``Mesh.del_convex_of_dim([1,2])`` はすべての線区分，三角形，四角形を削除します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_point:1
msgid "Removes one or more points from the mesh."
msgstr "メッシュから1つまたは複数のポイントを削除します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.del_point:3
msgid ""
"`PIDs` should contain the point #ids, such as the one returned by the 'add "
"point' command."
msgstr "`PIDs` は 'add point' コマンドで返されるポイントである #ids などを指定する必要があります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.delete_boundary:1
msgid "DEPRECATED FUNCTION. Use 'delete region' instead."
msgstr "非推奨関数です．代わりに 'delete region' を使用してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.delete_region:1
msgid "Remove the regions whose #ids are listed in `RIDs`"
msgstr "`RIDs` にリストされている領域 #id を削除します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.dim:1
msgid "Get the dimension of the mesh (2 for a 2D mesh, etc)."
msgstr "メッシュの次元を取得します(2次元メッシュに対して2など)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.display:1
msgid "displays a short summary for a Mesh object."
msgstr "Meshオブジェクトの簡単な概要を表示します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.edges:1
msgid "Synopsis: [E,C] = Mesh.edges(self [, CVLST][, 'merge'])"
msgstr "概要: [E,C] = Mesh.edges(self [, CVLST][, 'merge'])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.edges:5
msgid ""
"Return the list of edges of mesh M for the convexes listed in the row vector"
" CVLST. E is a 2 x nb_edges matrix containing point indices. If CVLST is "
"omitted, then the edges of all convexes are returned. If CVLST has two rows "
"then the first row is supposed to contain convex numbers, and the second "
"face numbers, of which the edges will be returned.  If 'merge' is indicated,"
" all common edges of convexes are merged in a single edge.  If the optional "
"output argument C is specified, it will contain the convex number associated"
" with each edge."
msgstr ""
"行ベクトルCVLSTにリストされている凸包のメッシュMのエッジのリストを返します．Eはポイントインデックスを含む 2 x nb_edges "
"行列です．CVLSTを省略すると，すべての凸包のエッジが返されます．CVLSTに2つの行がある場合，最初の行には凸包の数が含まれ，2番目の行には面の数が返されます．"
" 'merge' "
"が指定されている場合，凸包のすべての共通エッジが単一エッジにマージされます．オプションの出力引数Cを指定すると，各エッジに関連付けられた凸包の番号が含まれます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_dx:1
msgid ""
"Synopsis: Mesh.export_to_dx(self, string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])"
msgstr ""
"概要: Mesh.export_to_dx(self, string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_dx:3
msgid "Exports a mesh to an OpenDX file."
msgstr "メッシュをOpenDXファイルに書き出します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_dx:5
msgid "See also MeshFem.export_to_dx(), Slice.export_to_dx()."
msgstr "MeshFem.export_to_dx(), Slice.export_to_dx() も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_pos:1
msgid "Exports a mesh to a POS file ."
msgstr "メッシュをPOSファイルに書き出します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_pos:3
msgid "See also MeshFem.export_to_pos(), Slice.export_to_pos()."
msgstr "MeshFem.export_to_pos(), Slice.export_to_pos() も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtk:1
msgid ""
"Synopsis: Mesh.export_to_vtk(self, string filename, ... "
"[,'ascii'][,'quality'])"
msgstr ""
"概要: Mesh.export_to_vtk(self, string filename, ... [,'ascii'][,'quality'])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtk:3
msgid "Exports a mesh to a VTK file ."
msgstr "メッシュをVTKファイルに書き出します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtk:5
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtu:5
msgid ""
"If 'quality' is specified, an estimation of the quality of each convex will "
"be written to the file."
msgstr "'quality' が指定された場合，各凸包の品質の見積りがファイルに書き込まれます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtk:8
msgid "See also MeshFem.export_to_vtk(), Slice.export_to_vtk()."
msgstr " MeshFem.export_to_vtk(), Slice.export_to_vtk() も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtu:1
msgid ""
"Synopsis: Mesh.export_to_vtu(self, string filename, ... "
"[,'ascii'][,'quality'])"
msgstr ""
"概要: Mesh.export_to_vtu(self, string filename, ... [,'ascii'][,'quality'])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtu:3
msgid "Exports a mesh to a VTK(XML) file ."
msgstr "メッシュをVTK (XML) ファイルにエクスポートします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.export_to_vtu:8
msgid "See also MeshFem.export_to_vtu(), Slice.export_to_vtu()."
msgstr " MeshFem.export_to_vtu(), Slice.export_to_vtu() も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.extend_region:1
msgid ""
"Extends the region identified by the region number `rnum` to include the set"
" of convexes or/and convex faces provided in the matrix `CVFIDs`, see also "
"``Mesh.(set region)``."
msgstr ""
"領域番号 `rnum` で識別される領域を拡張して，マトリックス `CVFIDs` に与えられた凸包または凸包面あるいはその両方の集合を含めます． "
"``Mesh.(set region)`` も参照．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.faces_from_cvid:1
msgid "Synopsis: CVFIDs = Mesh.faces_from_cvid(self[, ivec CVIDs][, 'merge'])"
msgstr "概要: CVFIDs = Mesh.faces_from_cvid(self[, ivec CVIDs][, 'merge'])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.faces_from_cvid:3
msgid "Return a list of convex faces from a list of convex #id."
msgstr "凸包 #id のリストから凸包面のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.faces_from_cvid:5
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). If `CVIDs` is not "
"given, all convexes are considered. The optional argument 'merge' merges "
"faces shared by the convex of `CVIDs`."
msgstr ""
"`CVFIDs` は2行の行列で，最初の行には凸包の#idがリストされ，2番目の行には面番号(凸包のローカル番号)がリストされます． `CVIDs` "
"が指定されていない場合，すべての凸包が対象となります．オプションの引数 'merge' は `CVIDs` の凸包が共有している面を結合します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.faces_from_pid:1
msgid "Return the convex faces whose vertex #ids are in `PIDs`."
msgstr "頂点 #ids が `PIDs` にある凸包面を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.faces_from_pid:3
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). For a convex face to"
" be returned, EACH of its points have to be listed in `PIDs`."
msgstr ""
"`CVFIDs` "
"は2行の行列で，最初の行には凸包の#idがリストされ，2番目の行には面番号(凸包のローカル番号)がリストされます．凸包面を返すには，その各点を "
"`PIDs` にリストする必要があります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.geotrans:1
msgid "Returns an array of the geometric transformations."
msgstr "幾何変換の配列を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.geotrans:3
msgid "See also Mesh.cvstruct()."
msgstr "Mesh.cvstruct() も参照してください．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.inner_faces:1
msgid ""
"Return the set of faces shared at least by two elements in CVIDs. Each face "
"is represented only once and is arbitrarily chosen between the two neighbor "
"elements."
msgstr "CVIDの2つ以上の要素が共有する面の集合を返します．各面は1回だけ表示され，2つの隣接エレメントの間で任意に選択されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.max_cvid:1
msgid "Return the maximum #id of all convexes in the mesh (see 'max pid')."
msgstr "メッシュ内のすべての凸包の最大#idを返します( 'max pid' を参照してください．)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.max_pid:1
msgid "Return the maximum #id of all points in the mesh (see 'max cvid')."
msgstr "メッシュ内のすべてのポイントの最大 #id を返します( 'max cvid' を参照してください)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.memsize:1
msgid "Return the amount of memory (in bytes) used by the mesh."
msgstr "メッシュが使用するメモリの量(バイト単位)を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.merge:1
msgid "Merge with the Mesh `m2`."
msgstr "メッシュ `m2` とマージします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.merge:3
msgid ""
"Overlapping points, within a tolerance radius `tol`, will not be duplicated."
" If `m2` is a MeshFem object, its linked mesh will be used."
msgstr ""
"許容半径 `tol` 内の重複ポイントは複製されません． `m2` がMeshFemオブジェクトの場合は，そのリンクされたメッシュが使用されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.nbcvs:1
msgid "Get the number of convexes of the mesh."
msgstr "メッシュの凸包の数を取得します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.nbpts:1
msgid "Get the number of points of the mesh."
msgstr "メッシュのポイント数を取得します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.normal_of_face:1
msgid ""
"Return the normal vector of convex `cv`, face `f` at the `nfpt` point of the"
" face."
msgstr "面の `nfpt` 点で凸包の `cv` ，面 `f` の法線ベクトルを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.normal_of_face:3
msgid ""
"If `nfpt` is not specified, then the normal is evaluated at each geometrical"
" node of the face."
msgstr "`nfpt` が指定されていない場合，法線は面の各ジオメトリノードで評価されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.normal_of_faces:1
msgid "Return matrix of (at face centers) the normal vectors of convexes."
msgstr "凸包の(面の中心の)法線ベクトルの行列を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.normal_of_faces:3
msgid ""
"`CVFIDs` is supposed a two-rows matrix, the first row lists convex #ids, and"
" the second lists face numbers (local number in the convex)."
msgstr "CVFIDは2行の行列を想定しており，最初の行は凸包の #id をリストし，2番目の行は面番号(凸包のローカル番号)をリストしています．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.optimize_structure:1
msgid "Reset point and convex numbering."
msgstr "点および凸包の番号付けをリセットします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.optimize_structure:3
msgid ""
"After optimisation, the points (resp. convexes) will be consecutively "
"numbered from ``0`` to ``Mesh.max_pid()-1`` (resp. ``Mesh.max_cvid()-1``)."
msgstr ""
"最適化後，ポイント (resp. convexes) には連続して ``0`` から ``Mesh.max_pid()-1`` (resp. "
"``Mesh.max_cvid()-1``) まで番号が付けられます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.orphaned_pid:1
msgid "Return point #id which are not linked to a convex."
msgstr "凸包にリンクされていないポイント #id を返す．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces:1
msgid "Synopsis: CVFIDs = Mesh.outer_faces(self[, dim][, CVIDs])"
msgstr "概要: CVFIDs = Mesh.outer_faces(self[, dim][, CVIDs])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces:3
msgid "Return the set of faces not shared by two elements."
msgstr "2つの要素で共有されていない面の集合を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces:5
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). If `dim`"
" is provided, the function is forced to detect faces of elements that have "
"dimension `dim`, e.g. `dim`=2 will detect edges of surface elements, even if"
" these belong to a 3D mesh. If `CVIDs` is not given, all convexes are "
"considered, and the function basically returns the mesh boundary. If `CVIDs`"
" is given, it returns the boundary of the convex set whose #ids are listed "
"in `CVIDs`."
msgstr ""
"出力される `CVFIDs` は2行の行列で，最初の行は凸包 #ids をリストし，2番目の行は面番号(凸包の局所数)をリストします． `dim` "
"が指定されている場合，この関数は強制的に次元 `dim` を持つ要素の面を検出します．たとえば， `dim` "
"=2の場合，3次元メッシュに属するサーフェス要素のエッジを検出します． `CVID` "
"が与えられない場合，全ての凸包が考慮され，この関数は基本的にメッシュ境界を返します． `CVIDs` を指定すると， `CVIDs` に #ids "
"が列挙されている凸包集合の境界を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_ball:1
msgid ""
"Synopsis: CVFIDs = Mesh.outer_faces_in_ball(self, vec center, scalar "
"radius[, dim][, CVIDs])"
msgstr ""
"概要: CVFIDs = Mesh.outer_faces_in_ball(self, vec center, scalar radius[, "
"dim][, CVIDs])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_ball:3
msgid ""
"Return the set of faces not shared by two convexes and lying within the ball"
" of corresponding `center` and `radius`."
msgstr "2つの凸形によって共有されておらず，対応する `center` と `radius` の球内にある面の集合を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_ball:5
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_box:5
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_with_direction:5
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex #ids, "
"and the second one lists face numbers (local number in the convex). The "
"argument `dim` works as in outer_faces(). If `CVIDs` is given, it returns "
"portion of the boundary of the convex set defined by the #ids listed in "
"`CVIDs`."
msgstr ""
"出力される `CVFIDs` は2行の行列であり，最初の行は凸包の #ids をリストし，2番目の行は面番号(凸包の局所番号)をリストします．引数 "
"`dim` は outer_faces() と同様に機能します． `CVIDs` が指定された場合， `CVIDs` にリストされた #id "
"によって定義される凸包集合の境界の一部を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_box:1
msgid ""
"Synopsis: CVFIDs = Mesh.outer_faces_in_box(self, vec pmin, vec pmax[, dim][,"
" CVIDs])"
msgstr ""
"概要: CVFIDs = Mesh.outer_faces_in_box(self, vec pmin, vec pmax[, dim][, "
"CVIDs])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_in_box:3
msgid ""
"Return the set of faces not shared by two convexes and lying within the box "
"defined by the corner points `pmin` and `pmax`."
msgstr ""
"2つの凸包によって共有されておらず，コーナーポイント `pmin` と `pmax` によって定義されるボックス内にある面の集合を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_with_direction:1
msgid ""
"Synopsis: CVFIDs = Mesh.outer_faces_with_direction(self, vec v, scalar "
"angle[, dim][, CVIDs])"
msgstr ""
"概要: CVFIDs = Mesh.outer_faces_with_direction(self, vec v, scalar angle[, "
"dim][, CVIDs])"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.outer_faces_with_direction:3
msgid ""
"Return the set of faces not shared by two convexes and with a mean outward "
"vector lying within an angle `angle` (in radians) from vector `v`."
msgstr ""
"2つの凸包によって共有されておらず，平均外向きベクトルがベクトル `v` からの角度 `angle` (ラジアン)内にある面の集合を返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid:1
msgid "Return the list of points #id of the mesh."
msgstr "メッシュのポイント #id のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid:3
msgid ""
"Note that their numbering is not supposed to be contiguous from 0 to "
"Mesh.nbpts()-1, especially if some points have been removed from the mesh. "
"You can use Mesh.optimize_structure() to enforce a contiguous numbering."
msgstr ""
"番号付けは，0から Mesh.nbpts()-1 まで連続していないことに注意してください． Mesh.optimize_structure() "
"を使用すると，連続した番号付けが行われます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_from_coords:1
msgid "Return point #id whose coordinates are listed in `PTS`."
msgstr "座標が `PTS` にリストされているポイント #id を戻す．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_from_coords:3
msgid ""
"`PTS` is an array containing a list of point coordinates. On return, `PIDs` "
"is a vector containing points #id for each point found in `eps` range, and "
"-1 for those which where not found in the mesh."
msgstr ""
"`PTS` は，点の座標のリストを含む配列です．返される `PIDs` は， `eps` の範囲内で見つかった各ポイントのポイント #id "
"です．メッシュ内で見つからなかった場合には -1 が返されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_from_cvid:1
msgid "Return the points attached to each convex of the mesh."
msgstr "メッシュの各凸包に取り付けられたポイントを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_from_cvid:3
msgid ""
"If `CVIDs` is omitted, all the convexes will be considered (equivalent to "
"`CVIDs = Mesh.max_cvid()`). `IDx` is a vector, length(IDx) = "
"length(CVIDs)+1. `Pid` is a vector containing the concatenated list of #id "
"of points of each convex in `CVIDs`. Each entry of `IDx` is the position of "
"the corresponding convex point list in `Pid`. Hence, for example, the list "
"of #id of points of the second convex is Pid[IDx(2):IDx(3)]."
msgstr ""
"`CVIDs` ( `CVIDs = Mesh.max_cvid()` と同じです)を省略すると，すべての凸包が対象となります． `IDx` "
"はベクトルであり， length(IDx) = length(CVIDs)+1 です． `Pid` は `CVIDs` における各凸包の点の #id "
"の連結リストを含むベクトルです． `IDx` の各エントリは， `Pid` の対応する凸包点リストの位置です．したがって，例えば，第2凸包の点の #id"
" のリストは Pid[IDx(2):IDx(3)] です．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_from_cvid:12
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pts_from_cvid:13
msgid ""
"If `CVIDs` contains convex #id which do not exist in the mesh, their point "
"list will be empty."
msgstr "`CVIDs` にメッシュに存在しない凸包の#idが含まれている場合，点リストは空になります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_cvids:1
msgid "Return point #id listed in `CVIDs`."
msgstr "`CVIDs` にリストされているポイント #id を戻す．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_cvids:3
#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_regions:3
msgid "`PIDs` is a vector containing points #id."
msgstr "`PIDs` はポイント #id を含むベクトルです．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_faces:1
msgid "Return point #id listed in `CVFIDs`."
msgstr "`CVFIDs` にリストされているポイント #id を戻す．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_faces:3
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers. On return, `PIDs` is a vector containing points "
"#id."
msgstr ""
"`CVFIDs` は2行の行列で，最初の行には凸包の #id がリストされ，2番目の行には面の番号がリストされます．返される  `PIDs` "
"は，点#idを含むベクトルです．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pid_in_regions:1
msgid "Return point #id listed in `RIDs`."
msgstr "`RIDs` にリストされているポイント #id を戻す．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pts:1
msgid "Return the list of point coordinates of the mesh."
msgstr "メッシュのポイントの座標リストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pts:3
msgid ""
"Each column of the returned matrix contains the coordinates of one point. If"
" the optional argument `PIDs` was given, only the points whose #id is listed"
" in this vector are returned. Otherwise, the returned matrix will have "
"Mesh.max_pid() columns, which might be greater than Mesh.nbpts() (if some "
"points of the mesh have been destroyed and no call to "
"Mesh.optimize_structure() have been issued). The columns corresponding to "
"deleted points will be filled with NaN. You can use Mesh.pid() to filter "
"such invalid points."
msgstr ""
"返されるマトリックスの各列には，各点の座標が含まれます．オプションの引数 `PIDs` が指定された場合，このベクトルに #id "
"がリストされているポイントのみが返されます．それ以外の場合，返されるマトリックスはMesh.max_pid() "
"列になります．(メッシュの一部のポイントが破棄され， Mesh.optimize_structure() が呼び出されていない場合) "
"Mesh.nbpts() より大きい可能性があります．削除された点に対応する列はNaNで埋められます．そのような空のポイントを取り除くには "
"Mesh.pid() を使用します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pts_from_cvid:1
msgid "Search point listed in `CVID`."
msgstr "`CVID` にリストされているポイントの検索．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.pts_from_cvid:3
msgid ""
"Return `Pts` and `IDx`. If `CVIDs` is omitted, all the convexes will be "
"considered (equivalent to `CVIDs = Mesh.max_cvid()`). `IDx` is a vector, "
"length(IDx) = length(CVIDs)+1. `Pts` is a vector containing the concatenated"
" list of points of each convex in `CVIDs`. Each entry of `IDx` is the "
"position of the corresponding convex point list in `Pts`. Hence, for "
"example, the list of points of the second convex is Pts[:,IDx[2]:IDx[3]]."
msgstr ""
"`Pts` と `IDx` を返します． `CVIDs` ( `CVIDs = Mesh.max_cvid()` "
"と同じです)を省略すると，すべての凸包が考慮されます． `IDx` はベクトルであり，length(IDx) = length(CVIDs)+1 です．"
" `Pts` は `CVIDs` における各凸包の点の連結リストを含むベクトルです． `IDx` の各エントリは `Pts` "
"の対応する凸包ポイントリストの位置です．したがって，例えば，第2凸包のポイントのリストは Pts[:,IDx[2]:IDx[3]] となります．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.quality:1
msgid ""
"Return an estimation of the quality of each convex (:math:`0 \\leq Q \\leq "
"1`)."
msgstr "各凸包の品質の推定値を返します (:math:`0 \\leq Q \\leq 1`) ．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.refine:1
msgid "Use a Bank strategy for mesh refinement."
msgstr "メッシュの改善には Bank の方法を使用します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.refine:3
msgid ""
"If `CVIDs` is not given, the whole mesh is refined. Note that the regions, "
"and the finite element methods and integration methods of the MeshFem and "
"MeshIm objects linked to this mesh will be automagically refined."
msgstr ""
"`CVIDs` "
"が指定されていない場合，メッシュ全体が洗練されます．このメッシュにリンクされたMeshFemオブジェクトとMeshImオブジェクトの領域，有限要素法，および積分法は，自動的に洗練されます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.region:1
msgid "Return the list of convexes/faces on the regions `RIDs`."
msgstr "領域  `RIDs` 上の凸包/面のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.region:3
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). (and -1 when the "
"whole convex is in the regions)."
msgstr ""
"`CVFIDs` は2行の行列で，最初の行には凸包の #id "
"がリストされ，2番目の行には面番号(凸包のローカル番号)がリストされます．(凸包全体が領域内にある場合は -1 です)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.region_intersect:1
msgid ""
"Replace the region number `r1` with its intersection with region number "
"`r2`."
msgstr "領域番号  `r1` を領域番号 `r2` との交差部分に置き換えます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.region_merge:1
msgid "Merge region number `r2` into region number `r1`."
msgstr "領域番号 `r2` を領域番号 `r1` にマージします．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.region_subtract:1
msgid ""
"Replace the region number `r1` with its difference with region number `r2`."
msgstr "領域番号 `r1` を領域番号 `r2` との差分に置き換えます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.regions:1
msgid "Return the list of valid regions stored in the mesh."
msgstr "メッシュに保存されている有効な領域のリストを返します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.save:1
msgid "Save the mesh object to an ascii file."
msgstr "メッシュオブジェクトをASCIIファイルに保存します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.save:3
msgid "This mesh can be restored with Mesh('load', filename)."
msgstr "このメッシュは Mesh('load', filename) で復元できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.set_pts:1
msgid "Replace the coordinates of the mesh points with those given in `PTS`."
msgstr "メッシュ点の座標を `PTS` で指定された座標に置き換えます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.set_region:1
msgid ""
"Assigns the region number `rnum` to the set of convexes or/and convex faces "
"provided in the matrix `CVFIDs`."
msgstr "領域番号 `rnum` を，行列 `CVFIDs` に提供されている凸包または凸包面，あるいはその両方の集合に割り当てます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.set_region:4
msgid ""
"The first row of `CVFIDs` contains convex #ids, and the second row contains "
"a face number in the convex (or ``-1`` for the whole convex (regions are "
"usually used to store a list of convex faces, but you may also use them to "
"store a list of convexes)."
msgstr ""
"`CVFIDs` の最初の行は凸包の #id を含み，二番目の行は凸包の中に面番号を含みます (または凸包全体として ``-1`` "
"(領域は通常，凸包面のリストを格納するために使用されますが，凸包面のリストを格納するために使用することもできます)．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.set_region:9
msgid ""
"If a vector is provided (or a one row matrix) the region will represent the "
"corresponding set of convex."
msgstr "ベクトル(または1行の行列)が与えられる場合，領域は対応する凸包集合を表します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.transform:1
msgid "Applies the matrix `T` to each point of the mesh."
msgstr "メッシュの各点にマトリックス `T` を適用します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.transform:3
msgid ""
"Note that `T` is not required to be a ``NxN`` matrix (with ``N = "
"Mesh.dim()``). Hence it is possible to transform a 2D mesh into a 3D one "
"(and reciprocally)."
msgstr ""
"なお， `T` は ``NxN`` ( ``N = Mesh.dim()`` "
")行列である必要はありません．したがって，2次元メッシュを3次元メッシュに(相互に)変換できます．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.translate:1
msgid "Translates each point of the mesh from `V`."
msgstr "メッシュの各点を `V` から移動します．"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.triangulated_surface:1
msgid "[DEPRECATED FUNCTION! will be removed in a future release]"
msgstr "[非推奨! は将来のリリースで削除される予定です]"

#: ../../../../../../venv/lib/python3.8/site-packages/getfem/getfem.pydocstring
#: of getfem.getfem.Mesh.triangulated_surface:3
msgid ""
"Similar function to Mesh.curved_edges() : split (if necessary, i.e. if the "
"geometric transformation if non-linear) each face into sub-triangles and "
"return their coordinates in T (see also gf_compute('eval on P1 tri mesh'))"
msgstr ""
"Mesh.curved_edges() に似た関数です．各面をサブ三角形に分割(必要に応じて，つまり非線形の場合は幾何変換)して，T "
"(gf_compute('eval on P1 tri mesh')を参照)の座標を返します．"
