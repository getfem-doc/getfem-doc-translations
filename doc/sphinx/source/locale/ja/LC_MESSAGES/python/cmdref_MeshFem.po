# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-11 03:32+0000\n"
"PO-Revision-Date: 2018-07-16 07:17+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/travis/build/getfem-doc/getfem-doc-translations/getfem/doc/sphinx/source/python/cmdref_MeshFem.rst:8
msgid "MeshFem"
msgstr "MeshFem"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:1
msgid "GeFEM MeshFem object"
msgstr "GetFEM MeshFemオブジェクト"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:3
msgid ""
"This object represents a finite element method defined on a whole mesh."
msgstr "このオブジェクトは、メッシュ全体で定義された有限要素法を表します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:6
msgid "General constructor for MeshFem objects"
msgstr "MeshFemオブジェクトの汎用的なコンストラクタ"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:8
msgid ""
"``MF = MeshFem(Mesh m[, int Qdim1=1[, int Qdim2=1, ...]])`` Build a new "
"MeshFem object."
msgstr ""
"``MF = MeshFem(Mesh m[, int Qdim1=1[, int Qdim2=1, ...]])`` "
"新しいMeshFemオブジェクトを構築します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:11
msgid ""
"The `Qdim` parameters specifies the dimension of the field represented by "
"the finite element method. Qdim1 = 1 for a scalar field, Qdim1 = n for a "
"vector field off size n, Qdim1=m, Qdim2=n for a matrix field of size mxn ..."
" Returns the handle of the created object."
msgstr ""
"`Qdim` パラメータは、有限要素法によって表されるフィールドの次元を指定します。スカラー場の場合はQdim1 = "
"1、サイズn以外のベクトル場の場合は Qdim1 = n 、サイズ mxn の行列場の場合はQdim1=m、Qdim2=n ... "
"作成されたオブジェクトのハンドルを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:17
msgid ""
"``MF = MeshFem('load', string fname[, Mesh m])`` Load a MeshFem from a file."
msgstr ""
"``MF = MeshFem('load', string fname[, Mesh m])`` ファイルからMeshFemをロードします。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:20
msgid ""
"If the mesh `m` is not supplied (this kind of file does not store the mesh),"
" then it is read from the file `fname` and its descriptor is returned as the"
" second output argument."
msgstr ""
"メッシュ `m` が与えられない場合(この種類のファイルにはメッシュは保存されません)、ファイル `fname` "
"から読み込まれ、そのディスクリプタが第2の出力引数として返されます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:24
msgid ""
"``MF = MeshFem('from string', string s[, Mesh m])`` Create a MeshFem object "
"from its string description."
msgstr ""
"``MF = MeshFem('from string', string s[, Mesh m])`` string description "
"からMeshFemオブジェクトを作成します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:27
msgid "See also ``MeshFem.char()``"
msgstr "``MeshFem.char()`` も参照してください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:29
msgid "``MF = MeshFem('clone', MeshFem mf)`` Create a copy of a MeshFem."
msgstr "``MF = MeshFem('clone', MeshFem mf)`` MeshFemのコピーを作成します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:32
msgid ""
"``MF = MeshFem('sum', MeshFem mf1, MeshFem mf2[, MeshFem mf3[, ...]])`` "
"Create a MeshFem that spans two (or more) MeshFem's."
msgstr ""
"``MF = MeshFem('sum', MeshFem mf1, MeshFem mf2[, MeshFem mf3[, ...]])`` "
"2つ(かそれ以上の)MeshFemにわたるMeshFemを作成します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:35
msgid "All MeshFem must share the same mesh."
msgstr "すべてのMeshFemは同じメッシュを共有する必要があります。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:37
msgid "After that, you should not modify the FEM of `mf1`, `mf2` etc."
msgstr "使用後は、  `mf1`, `mf2` のFEMを修正しないでください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:39
msgid ""
"``MF = MeshFem('product', MeshFem mf1, MeshFem mf2)`` Create a MeshFem that "
"spans all the product of a selection of shape functions of `mf1` by all "
"shape functions of `mf2`. Designed for Xfem enrichment."
msgstr ""
"``MF = MeshFem('product', MeshFem mf1, MeshFem mf2)`` は、選択した `mf1` "
"の形状関数のすべての積と、 `mf2` のすべての形状関数のすべての積を網羅するMeshFemを作成します。Xfem enrichment "
"用に設計されています。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:44
msgid "`mf1` and `mf2` must share the same mesh."
msgstr "`mf1` と `mf2` は同じメッシュを共有しなければなりません。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:46
msgid "After that, you should not modify the FEM of `mf1`, `mf2`."
msgstr "使用後は、 `mf1`, `mf2` のFEMを修正しないでください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:48
msgid ""
"``MF = MeshFem('levelset', MeshLevelSet mls, MeshFem mf)`` Create a MeshFem "
"that is conformal to implicit surfaces defined in MeshLevelSet."
msgstr ""
"``MF = MeshFem('levelset', MeshLevelSet mls, MeshFem mf)``  "
"MeshLevelSetで定義されたインプリシットサーフェスにコンフォーマルなMeshFemを作成します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:52
msgid ""
"``MF = MeshFem('global function', Mesh m, LevelSet ls, (GlobalFunction "
"GF1,...)[, int Qdim_m])`` Create a MeshFem whose base functions are global "
"function given by the user in the system of coordinate defined by the iso-"
"values of the two level-set function of `ls`."
msgstr ""
"``MF = MeshFem('global function', Mesh m, LevelSet ls, (GlobalFunction "
"GF1,...)[, int Qdim_m])`` 基底関数が `ls` "
"の2つのレベルセット関数のiso値によって定義された座標系でユーザーが指定したグローバル関数であるMeshFemを作成します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:57
msgid ""
"``MF = MeshFem('partial', MeshFem mf, ivec DOFs[, ivec RCVs])`` Build a "
"restricted MeshFem by keeping only a subset of the degrees of freedom of "
"`mf`."
msgstr ""
"``MF = MeshFem('partial', MeshFem mf, ivec DOFs[, ivec RCVs])`` `mf` "
"の自由度のサブセットのみを保持することで、制限されたMeshFemを構築します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem:61
#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_partial:4
msgid ""
"If `RCVs` is given, no FEM will be put on the convexes listed in `RCVs`."
msgstr "`RCVs` が与えられた場合、 `RCVs` に列挙されている凸包にはFEMは適用されません。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.adapt:1
msgid ""
"For a MeshFem levelset object only. Adapt the mesh_fem object to a change of"
" the levelset function."
msgstr ""
"MeshFem levelset オブジェクトの場合のみに使用されます。mesh_fem オブジェクトをlevelset関数の変更に適合させます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cv:1
msgid "Return the dof of the convexes listed in `CVids`."
msgstr "`CVids` にリストされている凸包の自由度を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cv:3
msgid ""
"WARNING: the Degree of Freedom might be returned in ANY order, do not use "
"this function in your assembly routines. Use 'basic dof from cvid' instead, "
"if you want to be able to map a convex number with its associated degrees of"
" freedom."
msgstr ""
"警告: "
"自由度は任意の順序で返される可能性があります。アセンブリルーチンではこの関数を使用しないでください。凸包値に関連する自由度をマップする場合は、代わりに "
"'basic dof from cvid' を使用します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cv:8
msgid ""
"One can also get the list of basic dof on a set on convex faces, by "
"indicating on the second row of `CVids` the faces numbers (with respect to "
"the convex number on the first row)."
msgstr "また、(最初の行の凸包数に関して)2列目に面番号を表示することで、凸包面上の集合の基本的な自由度のリストを得ることができます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cvid:1
msgid "Return the degrees of freedom attached to each convex of the mesh."
msgstr "メッシュの各凸包にアタッチされた自由度を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cvid:3
msgid ""
"If `CVids` is omitted, all the convexes will be considered (equivalent to "
"`CVids = 1 ... Mesh.max_cvid()`)."
msgstr "`CVids` を省略すると、すべての凸包が考慮されます( `CVids = 1 ... Mesh.max_cvid()` と同じです)。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cvid:6
msgid ""
"`IDx` is a vector, `length(IDx) = length(CVids)+1`. `DOFs` is a vector "
"containing the concatenated list of dof of each convex in `CVids`. Each "
"entry of `IDx` is the position of the corresponding convex point list in "
"`DOFs`. Hence, for example, the list of points of the second convex is "
"DOFs[IDx(2):IDx(3)]."
msgstr ""
"`IDx` はベクトルであり、 `length(IDx) = length(CVids)+1` です。 `DOFs`  は `CVids` "
"の各凸包の自由度の連結リストを含むベクトルです。 `IDx` の各エントリは `DOFs` "
"における対応する凸包点リストの位置です。従って、例えば、第2凸包の点のリストは DOFs[IDx(2):IDx(3)] です。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_from_cvid:12
msgid ""
"If `CVids` contains convex #id which do not exist in the mesh, their point "
"list will be empty."
msgstr "`CVids` にメッシュに存在しない凸包の #id が含まれている場合、点リストは空になります。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_nodes:1
msgid "Get location of basic degrees of freedom."
msgstr "基本自由度の位置を取得します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_nodes:3
msgid ""
"Return the list of interpolation points for the specified dof #IDs in "
"`DOFids` (if `DOFids` is omitted, all basic dof are considered)."
msgstr ""
"指定した `DOFids` ( `DOFids` を省略すると、すべての基本自由度が考慮されます)の自由度 #IDs の補間点のリストを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_on_region:1
msgid ""
"Return the list of basic dof (before the optional reduction) lying on one of"
" the mesh regions listed in `Rs`."
msgstr "`Rs` にリストされているメッシュ領域のいずれかにある基本自由度(任意削減前)のリストを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.basic_dof_on_region:4
#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_on_region:4
msgid ""
"More precisely, this function returns the basic dof whose support is non-"
"null on one of regions whose #ids are listed in `Rs` (note that for boundary"
" regions, some dof nodes may not lie exactly on the boundary, for example "
"the dof of Pk(n,0) lies on the center of the convex, but the base function "
"in not null on the convex border)."
msgstr ""
"より正確には、この関数は `Rs` (境界領域の場合、一部の節点自由度は正確に境界上に存在しない場合があります。たとえば、 Pk(n,0) "
"の自由度は凸包の中心に存在しますが、基底関数は凸包境界上でnullではありません)に #ids "
"がリストされている領域のいずれかにおいて、サポートが非NULLである基本的な自由度を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.char:1
msgid "Output a string description of the MeshFem."
msgstr "MeshFemの string description を出力します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.char:3
msgid ""
"By default, it does not include the description of the linked mesh object, "
"except if `opt` is 'with_mesh'."
msgstr "デフォルトでは、 `opt` が 'with_mesh' の場合を除き、リンクされたメッシュオブジェクトの説明は含まれません。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.convex_index:1
msgid "Return the list of convexes who have a FEM."
msgstr "FEMを持つ凸包のリストを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.display:1
msgid "displays a short summary for a MeshFem object."
msgstr "MeshFemオブジェクトの簡単な概要が表示されます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_from_cv:1
msgid "Deprecated function. Use MeshFem.basic_dof_from_cv() instead."
msgstr "非推奨の機能です。代わりに MeshFem.basic_dof_from_cv() を使用します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_from_cvid:1
msgid "Deprecated function. Use MeshFem.basic_dof_from_cvid() instead."
msgstr "非推奨の機能です。代わりに MeshFem.basic_dof_from_cvid() を使用します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_from_im:1
msgid ""
"Return a selection of dof who contribute significantly to the mass-matrix "
"that would be computed with `mf` and the integration method `mim`."
msgstr "`mf` と積分法 `mim` で計算される質量行列に大きく寄与する自由度を選択し返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_from_im:5
msgid ""
"`p` represents the dimension on what the integration method operates "
"(default `p = mesh dimension`)."
msgstr "`p` は積分法が作用する次元(デフォルトは `p = メッシュの次元` )を表します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_from_im:8
msgid ""
"IMPORTANT: you still have to set a valid integration method on the convexes "
"which are not crosses by the levelset!"
msgstr "重要:levelsetと交差しない凸包には、有効な積分法を設定する必要があります!"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_nodes:1
msgid "Deprecated function. Use MeshFem.basic_dof_nodes() instead."
msgstr "非推奨の機能です。代わりに MeshFem.basic_dof_nodes() を使用します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_on_region:1
msgid ""
"Return the list of dof (after the optional reduction) lying on one of the "
"mesh regions listed in `Rs`."
msgstr "`Rs` にリストされたメッシュ領域のいずれかに存在する自由度(任意削減後)のリストを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_on_region:11
msgid ""
"For a reduced mesh_fem a dof is lying on a region if its potential "
"corresponding shape function is nonzero on this region. The extension matrix"
" is used to make the correspondence between basic and reduced dofs."
msgstr ""
"縮退されたmesh_femの場合、自由度は対応する形状関数のポテンシャルがこの領域でゼロでない場合に領域上にあります。拡張行列を使用して、基本自由度と縮退自由度間の対応を作ります。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_partition:1
msgid "Get the 'dof_partition' array."
msgstr "'dof_partition' 配列を取得します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.dof_partition:3
msgid ""
"Return the array which associates an integer (the partition number) to each "
"convex of the MeshFem. By default, it is an all-zero array. The degrees of "
"freedom of each convex of the MeshFem are connected only to the dof of "
"neighbouring convexes which have the same partition number, hence it is "
"possible to create partially discontinuous MeshFem very easily."
msgstr ""
"MeshFemの各凸包に整数(パーティション番号)を関連付ける配列を返します。既定では、配列はすべてゼロです。MeshFemの各凸包の自由度は、同じパーティション番号を持つ隣接する凸包の自由度にのみ接続されるため、部分的に不連続なMeshFemを非常に簡単に作成することができます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.eval:1
msgid "interpolate an expression on the (lagrangian) MeshFem."
msgstr "（lagrangian）MeshFemで式を補間します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.eval:3
msgid "Examples::"
msgstr "例"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_dx:1
msgid ""
"Synopsis: MeshFem.export_to_dx(self,string filename, ...['as', string "
"mesh_name][,'edges']['serie',string serie_name][,'ascii'][,'append'], U, "
"'name'...)"
msgstr ""
"概要: MeshFem.export_to_dx(self,string filename, ...['as', string "
"mesh_name][,'edges']['serie',string serie_name][,'ascii'][,'append'], U, "
"'name'...)"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_dx:3
msgid "Export a MeshFem and some fields to an OpenDX file."
msgstr "MeshFemと一部のフィールドをOpenDXファイルに書き出します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_dx:5
msgid ""
"This function will fail if the MeshFem mixes different convex types (i.e. "
"quads and triangles), or if OpenDX does not handle a specific element type "
"(i.e. prism connections are not known by OpenDX)."
msgstr ""
"MeshFemでさまざまな凸包が混在する場合(つまり、四角形と三角形)、またはOpenDXで特定の要素型が処理されない(つまり、プリズム接続はOpenDXでは認識されない)場合、この関数は失敗します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_dx:9
msgid ""
"The FEM will be mapped to order 1 Pk (or Qk) FEMs. If you need to represent "
"high-order FEMs or high-order geometric transformations, you should consider"
" Slice.export_to_dx()."
msgstr ""
"FEMは次数1のPk(またはQk)FEMにマップされます。高次FEMまたは高次幾何変換を表す必要がある場合は、Slice.export_to_dx() "
"を使用する必要があります。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_pos:1
msgid ""
"Synopsis: MeshFem.export_to_pos(self,string filename[, string "
"name][[,MeshFem mf1], mat U1, string nameU1[[,MeshFem mf2], mat U2, string "
"nameU2,...]])"
msgstr ""
"概要: MeshFem.export_to_pos(self,string filename[, string name][[,MeshFem "
"mf1], mat U1, string nameU1[[,MeshFem mf2], mat U2, string nameU2,...]])"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_pos:3
msgid "Export a MeshFem and some fields to a pos file."
msgstr "MeshFemと一部のフィールドをposファイルに書き出します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_pos:5
msgid ""
"The FEM and geometric transformations will be mapped to order 1 "
"isoparametric Pk (or Qk) FEMs (as GMSH does not handle higher order "
"elements)."
msgstr ""
"FEMおよび幾何学的変換は、1次アイソパラメトリックPk(またはQk)FEM(GMSHはより高次の要素を処理しないため)にマッピングされます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_vtk:1
msgid ""
"Synopsis: MeshFem.export_to_vtk(self,string filename, ... ['ascii'], U, "
"'name'...)"
msgstr ""
"概要: MeshFem.export_to_vtk(self,string filename, ... ['ascii'], U, 'name'...)"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_vtk:3
msgid "Export a MeshFem and some fields to a vtk file."
msgstr "MeshFemと一部のフィールドをvtkファイルに書き出します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.export_to_vtk:5
msgid ""
"The FEM and geometric transformations will be mapped to order 1 or 2 "
"isoparametric Pk (or Qk) FEMs (as VTK does not handle higher order "
"elements). If you need to represent high-order FEMs or high-order geometric "
"transformations, you should consider Slice.export_to_vtk()."
msgstr ""
"FEMおよび幾何変換は、次数1または2のアイソパラメトリックPk(またはQk)FEM(VTKでは上位の要素を処理できないため)にマッピングされます。高次FEMまたは高次幾何変換を表す必要がある場合は"
" Slice.export_to_vtk() を考慮する必要があります。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.extend_vector:1
msgid ""
"Multiply the provided vector V with the reduction matrix of the MeshFem."
msgstr "与えられたベクトルVにMeshFemの縮約行列を乗算します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.extension_matrix:1
msgid "Return the optional extension matrix."
msgstr "オプションの拡張行列を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.fem:1
msgid "Return a list of FEM used by the MeshFem."
msgstr "MeshFemで使用されるFEMのリストを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.fem:3
msgid ""
"`FEMs` is an array of all Fem objects found in the convexes given in "
"`CVids`. If `CV2F` was supplied as an output argument, it contains, for each"
" convex listed in `CVids`, the index of its correspounding FEM in `FEMs`."
msgstr ""
"`FEMs` は `CVids` で与えられた凸包にあるすべてのFemオブジェクトの配列です。 `CV2F` が出力引数として指定された場合  "
"`CVids` にリストされている各凸包に対し、 `FEMs` 内の対応するFEMのインデックスが含まれます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.fem:8
msgid ""
"Convexes which are not part of the mesh, or convexes which do not have any "
"FEM have their correspounding entry in `CV2F` set to -1."
msgstr "メッシュの一部でない凸包、またはFEMを持たない凸包については  `CV2F` の対応エントリを-1に設定します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.has_linked_mesh_levelset:1
msgid "Is a mesh_fem_level_set or not."
msgstr "mesh_fem_level_setかどうかを確認します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.interpolate_convex_data:1
msgid ""
"Interpolate data given on each convex of the mesh to the MeshFem dof. The "
"MeshFem has to be lagrangian, and should be discontinuous (typically a "
"FEM_PK(N,0) or FEM_QK(N,0) should be used)."
msgstr ""
"メッシュの各凸包で指定されたデータをMeshFemの自由度に補間します。MeshFemはlagrangianである必要があり、不連続である必要があります(通常は"
" FEM_PK(N,0) または FEM_QK(N,0) を使用する必要があります)。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.interpolate_convex_data:5
msgid ""
"The last dimension of the input vector Ucv should have Mesh.max_cvid() "
"elements."
msgstr "入力ベクトルUcvの最後の次元には Mesh.max_cvid() の要素が必要です。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.interpolate_convex_data:8
msgid "Example of use: MeshFem.interpolate_convex_data(Mesh.quality())"
msgstr "使用例: MeshFem.interpolate_convex_data(Mesh.quality())"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_equivalent:1
msgid "Test if the MeshFem is equivalent."
msgstr "MeshFemが等価かどうかをテストします。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_equivalent:3
#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_polynomial:3
msgid "See MeshFem.is_lagrangian()"
msgstr "MeshFem.is_lagrangian() を参照してください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_lagrangian:1
msgid "Test if the MeshFem is Lagrangian."
msgstr "MeshFemがLagrangianであるかどうかをテストします。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_lagrangian:3
msgid ""
"Lagrangian means that each base function Phi[i] is such that Phi[i](P[j]) = "
"delta(i,j), where P[j] is the dof location of the jth base function, and "
"delta(i,j) = 1 if i==j, else 0."
msgstr ""
"Lagrangianとは、各基底関数 Phi[i] が、 Phi[i](P[j]) = delta(i,j) となることを意味します。ここで P[j] "
"は、j番目の基底関数の自由度位置であり、i==jなら delta(i,j) = 1 であり、そうでなければ0です。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_lagrangian:7
msgid ""
"If `CVids` is omitted, it returns 1 if all convexes in the mesh are "
"Lagrangian. If `CVids` is used, it returns the convex indices (with respect "
"to `CVids`) which are Lagrangian."
msgstr ""
"`CVids` を省略すると、メッシュ内のすべての凸状がLagrangianの場合に1を返します。 `CVids` "
"を使用すると、Lagrangianである( `CVids` に関する)凸包インデックスを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_polynomial:1
msgid "Test if all base functions are polynomials."
msgstr "すべての基本関数が多項式であるかどうかをテストします。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.is_reduced:1
msgid "Return 1 if the optional reduction matrix is applied to the dofs."
msgstr "オプションの縮退マトリックスが自由度に適用される場合は1を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.linked_mesh:1
msgid "Return a reference to the Mesh object linked to `mf`."
msgstr "`mf` にリンクされたメッシュオブジェクトへの参照を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.linked_mesh_levelset:1
msgid "if it is a mesh_fem_level_set gives the linked mesh_level_set."
msgstr "mesh_fem_level_set の場合はリンクされた mesh_level_set を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.memsize:1
msgid "Return the amount of memory (in bytes) used by the mesh_fem object."
msgstr "mesh_fem オブジェクトが使用するメモリ量(バイト単位)を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.memsize:3
msgid "The result does not take into account the linked mesh object."
msgstr "この結果では、リンクされたメッシュオブジェクトは考慮されません。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.mesh:1
msgid ""
"Return a reference to the Mesh object linked to `mf`. (identical to "
"Mesh.linked_mesh())"
msgstr "`mf` にリンクされたメッシュオブジェクトへの参照を返します( Mesh.linked_mesh() と同一です)。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.nb_basic_dof:1
msgid "Return the number of basic degrees of freedom (dof) of the MeshFem."
msgstr "MeshFemの基本自由度(dof)の数を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.nbdof:1
msgid "Return the number of degrees of freedom (dof) of the MeshFem."
msgstr "MeshFemの自由度(dof)の数を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.non_conformal_basic_dof:1
msgid "Return partially linked degrees of freedom."
msgstr "部分的にリンクされた自由度を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.non_conformal_basic_dof:3
msgid ""
"Return the basic dof located on the border of a convex and which belong to "
"only one convex, except the ones which are located on the border of the "
"mesh.  For example, if the convex 'a' and 'b' share a common face, 'a' has a"
" P1 FEM, and 'b' has a P2 FEM, then the basic dof on the middle of the face "
"will be returned by this function (this can be useful when searching the "
"interfaces between classical FEM and hierarchical FEM)."
msgstr ""
"メッシュの境界上にあるものを除き、1つの凸包にのみ属する凸包の境界上にある基本自由度を返します。たとえば、凸包の 'a' と 'b' "
"が共通の面を共有し、 'a' にP1 FEMがあり、 'b' にP2 "
"FEMがある場合、面の中央の基本自由度がこの関数によって返されます(これは、古典的FEMと階層的FEMの間のインターフェースを探索するときに有用です)。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.non_conformal_dof:1
msgid "Deprecated function. Use MeshFem.non_conformal_basic_dof() instead."
msgstr "非推奨の機能です。代わりに MeshFem.non_conformal_basic_dof() を使用してください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.qdim:1
msgid "Return the dimension Q of the field interpolated by the MeshFem."
msgstr "MeshFemによって補間されたフィールドの次元Qを返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.qdim:3
msgid ""
"By default, Q=1 (scalar field). This has an impact on the dof numbering."
msgstr "デフォルトでは、Q=1(スカラー場)です。これは、自由度の番号付けに影響します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.reduce_meshfem:1
msgid ""
"Set reduction mesh fem This function selects the degrees of freedom of the "
"finite element method by selecting a set of independent vectors of the "
"matrix RM. The numer of columns of RM should corresponds to the number of "
"degrees of freedom of the finite element method."
msgstr ""
"縮退メッシュ数の設定 "
"この関数はマトリックスRMの独立したベクトルの集合を選択することにより、有限要素法の自由度を選択します。RMの列数は、有限要素法の自由度に対応していなければなりません。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.reduce_vector:1
msgid ""
"Multiply the provided vector V with the extension matrix of the MeshFem."
msgstr "提供されたベクトルVにMeshFemの拡張行列を乗算します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.reduction:1
msgid "Set or unset the use of the reduction/extension matrices."
msgstr "縮退/拡張マトリックスの使用を設定または設定解除します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.reduction_matrices:1
msgid "Set the reduction and extension matrices and valid their use."
msgstr "縮退および拡張マトリックスを設定し、その使用を有効にします。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.reduction_matrix:1
msgid "Return the optional reduction matrix."
msgstr "オプションの縮退行列を返します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.save:1
msgid ""
"Save a MeshFem in a text file (and optionally its linked mesh object if "
"`opt` is the string 'with_mesh')."
msgstr ""
"MeshFemをテキストファイル(オプションで `opt` が文字列 'with_mesh' の場合はリンクされたメッシュオブジェクト)に保存します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_discontinuous_fem:1
msgid ""
"Synopsis: MeshFem.set_classical_discontinuous_fem(self, int k[[, "
"'complete'], @tscalar alpha[, ivec CVIDX]])"
msgstr ""
"概要: MeshFem.set_classical_discontinuous_fem(self, int k[[, 'complete'], "
"@tscalar alpha[, ivec CVIDX]])"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_discontinuous_fem:3
msgid ""
"Assigns a classical (Lagrange polynomial) discontinuous fem of order k."
msgstr "k次の古典的(Lagrange多項式)不連続有限要素法を与えます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_discontinuous_fem:5
msgid ""
"Similar to MeshFem.set_classical_fem() except that FEM_PK_DISCONTINUOUS is "
"used. Param `alpha` the node inset, :math:`0 \\leq alpha < 1`, where 0 "
"implies usual dof nodes, greater values move the nodes toward the center of "
"gravity, and 1 means that all degrees of freedom collapse on the center of "
"gravity. The option 'complete' requests complete Langrange polynomial "
"elements, even if the element geometric transformation is an incomplete one "
"(e.g. 8-node quadrilateral or 20-node hexahedral)."
msgstr ""
"FEM_PK_DISCONTINUOUS を使用する場合を除き MeshFem.set_classical_fem() に似ています。パラメータ "
"`alpha` は節点のインセット、 :math:`0 \\leq alpha < 1` "
"で、0は通常の自由度節点を意味し、値が大きくなると節点は重心に向かって移動し、1はすべての自由度が重心で破綻することを意味します。 'complete'"
" オプションは、要素の形状変換が不完全なもの(例えば8節点四面体または20節点六面体)であっても、完全なLangrange多項式要素が必要です。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_fem:1
msgid ""
"Synopsis: MeshFem.set_classical_fem(self, int k[[, 'complete'], ivec CVids])"
msgstr ""
"概要: MeshFem.set_classical_fem(self, int k[[, 'complete'], ivec CVids])"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_fem:3
msgid ""
"Assign a classical (Lagrange polynomial) fem of order `k` to the MeshFem. "
"The option 'complete' requests complete Langrange polynomial elements, even "
"if the element geometric transformation is an incomplete one (e.g. 8-node "
"quadrilateral or 20-node hexahedral)."
msgstr ""
"MeshFemに古典的な(Lagrange多項式)有限要素法次数 `k` を割り当てます。 'complete' "
"オプションは、要素の形状変換が不完全なもの(例えば8節点四辺形または20節点六面体)であっても、完全なLangrange多項式要素が必要です。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_classical_fem:8
msgid "Uses FEM_PK for simplexes, FEM_QK for parallelepipeds etc."
msgstr "simplexに FEM_PK 、parallelepipedに FEM_QK などを使用します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_dof_partition:1
msgid "Change the 'dof_partition' array."
msgstr "'dof_partition' 配列を変更します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_dof_partition:3
msgid ""
"`DOFP` is a vector holding a integer value for each convex of the MeshFem. "
"See MeshFem.dof_partition() for a description of \"dof partition\"."
msgstr ""
"`DOFP` はMeshFemの各凸包に対する整数値を保持するベクトルです。 \"dof partition\" については、 "
"MeshFem.dof_partition() を参照してください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_enriched_dofs:1
msgid ""
"For a MeshFem product object only. Set te enriched dofs and adapt the "
"MeshFem product."
msgstr "MeshFem 積オブジェクトのみのため。強化された自由度を設定し、MeshFem 積を当てはめます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_fem:1
msgid "Set the Finite Element Method."
msgstr "有限要素法を設定します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_fem:3
msgid ""
"Assign a FEM `f` to all convexes whose #ids are listed in `CVids`. If "
"`CVids` is not given, the integration is assigned to all convexes."
msgstr ""
"FEMの `f` を `CVids` に #ids がリストされているすべての凸包に割り当てます。 `CVids` "
"が指定されていない場合、積分はすべての凸包に割り当てられます。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_fem:6
msgid "See the help of Fem to obtain a list of available FEM methods."
msgstr "使用可能なFEMメソッドのリストについては、FEMのヘルプを参照してください。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_partial:1
msgid ""
"Can only be applied to a partial MeshFem. Change the subset of the degrees "
"of freedom of `mf`."
msgstr "部分的なMeshFemにのみ適用できます。 `mf` の自由度のサブセットを変更します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_qdim:1
msgid ""
"Change the `Q` dimension of the field that is interpolated by the MeshFem."
msgstr "MeshFemによって補間されるフィールドの `Q` 次元を変更します。"

#: /home/travis/virtualenv/python3.6.9/lib/python3.6/site-packages/getfem/__init__.pydocstring
#: of getfem.MeshFem.set_qdim:3
msgid ""
"`Q = 1` means that the MeshFem describes a scalar field, `Q = N` means that "
"the MeshFem describes a vector field of dimension N."
msgstr ""
"`Q = 1` はMeshFemがスカラーフィールドを記述することを意味し、 `Q = N` "
"はMeshFemが次数Nのベクトルフィールドを記述することを意味します。"
