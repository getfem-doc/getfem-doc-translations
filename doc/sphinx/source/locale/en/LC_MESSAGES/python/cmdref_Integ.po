# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-05 01:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../source/python/cmdref_Integ.rst:8
msgid "Integ"
msgstr ""

#: ../docstring getfem.Integ:1 of
msgid "GeFEM Integ object"
msgstr ""

#: ../docstring getfem.Integ:3 of
msgid ""
"General object for obtaining handles to various integrations methods on "
"convexes (used when the elementary matrices are built)."
msgstr ""

#: ../docstring getfem.Integ:7 of
msgid "General constructor for Integ objects"
msgstr ""

#: ../docstring getfem.Integ:9 of
msgid ""
"``I = Integ(string method)`` Here is a list of some integration methods "
"defined in getfem++ (see the description of finite element and "
"integration methods for a complete reference):"
msgstr ""

#: ../docstring getfem.Integ:14 of
msgid ""
"IM_EXACT_SIMPLEX(n) : Exact integration on simplices (works only with "
"linear geometric transformations and PK Fem's)."
msgstr ""

#: ../docstring getfem.Integ:17 of
msgid "IM_PRODUCT(A,B) : Product of two integration methods."
msgstr ""

#: ../docstring getfem.Integ:19 of
msgid "IM_EXACT_PARALLELEPIPED(n) : Exact integration on parallelepipeds."
msgstr ""

#: ../docstring getfem.Integ:21 of
msgid "IM_EXACT_PRISM(n) : Exact integration on prisms."
msgstr ""

#: ../docstring getfem.Integ:23 of
msgid "IM_GAUSS1D(k) : Gauss method on the segment, order `k=1,3,...,99`."
msgstr ""

#: ../docstring getfem.Integ:25 of
msgid ""
"IM_NC(n,k) : Newton-Cotes approximative integration on simplexes, order "
"`k`."
msgstr ""

#: ../docstring getfem.Integ:27 of
msgid ""
"IM_NC_PARALLELEPIPED(n,k) : Product of Newton-Cotes integration on "
"parallelepipeds."
msgstr ""

#: ../docstring getfem.Integ:29 of
msgid "IM_NC_PRISM(n,k) : Product of Newton-Cotes integration on prisms."
msgstr ""

#: ../docstring getfem.Integ:31 of
msgid ""
"IM_GAUSS_PARALLELEPIPED(n,k) : Product of Gauss1D integration on "
"parallelepipeds."
msgstr ""

#: ../docstring getfem.Integ:33 of
msgid "IM_TRIANGLE(k) : Gauss methods on triangles `k=1,3,5,6,7,8,9,10,13,17,19`."
msgstr ""

#: ../docstring getfem.Integ:35 of
msgid ""
"IM_QUAD(k) : Gauss methods on quadrilaterons `k=2,3,5, ...,17`. Note that"
" IM_GAUSS_PARALLELEPIPED should be prefered for QK Fem's."
msgstr ""

#: ../docstring getfem.Integ:38 of
msgid "IM_TETRAHEDRON(k) : Gauss methods on tetrahedrons `k=1,2,3,5,6 or 8`."
msgstr ""

#: ../docstring getfem.Integ:40 of
msgid "IM_SIMPLEX4D(3) : Gauss method on a 4-dimensional simplex."
msgstr ""

#: ../docstring getfem.Integ:42 of
msgid ""
"IM_STRUCTURED_COMPOSITE(im,k) : Composite method on a grid with `k` "
"divisions."
msgstr ""

#: ../docstring getfem.Integ:44 of
msgid ""
"IM_HCT_COMPOSITE(im) : Composite integration suited to the HCT composite "
"finite element."
msgstr ""

#: ../docstring getfem.Integ:47 of
msgid "Example:"
msgstr ""

#: ../docstring getfem.Integ:49 of
msgid "I = Integ('IM_PRODUCT(IM_GAUSS1D(5),IM_GAUSS1D(5))')"
msgstr ""

#: ../docstring getfem.Integ:51 of
msgid "is the same as:"
msgstr ""

#: ../docstring getfem.Integ:53 of
msgid "I = Integ('IM_GAUSS_PARALLELEPIPED(2,5)')"
msgstr ""

#: ../docstring getfem.Integ:55 of
msgid ""
"Note that 'exact integration' should be avoided in general, since they "
"only apply to linear geometric transformations, are quite slow, and "
"subject to numerical stability problems for high degree Fem's."
msgstr ""

#: ../docstring getfem.Integ.char:1 of
msgid "Ouput a (unique) string representation of the integration method."
msgstr ""

#: ../docstring getfem.Integ.char:3 of
msgid "This can be used to  comparisons between two different Integ objects."
msgstr ""

#: ../docstring getfem.Integ.coeffs:1 of
msgid "Returns the coefficients associated to each integration point."
msgstr ""

#: ../docstring getfem.Integ.coeffs:3 getfem.Integ.face_coeffs:3
#: getfem.Integ.face_pts:3 getfem.Integ.nbpts:6 getfem.Integ.pts:3 of
msgid ""
"Only for approximate methods, this has no meaning for exact integration "
"methods!"
msgstr ""

#: ../docstring getfem.Integ.dim:1 of
msgid "Return the dimension of the reference convex of the method."
msgstr ""

#: ../docstring getfem.Integ.display:1 of
msgid "displays a short summary for a Integ object."
msgstr ""

#: ../docstring getfem.Integ.face_coeffs:1 of
msgid "Returns the coefficients associated to each integration of a face."
msgstr ""

#: ../docstring getfem.Integ.face_pts:1 of
msgid "Return the list of integration points for a face."
msgstr ""

#: ../docstring getfem.Integ.is_exact:1 of
msgid "Return 0 if the integration is an approximate one."
msgstr ""

#: ../docstring getfem.Integ.nbpts:1 of
msgid "Return the total number of integration points."
msgstr ""

#: ../docstring getfem.Integ.nbpts:3 of
msgid ""
"Count the points for the volume integration, and points for surface "
"integration on each face of the reference convex."
msgstr ""

#: ../docstring getfem.Integ.pts:1 of
msgid "Return the list of integration points"
msgstr ""

