# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-05 01:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../source/python/cmdref_LevelSet.rst:8
msgid "LevelSet"
msgstr ""

#: ../docstring getfem.LevelSet:1 of
msgid "GeFEM LevelSet object"
msgstr ""

#: ../docstring getfem.LevelSet:4 of
msgid ""
"The level-set object is represented by a primary level-set and optionally"
" a secondary level-set used to represent fractures (if p(x) is the "
"primary level-set function and s(x) is the secondary level-set, the crack"
" is defined by :math:`p(x)=0` and :math:`s(x)\\leq0` : the role of the "
"secondary is to determine the crack front/tip)."
msgstr ""

#: ../docstring getfem.LevelSet:10 of
msgid "note:"
msgstr ""

#: ../docstring getfem.LevelSet:12 of
msgid ""
"All tools listed below need the package qhull installed on your system. "
"This package is widely available. It computes convex hull and delaunay "
"triangulations in arbitrary dimension."
msgstr ""

#: ../docstring getfem.LevelSet:18 of
msgid "General constructor for LevelSet objects"
msgstr ""

#: ../docstring getfem.LevelSet:20 of
msgid ""
"``LS = LevelSet(Mesh m, int d[, string 'ws'| string f1[, string f2 | "
"string 'ws']])`` Create a LevelSet object on a Mesh represented by a "
"primary function (and optional secondary function, both) defined on a "
"lagrange MeshFem of degree `d`."
msgstr ""

#: ../docstring getfem.LevelSet:25 of
msgid ""
"If `ws` (with secondary) is set; this levelset is represented by a "
"primary function and a secondary function. If `f1` is set; the primary "
"function is defined by that expression (with the syntax of the high "
"generic assembly language). If `f2` is set; this levelset is represented "
"by a primary function and a secondary function defined by these "
"expressions."
msgstr ""

#: ../docstring getfem.LevelSet.char:1 of
msgid "Output a (unique) string representation of the LevelSet."
msgstr ""

#: ../docstring getfem.LevelSet.char:3 of
msgid ""
"This can be used to perform comparisons between two different LevelSet "
"objects. This function is to be completed."
msgstr ""

#: ../docstring getfem.LevelSet.degree:1 of
msgid "Return the degree of lagrange representation."
msgstr ""

#: ../docstring getfem.LevelSet.display:1 of
msgid "displays a short summary for a LevelSet."
msgstr ""

#: ../docstring getfem.LevelSet.memsize:1 of
msgid "Return the amount of memory (in bytes) used by the level-set."
msgstr ""

#: ../docstring getfem.LevelSet.mf:1 of
msgid "Return a reference on the MeshFem object."
msgstr ""

#: ../docstring getfem.LevelSet.set_values:1 of
msgid ""
"Synopsis: LevelSet.set_values(self, {mat v1|string func_1}[, mat "
"v2|string func_2])"
msgstr ""

#: ../docstring getfem.LevelSet.set_values:3 of
msgid "Set values of the vector of dof for the level-set functions."
msgstr ""

#: ../docstring getfem.LevelSet.set_values:5 of
msgid ""
"Set the primary function with the vector of dof `v1` (or the expression "
"`func_1`) and the secondary function (if any) with  the vector of dof "
"`v2` (or the expression `func_2`)"
msgstr ""

#: ../docstring getfem.LevelSet.simplify:1 of
msgid "Simplify dof of level-set optionally with the parameter `eps`."
msgstr ""

#: ../docstring getfem.LevelSet.values:1 of
msgid "Return the vector of dof for `nls` function."
msgstr ""

#: ../docstring getfem.LevelSet.values:3 of
msgid ""
"If `nls` is 0, the method return the vector of dof for the primary level-"
"set function. If `nls` is 1, the method return the vector of dof for the "
"secondary level-set function (if any)."
msgstr ""

