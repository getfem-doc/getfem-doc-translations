name: getfem-auto-update
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * *'
jobs:
  script:
    runs-on: ubuntu-22.04
    steps:
    - name: Get Job URL
      uses: Tiryoh/gha-jobid-action@v0
      id: jobs
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        job_name: script
    - name: checkout with submodule
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
        token: ${{ secrets.PERSONAL_ACCESSTOKEN }}
    - name: Setup SSH
      uses: MrSquaare/ssh-setup-action@v2
      with:
        host: github.com
        private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: install
      run: |
        sudo apt update
        sudo apt-get install -y --no-install-recommends automake
        sudo apt-get install -y --no-install-recommends libtool
        sudo apt-get install -y --no-install-recommends make
        sudo apt-get install -y --no-install-recommends g++
        sudo apt-get install -y --no-install-recommends libqd-dev
        sudo apt-get install -y --no-install-recommends libqhull-dev
        sudo apt-get install -y --no-install-recommends libmumps-seq-dev
        sudo apt-get install -y --no-install-recommends liblapack-dev
        sudo apt-get install -y --no-install-recommends libopenblas-dev
        sudo apt-get install -y --no-install-recommends libpython3-dev
        sudo apt-get install -y --no-install-recommends imagemagick
        sudo apt-get install -y --no-install-recommends fig2dev
        sudo apt-get install -y --no-install-recommends texlive
        sudo apt-get install -y --no-install-recommends xzdec
        sudo apt-get install -y --no-install-recommends fig2ps
        sudo apt-get install -y --no-install-recommends gv
        sudo apt-get install -y --no-install-recommends python3-pip
        sudo apt-get install -y --no-install-recommends sphinx-intl
        sudo apt-get install -y --no-install-recommends python3-venv
        curl -o- https://raw.githubusercontent.com/transifex/cli/master/install.sh | bash
        mv tx /usr/local/bin/tx
    - name: update
      env:
        SPHINXINTL_TRANSIFEX_ORGANIZATION_NAME: tkoyama010
        SPHINXINTL_TRANSIFEX_USERNAME: api
        SPHINXINTL_TRANSIFEX_PROJECT_NAME: getfem-doc
        TX_TOKEN: ${{ secrets.TX_TOKEN }}
      run: |
        git submodule update
        python3 -m venv /home/runner/work/venv
        source /home/runner/work/venv/bin/activate
        (cd getfem; git fetch origin; git checkout master; git reset --hard origin/master; git branch -a)
        pip3 config set global.index-url https://pypi.python.org/simple/
        pip3 install -U pip setuptools
        pip3 install -r ./requirements.txt
        cd getfem
        bash autogen.sh
        ./configure --prefix=/home/runner/work/venv --with-pic
        make -j8  >  make.log
        sudo make install
        sudo perl -p -i -e 's/^.*"EPS".*\n//g' /etc/ImageMagick-*/policy.xml
        sudo perl -p -i -e 's/^.*"PS".*\n//g'  /etc/ImageMagick-*/policy.xml
        sudo perl -p -i -e 's/^.*"PDF".*\n//g' /etc/ImageMagick-*/policy.xml
        sudo perl -p -i -e 's/^.*"XPS".*\n//g' /etc/ImageMagick-*/policy.xml
        cp ../doc/sphinx/.tx/config  doc/sphinx/.tx/config  
        (cd doc/sphinx;
         make latex;
         make images;
         sphinx-build -T -b gettext source locale ;
         sphinx-intl update-txconfig-resources -p locale -d source/locale --transifex-organization-name="tkoyama010";
         cat .tx/config;
         tx push -s --skip;
         rm -rf source/locale/ja source/locale/pt_BR || true;
         tx pull --silent -f -l ja,pt_BR)
        rm ../bin/fig2eps
        rm -rf ../doc
        cp -r bin/fig2eps ../bin/fig2eps
        cp -r doc ../doc
        cd ../
        (cd doc/sphinx/source/matlab_octave/images; make clean)
        (cd doc/sphinx/source/project/images; make clean)
        (cd doc/sphinx/source/python/images; make clean)
        (cd doc/sphinx/source/scilab/images; make clean)
        (cd doc/sphinx/source/userdoc/images; make clean)
        deactivate
    - name: git_config
      env:
        NAME: "getfem-auto-update"
        EMAIL: "getfem-auto-update"
      run: |
        git branch -a
        git config --global user.email $EMAIL
        git config --global user.name $NAME
    - name: commit
      if: contains(github.event.head_commit.message, '[ci skip]') == false && contains(github.ref, 'master')
      env:
        ORGANIZATION: getfem-doc
        REPO: getfem-doc-translations
        JOB_ID: ${{ steps.jobs.outputs.job_id }}
        HTML_URL: ${{ steps.jobs.outputs.html_url }}
      run: |
        git add .
        git commit --allow-empty -m "[ci skip] $JOB_ID
        $HTML_URL"
        git remote -v
        git remote add github git@github.com:$ORGANIZATION/$REPO.git
        git push github master
