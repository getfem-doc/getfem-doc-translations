# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 5b975bb8698b4260b109f901a4d938a3
#: ../source/gmm/blas.rst:10
msgid "Basic linear algebra operations"
msgstr ""

# 2c0aa1f37b9d4520af044665cee4ef5e
#: ../source/gmm/blas.rst:13
msgid ""
"The same choice has been made as in MTL to provide basic operations as "
"functions not as operators. The advantages are that it is clearer to see "
"where are the linear algebra operations in the program and the "
"programming of optimized basic linear operations is greatly simplified."
msgstr ""

# 37d50f3cd6e9472f800e05125eec2577
#: ../source/gmm/blas.rst:17
msgid "scale and scaled"
msgstr ""

# 2abed11fef144109bd7f1395c7818171
#: ../source/gmm/blas.rst:19
msgid ""
"``gmm::scale`` is used to multiply a vector or a matrix with a scalar "
"factor::"
msgstr ""

# 07a6cb15471649ec84a5ca83e36b0b47
#: ../source/gmm/blas.rst:23
msgid ""
"If one not needs to multiply the vector but wants to use the multiplied "
"vector in an expression  ``gmm::scaled`` gives a reference to a "
"multiplied vector. This is only a reference, no operation is made until "
"this reference is used somewhere. For instance::"
msgstr ""

# 30bff2f60f264de9949520d821e20ac6
#: ../source/gmm/blas.rst:27
msgid ""
"print to the standard output the vector ``V`` multiplied by ``10.0`` "
"without changing ``V``."
msgstr ""

# 62ace62c0b194bf792b7b17dd30821d3
#: ../source/gmm/blas.rst:30
msgid "transposition"
msgstr ""

# 242a77b3c6594b16880979040d8103f8
#: ../source/gmm/blas.rst:32
msgid ""
"``gmm::transposed(M)`` gives a possibily modifiable reference on the "
"transposed matrix of ``M``."
msgstr ""

# ca5fd8e6d02445629367bbcb48f3096a
#: ../source/gmm/blas.rst:35
msgid "imaginary and real part"
msgstr ""

# 5912ec784593486da83a1126398a8a3f
#: ../source/gmm/blas.rst:37
msgid ""
"For a complex matrix ``M`` or a complex vector ``V``, "
"``gmm::real_part(M)``, ``gmm::real_part(V)``, ``gmm::imag_part(M)`` or "
"``gmm::imag_part(V)`` give a possibily modifiable reference on the real "
"or imaginary part of the matrix or vector (for instance "
"``gmm::clear(gmm::imag_part(M))`` will set to zero the imaginary part of "
"a matrix ``M``). These functions cannot be applied to real matrices or "
"vectors."
msgstr ""

# 9429bfbea5c340ae82cf8a3343fcff47
#: ../source/gmm/blas.rst:41
msgid "conjugate"
msgstr ""

# 48f7c8dc12f74387a5686b3750908d30
#: ../source/gmm/blas.rst:43
msgid ""
"For a matrix ``M`` or a vector ``V``, ``gmm::conjugated(M)`` and "
"``gmm::conjugated(V)`` give a constant reference on the conjugated vector"
" or matrix. Of course, for a real vectors this has no effect (and no cost"
" at all). Note : ``gmm::conjugated(M)`` transposes the matrix ``M`` so "
"that this is the hermitian conjugate of ``M``. If you need only the "
"conjugate of each component you have to use both transposition and "
"conjugate with ``gmm::conjugated(gmm::transposed(M))`` or equivalently  "
"``gmm::transposed(gmm::conjugated(M))``."
msgstr ""

# 68b57dd2eeb84d10bceb66f894e8c62a
#: ../source/gmm/blas.rst:48
msgid "add"
msgstr ""

# 7e78f80325d5442fbe9d28ac2d56c6ca
#: ../source/gmm/blas.rst:50
msgid ""
"addition of vectors or matrices. It is alway possible to mix different "
"type of vector or matrices in the operations. The following operations "
"are valid::"
msgstr ""

# a25bba37a0c94b6a9b19e85bfa33aae0
#: ../source/gmm/blas.rst:69
msgid ""
"IMPORTANT : all the vectors have to have the same size, no resize will be"
" automatically done. If a vector has not the good size, an error will be "
"thrown."
msgstr ""

# c6c97938fd0a45189f4f292e8d11ceba
#: ../source/gmm/blas.rst:72
msgid "mult"
msgstr ""

# 2c66e51e2b7c4f7ea650b5be708388da
#: ../source/gmm/blas.rst:74
msgid ""
"Matrix-vector or matrix-matrix multiplication. Again, all the matrices "
"and vectors have to have the good size. The following operations are "
"valid::"
msgstr ""

# 390360831dae4c30b111e50a39e28af1
#: ../source/gmm/blas.rst:103
msgid "norms"
msgstr ""

# 68a276fc94d4427783b889a16431c04b
#: ../source/gmm/blas.rst:119
msgid "trace"
msgstr ""

# a6924803d0dd454992ee2740ff1b945f
#: ../source/gmm/blas.rst:121
msgid "``gmm::mat_trace(M)`` gives the trace of matrix ``M``."
msgstr ""

# 21cf2442985443b59105f8a153bba158
#: ../source/gmm/blas.rst:124
msgid "scalar product"
msgstr ""

# 7e8d523dae3a41229cb14fe4278c32b6
#: ../source/gmm/blas.rst:127
msgid ""
"for vectors only, ``gmm::vect_sp(V1, V2)`` gives the scalar product "
"between ``V1`` and ``V2``. For complex vectors, this do not conjugate "
"``V1``, you can use ``gmm::vect_sp(V1, gmm::conjugated(V2))`` or "
"``gmm::vect_hp(V1, V2)`` which is equivalent."
msgstr ""

