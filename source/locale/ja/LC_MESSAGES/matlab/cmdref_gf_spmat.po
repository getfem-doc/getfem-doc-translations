# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# a3b04062c15546369318c52937827909
#: ../source/matlab/cmdref_gf_spmat.rst:8
msgid "gf_spmat"
msgstr ""

# db212a8f21f24ce18a0f1cf3e24fa581
#: ../source/matlab/cmdref_gf_spmat.rst:10
msgid "**Synopsis**"
msgstr ""

# 00d4d474220f4e408750a81328bae85f
#: ../source/matlab/cmdref_gf_spmat.rst:22
msgid "**Description :**"
msgstr ""

# d2b04b78d35343f4bd2b10e7e2b85c0e
#: ../source/matlab/cmdref_gf_spmat.rst:25
msgid "General constructor for spmat objects."
msgstr ""

# d75e04cf84e74192bea625f130818001
#: ../source/matlab/cmdref_gf_spmat.rst:27
msgid ""
"Create a new sparse matrix in getfem++ format(, i.e. sparse matrices "
"which are stored in the getfem workspace, not the matlab sparse "
"matrices). These sparse matrix can be stored as CSC (compressed column "
"sparse), which is the format used by Matlab, or they can be stored as WSC"
" (internal format to getfem). The CSC matrices are not writable (it would"
" be very inefficient), but they are optimized for multiplication with "
"vectors, and memory usage. The WSC are writable, they are very fast with "
"respect to random read/write operation. However their memory overhead is "
"higher than CSC matrices, and they are a little bit slower for matrix-"
"vector multiplications."
msgstr ""

# 813c9a70710b44bcb34d0e4ec7294506
#: ../source/matlab/cmdref_gf_spmat.rst:38
msgid ""
"By default, all newly created matrices are build as WSC matrices. This "
"can be changed later with ``gf_spmat_set(spmat S, 'to_csc',...)``, or may"
" be changed automatically by getfem (for example ``gf_linsolve()`` "
"converts the matrices to CSC)."
msgstr ""

# 67ce10f17a0a414ca42a504a7a251fbe
#: ../source/matlab/cmdref_gf_spmat.rst:43
msgid "The matrices may store REAL or COMPLEX values."
msgstr ""

# 009df77c2f054cdc85f4426bff45e235
#: ../source/matlab/cmdref_gf_spmat.rst:46
msgid "**Command list :**"
msgstr ""

# a64cd6f6b5a044559a490b48db0fbb08
#: ../source/matlab/cmdref_gf_spmat.rst:50
msgid "``SM = gf_spmat('empty', int m [, int n])``"
msgstr ""

# 185fe4649d1e433ab276980ee1fe8f03
#: ../source/matlab/cmdref_gf_spmat.rst:52
msgid ""
"Create a new empty (i.e. full of zeros) sparse matrix, of dimensions `m x"
" n`. If `n` is omitted, the matrix dimension is `m x m`."
msgstr ""

# 1c43e800ae5c4120b7feab42306d1af6
#: ../source/matlab/cmdref_gf_spmat.rst:56
msgid "``SM = gf_spmat('copy', mat K [,  I [,  J]])``"
msgstr ""

# cdb14ad6db7b495ab67f468acf0d310d
#: ../source/matlab/cmdref_gf_spmat.rst:58
msgid ""
"Duplicate a matrix `K` (which might be a spmat or a native matlab sparse "
"matrix). If index `I` and/or `J` are given, the matrix will be a "
"submatrix of `K`. For example::"
msgstr ""

# 73248b50af8a42d2aaf2950cb85117ad
#: ../source/matlab/cmdref_gf_spmat.rst:66
msgid "will return a 40x5 matrix."
msgstr ""

# 183da4fd31284602bf1fb8ecae28c505
#: ../source/matlab/cmdref_gf_spmat.rst:69
msgid "``SM = gf_spmat('identity', int n)``"
msgstr ""

# 0a049c3061b14fbe8c1e5f48c3d8e615
#: ../source/matlab/cmdref_gf_spmat.rst:71
msgid "Create a `n x n` identity matrix."
msgstr ""

# 1a65762b78ae4dc2a7ab72ccc7d9aaae
#: ../source/matlab/cmdref_gf_spmat.rst:74
msgid "``SM = gf_spmat('mult', spmat A, spmat B)``"
msgstr ""

# 970cabc7b03041cf925f4134d88ce3d1
#: ../source/matlab/cmdref_gf_spmat.rst:76
msgid ""
"Create a sparse matrix as the product of the sparse matrices `A` and `B`."
" It requires that `A` and `B` be both real or both complex, you may have "
"to use ``gf_spmat_set(spmat S, 'to_complex')``"
msgstr ""

# f6021ae9ab7442c8bbb84348e1cf6b58
#: ../source/matlab/cmdref_gf_spmat.rst:81
msgid "``SM = gf_spmat('add', spmat A, spmat B)``"
msgstr ""

# ecb2cbd4a4074c3685dc0c6a43880af6
#: ../source/matlab/cmdref_gf_spmat.rst:83
msgid ""
"Create a sparse matrix as the sum of the sparse matrices `A` and `B`. "
"Adding a real matrix with a complex matrix is possible."
msgstr ""

# a4dfe5338ccc4b46bbcad703f8eeb05d
#: ../source/matlab/cmdref_gf_spmat.rst:87
msgid "``SM = gf_spmat('diag', mat D [, ivec E [, int n [,int m]]])``"
msgstr ""

# d13dd5132f104c3d83737faeb0043993
#: ../source/matlab/cmdref_gf_spmat.rst:89
msgid ""
"Create a diagonal matrix. If `E` is given, `D` might be a matrix and each"
" column of `E` will contain the sub-diagonal number that will be filled "
"with the corresponding column of `D`."
msgstr ""

# d274509778a64db2a00b8b8f494accb9
#: ../source/matlab/cmdref_gf_spmat.rst:94
msgid ""
"``SM = gf_spmat('load','hb'|'harwell-boeing'|'mm'|'matrix-market', string"
" filename)``"
msgstr ""

# b46439efcd384ef8bb9cc3a4c5969a0a
#: ../source/matlab/cmdref_gf_spmat.rst:96
msgid ""
"Read a sparse matrix from an Harwell-Boeing or a Matrix-Market file See "
"also ``gf_util('load matrix')``."
msgstr ""

