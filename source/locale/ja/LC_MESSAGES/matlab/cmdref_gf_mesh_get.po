# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 7272fe0a682b4e43aa63ccee4f9c7e23
#: ../source/matlab/cmdref_gf_mesh_get.rst:8
msgid "gf_mesh_get"
msgstr ""

# b6490c3ce9344d939c233c4b817a7b95
#: ../source/matlab/cmdref_gf_mesh_get.rst:10
msgid "**Synopsis**"
msgstr ""

# 89d4e9ebe49c477ea6c4ec9479b5ec20
#: ../source/matlab/cmdref_gf_mesh_get.rst:59
msgid "**Description :**"
msgstr ""

# 180a9aaef67b45b6a3907720cacb28bb
#: ../source/matlab/cmdref_gf_mesh_get.rst:62
msgid ""
"General mesh inquiry function. All these functions accept also a mesh_fem"
" argument instead of a mesh M (in that case, the mesh_fem linked mesh "
"will be used). Note that when your mesh is recognized as a Matlab object "
", you can simply use \"get(M, 'dim')\" instead of \"gf_mesh_get(M, "
"'dim')\"."
msgstr ""

# b7384f450d8345f2b3d671f009469a4f
#: ../source/matlab/cmdref_gf_mesh_get.rst:69
msgid "**Command list :**"
msgstr ""

# 6e01017fada64b2ca389524ca14d7695
#: ../source/matlab/cmdref_gf_mesh_get.rst:73
msgid "``d = gf_mesh_get(mesh M, 'dim')``"
msgstr ""

# ac7879910b904d2888051fb3554b33dd
#: ../source/matlab/cmdref_gf_mesh_get.rst:75
msgid "Get the dimension of the mesh (2 for a 2D mesh, etc)."
msgstr ""

# 4ed1f4e8546f41d19a870a968898cdeb
#: ../source/matlab/cmdref_gf_mesh_get.rst:78
msgid "``np = gf_mesh_get(mesh M, 'nbpts')``"
msgstr ""

# caa1f66118fa4e229b21b539912aa23c
#: ../source/matlab/cmdref_gf_mesh_get.rst:80
msgid "Get the number of points of the mesh."
msgstr ""

# 960592439d7a4ceda200852c58b1ea1a
#: ../source/matlab/cmdref_gf_mesh_get.rst:83
msgid "``nc = gf_mesh_get(mesh M, 'nbcvs')``"
msgstr ""

# 08ce34d4b656414384cb0a6f6c0219b8
#: ../source/matlab/cmdref_gf_mesh_get.rst:85
msgid "Get the number of convexes of the mesh."
msgstr ""

# d51b3990e0154df98f10a04f6c2aaecb
#: ../source/matlab/cmdref_gf_mesh_get.rst:88
msgid "``P = gf_mesh_get(mesh M, 'pts'[, ivec PIDs])``"
msgstr ""

# d2434aea873b43e8a499cf5ad2d2c670
#: ../source/matlab/cmdref_gf_mesh_get.rst:90
msgid "Return the list of point coordinates of the mesh."
msgstr ""

# 441d609c4ad145f4b8017a705c1c5eec
#: ../source/matlab/cmdref_gf_mesh_get.rst:92
msgid ""
"Each column of the returned matrix contains the coordinates of one point."
" If the optional argument `PIDs` was given, only the points whose #id is "
"listed in this vector are returned. Otherwise, the returned matrix will "
"have gf_mesh_get(mesh M, 'max_pid') columns, which might be greater than "
"gf_mesh_get(mesh M, 'nbpts') (if some points of the mesh have been "
"destroyed and no call to gf_mesh_set(mesh M, 'optimize structure') have "
"been issued). The columns corresponding to deleted points will be filled "
"with NaN. You can use gf_mesh_get(mesh M, 'pid') to filter such invalid "
"points."
msgstr ""

# a8fe403923d6412ea4eed48486be6bd7
#: ../source/matlab/cmdref_gf_mesh_get.rst:103
msgid "``Pid = gf_mesh_get(mesh M, 'pid')``"
msgstr ""

# 282b215c884c4bdcba25886116877ebe
#: ../source/matlab/cmdref_gf_mesh_get.rst:105
msgid "Return the list of points #id of the mesh."
msgstr ""

# 216ec553ae274107b832448153c7d398
#: ../source/matlab/cmdref_gf_mesh_get.rst:107
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbpts'), especially if some points have been removed"
" from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering. Pid is a row vector."
msgstr ""

# eb2b051ed5644aba95902e1328688a11
#: ../source/matlab/cmdref_gf_mesh_get.rst:114
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in faces', imat CVFIDs)``"
msgstr ""

# 5e3fc39dc75d45688cf29a4e4e4db9ac
#: ../source/matlab/cmdref_gf_mesh_get.rst:116
msgid "Search point #id listed in `CVFIDs`."
msgstr ""

# cfe114fc61f74c0cb1624d9e146c454e
#: ../source/matlab/cmdref_gf_mesh_get.rst:118
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers. On return, `PIDs` is a row vector containing "
"points #id."
msgstr ""

# 50f6d2735769483eb56b5ab301d68015
#: ../source/matlab/cmdref_gf_mesh_get.rst:123
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in cvids', imat CVIDs)``"
msgstr ""

# a388c86035f04086b2176b34603331c3
#: ../source/matlab/cmdref_gf_mesh_get.rst:125
msgid "Search point #id listed in `CVIDs`."
msgstr ""

# f08301f877064588b7bfa8db75e2eda1
# 714a358da9b64c24b2a8e71d0a1b66cf
#: ../source/matlab/cmdref_gf_mesh_get.rst:127
#: ../source/matlab/cmdref_gf_mesh_get.rst:134
msgid "`PIDs` is a row vector containing points #id."
msgstr ""

# d32f071325cb4317815eda2cd68f335d
#: ../source/matlab/cmdref_gf_mesh_get.rst:130
msgid "``PIDs = gf_mesh_get(mesh M, 'pid in regions', imat RIDs)``"
msgstr ""

# 83c72fe4423946e08ecec39a26ed5dcd
#: ../source/matlab/cmdref_gf_mesh_get.rst:132
msgid "Search point #id listed in `RIDs`."
msgstr ""

# e6debbe7dcaa43569007bfd78f52072b
#: ../source/matlab/cmdref_gf_mesh_get.rst:137
msgid ""
"``PIDs = gf_mesh_get(mesh M, 'pid from coords', mat PTS[, scalar "
"radius=0])``"
msgstr ""

# 2565efaa935f406292f16cf90362a660
#: ../source/matlab/cmdref_gf_mesh_get.rst:139
msgid "Search point #id whose coordinates are listed in `PTS`."
msgstr ""

# d78963cb15104c8a994b8091e4558fab
#: ../source/matlab/cmdref_gf_mesh_get.rst:141
msgid ""
"`PTS` is an array containing a list of point coordinates. On return, "
"`PIDs` is a row vector containing points #id for each point found in "
"`eps` range, and -1 for those which where not found in the mesh."
msgstr ""

# 85072de768d1412c8fba91e295ac779f
#: ../source/matlab/cmdref_gf_mesh_get.rst:147
msgid "``{Pid, IDx} = gf_mesh_get(mesh M, 'pid from cvid'[, imat CVIDs])``"
msgstr ""

# a9c358b4637d4152bee6b20d362f5b64
#: ../source/matlab/cmdref_gf_mesh_get.rst:149
msgid "Return the points attached to each convex of the mesh."
msgstr ""

# b0ffc729bfb1485d8e9330753a10d519
#: ../source/matlab/cmdref_gf_mesh_get.rst:151
msgid ""
"If `CVIDs` is omitted, all the convexes will be considered (equivalent to"
" `CVIDs = gf_mesh_get(mesh M, 'max cvid')`). `IDx` is a row vector, "
"length(IDx) = length(CVIDs)+1. `Pid` is a row vector containing the "
"concatenated list of #id of points of each convex in `CVIDs`. Each entry "
"of `IDx` is the position of the corresponding convex point list in `Pid`."
" Hence, for example, the list of #id of points of the second convex is "
"Pid(IDx(2):IDx(3)-1)."
msgstr ""

# 9d26abc99d9a449bb40a57670ba96094
# 542f61e9035249479488959523541829
#: ../source/matlab/cmdref_gf_mesh_get.rst:160
#: ../source/matlab/cmdref_gf_mesh_get.rst:177
msgid ""
"If `CVIDs` contains convex #id which do not exist in the mesh, their "
"point list will be empty."
msgstr ""

# d93eabf824834869a273e543cc262ef4
#: ../source/matlab/cmdref_gf_mesh_get.rst:164
msgid "``{Pts, IDx} = gf_mesh_get(mesh M, 'pts from cvid'[, imat CVIDs])``"
msgstr ""

# 7fe3ecea0de6425d99179151145c7ec5
#: ../source/matlab/cmdref_gf_mesh_get.rst:166
msgid "Search point listed in `CVID`."
msgstr ""

# 1f363d6452114e31b389118869f012bd
#: ../source/matlab/cmdref_gf_mesh_get.rst:168
msgid ""
"If `CVIDs` is omitted, all the convexes will be considered (equivalent to"
" `CVIDs = gf_mesh_get(mesh M, 'max cvid')`). `IDx` is a row vector, "
"length(IDx) = length(CVIDs)+1. `Pts` is a row vector containing the "
"concatenated list of points of each convex in `CVIDs`. Each entry of "
"`IDx` is the position of the corresponding convex point list in `Pts`. "
"Hence, for example, the list of points of the second convex is "
"Pts(:,IDx(2):IDx(3)-1)."
msgstr ""

# d4ccf32581c2400b8a7d66067b534d6c
#: ../source/matlab/cmdref_gf_mesh_get.rst:181
msgid "``CVid = gf_mesh_get(mesh M, 'cvid')``"
msgstr ""

# 3cda63532ce04302b173a564e65a8473
#: ../source/matlab/cmdref_gf_mesh_get.rst:183
msgid "Return the list of all convex #id."
msgstr ""

# ec6f6c95920f4497b0dc4659e5b14b9a
#: ../source/matlab/cmdref_gf_mesh_get.rst:185
msgid ""
"Note that their numbering is not supposed to be contiguous from 1 to "
"gf_mesh_get(mesh M, 'nbcvs'), especially if some points have been removed"
" from the mesh. You can use gf_mesh_set(mesh M, 'optimize_structure') to "
"enforce a contiguous numbering. CVid is a row vector."
msgstr ""

# d6f9bc9285ac4f86b05eb5bb40b89dee
#: ../source/matlab/cmdref_gf_mesh_get.rst:192
msgid "``m = gf_mesh_get(mesh M, 'max pid')``"
msgstr ""

# 540199b870e841b8933049bf07cc492c
#: ../source/matlab/cmdref_gf_mesh_get.rst:194
msgid "Return the maximum #id of all points in the mesh (see 'max cvid')."
msgstr ""

# 347ea7ae19b248df9b38869c046be887
#: ../source/matlab/cmdref_gf_mesh_get.rst:197
msgid "``m = gf_mesh_get(mesh M, 'max cvid')``"
msgstr ""

# add9ec3de9b347ecb20446ece169c25a
#: ../source/matlab/cmdref_gf_mesh_get.rst:199
msgid "Return the maximum #id of all convexes in the mesh (see 'max pid')."
msgstr ""

# a78a1bc23eea4b5a838501abe6e08d77
#: ../source/matlab/cmdref_gf_mesh_get.rst:202
msgid "``[E,C] = gf_mesh_get(mesh M, 'edges' [, CVLST][, 'merge'])``"
msgstr ""

# 8608c89c6c704712a1b5f4ec0619493e
# d839668b8ddc419aa0335cdaa11782bf
#: ../source/matlab/cmdref_gf_mesh_get.rst:204
#: ../source/matlab/cmdref_gf_mesh_get.rst:219
msgid "[OBSOLETE FUNCTION! will be removed in a future release]"
msgstr ""

# d4cb13de075245759bbd0164107285d4
#: ../source/matlab/cmdref_gf_mesh_get.rst:206
msgid ""
"Return the list of edges of mesh M for the convexes listed in the row "
"vector CVLST. E is a 2 x nb_edges matrix containing point indices. If "
"CVLST is omitted, then the edges of all convexes are returned. If CVLST "
"has two rows then the first row is supposed to contain convex numbers, "
"and the second face numbers, of which the edges will be returned.  If "
"'merge' is indicated, all common edges of convexes are merged in a single"
" edge.  If the optional output argument C is specified, it will contain "
"the convex number associated with each edge."
msgstr ""

# c7a9731028b347009260235d1191af04
#: ../source/matlab/cmdref_gf_mesh_get.rst:217
msgid "``[E,C] = gf_mesh_get(mesh M, 'curved edges', int N [, CVLST])``"
msgstr ""

# 173123bce3f7467b8e9667b62315622f
#: ../source/matlab/cmdref_gf_mesh_get.rst:221
msgid ""
"More sophisticated version of gf_mesh_get(mesh M, 'edges') designed for "
"curved elements. This one will return N (N>=2) points of the (curved) "
"edges. With N==2, this is equivalent to gf_mesh_get(mesh M, 'edges'). "
"Since the points are no more always part of the mesh, their coordinates "
"are returned instead of points number, in the array E which is a [ "
"mesh_dim x 2 x nb_edges ] array.  If the optional output argument C is "
"specified, it will contain the convex number associated with each edge."
msgstr ""

# a644ef0959234bd799aeefeb00bd111c
#: ../source/matlab/cmdref_gf_mesh_get.rst:231
msgid "``PIDs = gf_mesh_get(mesh M, 'orphaned pid')``"
msgstr ""

# e3dc2d99a2594a8c90a3ab0eb7d638b6
#: ../source/matlab/cmdref_gf_mesh_get.rst:233
msgid "Search point #id which are not linked to a convex."
msgstr ""

# b47d5785c70c4a79baddfccbe22c984e
#: ../source/matlab/cmdref_gf_mesh_get.rst:236
msgid ""
"``CVIDs = gf_mesh_get(mesh M, 'cvid from pid', ivec PIDs[, bool "
"share=False])``"
msgstr ""

# 95399afd98cd4765aa5ea4de484eacf1
#: ../source/matlab/cmdref_gf_mesh_get.rst:238
msgid "Search convex #ids related with the point #ids given in `PIDs`."
msgstr ""

# 2ee699ff373c499eb12b01067cc81ca1
#: ../source/matlab/cmdref_gf_mesh_get.rst:240
msgid ""
"If `share=False`, search convex whose vertex #ids are in `PIDs`. If "
"`share=True`, search convex #ids that share the point #ids given in "
"`PIDs`. `CVIDs` is a row vector (possibly empty)."
msgstr ""

# 1b65ed016b8746ac8a920741c7fed586
#: ../source/matlab/cmdref_gf_mesh_get.rst:246
msgid "``CVFIDs = gf_mesh_get(mesh M, 'faces from pid', ivec PIDs)``"
msgstr ""

# ab6822ee8100425eb1b08eb06ff79584
#: ../source/matlab/cmdref_gf_mesh_get.rst:248
msgid "Return the convex faces whose vertex #ids are in `PIDs`."
msgstr ""

# ba5d2e85e24c4e34bb73e3131d2da099
#: ../source/matlab/cmdref_gf_mesh_get.rst:250
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). For a convex face"
" to be returned, EACH of its points have to be listed in `PIDs`."
msgstr ""

# 7cbd774f6a1b4d65bd5a45c14e09abb1
#: ../source/matlab/cmdref_gf_mesh_get.rst:256
msgid "``CVFIDs = gf_mesh_get(mesh M, 'outer faces'[, CVIDs])``"
msgstr ""

# 26c015cc161f4adc8fa23fd3bdc2b53a
#: ../source/matlab/cmdref_gf_mesh_get.rst:258
msgid "Return the set of faces not shared by two elements."
msgstr ""

# 760843cab58c4ab9953dd53d13d0af58
#: ../source/matlab/cmdref_gf_mesh_get.rst:260
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex "
"#ids, and the second one lists face numbers (local number in the convex)."
" If `CVIDs` is not given, all convexes are considered, and it basically "
"returns the mesh boundary. If `CVIDs` is given, it returns the boundary "
"of the convex set whose #ids are listed in `CVIDs`."
msgstr ""

# a1face375b59463e95e7a4bb49a195eb
#: ../source/matlab/cmdref_gf_mesh_get.rst:268
msgid "``CVFIDs = gf_mesh_get(mesh M, 'inner faces'[, CVIDs])``"
msgstr ""

# 034da68e3461428bbc45277d4b46f12f
#: ../source/matlab/cmdref_gf_mesh_get.rst:270
msgid ""
"Return the set of faces shared at least by two elements in CVIDs. Each "
"face is represented only once and is arbitrarily chosen between the two "
"neighbour elements."
msgstr ""

# f0a268bb3d8f4270a9e6cfc7a5eac7c6
#: ../source/matlab/cmdref_gf_mesh_get.rst:275
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces with direction', vec v, "
"scalar angle [, CVIDs])``"
msgstr ""

# c4c1dc0589c549f3acf595be76422a7a
#: ../source/matlab/cmdref_gf_mesh_get.rst:277
msgid ""
"Return the set of faces not shared by two convexes and with a mean "
"outward vector lying within an angle `angle` (in radians) from vector "
"`v`."
msgstr ""

# 4e83b6945b9a4358818b01509e555b75
# 6cf16917021c49c6b55821a0bbe2522f
#: ../source/matlab/cmdref_gf_mesh_get.rst:279
#: ../source/matlab/cmdref_gf_mesh_get.rst:289
msgid ""
"The output `CVFIDs` is a two-rows matrix, the first row lists convex "
"#ids, and the second one lists face numbers (local number in the convex)."
" If `CVIDs` is given, it returns portion of the boundary of the convex "
"set defined by the #ids listed in `CVIDs`."
msgstr ""

# 647e67e27c2d46aeb021e426502a18fd
#: ../source/matlab/cmdref_gf_mesh_get.rst:285
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'outer faces in box', vec pmin, vec pmax "
"[, CVIDs])``"
msgstr ""

# 24af9f98144b444e97b04554c265ba0a
#: ../source/matlab/cmdref_gf_mesh_get.rst:287
msgid ""
"Return the set of faces not shared by two convexes and lying within the "
"box defined by the corner points `pmin` and `pmax`."
msgstr ""

# 9c6ad9aa0ef54082ba97aca2ab6267c1
#: ../source/matlab/cmdref_gf_mesh_get.rst:295
msgid "``CVFIDs = gf_mesh_get(mesh M, 'adjacent face', int cvid, int fid)``"
msgstr ""

# 4cd0d540e4c24e2d958a3ea2cde22d72
#: ../source/matlab/cmdref_gf_mesh_get.rst:297
msgid ""
"Return convex face of the neighbour element if it exists. If the convex "
"have more than one neighbour relativley to the face ``f`` (think to bar "
"elements in 3D for instance), return the first face found."
msgstr ""

# c41706365da840b88508c72427869b59
#: ../source/matlab/cmdref_gf_mesh_get.rst:303
msgid ""
"``CVFIDs = gf_mesh_get(mesh M, 'faces from cvid'[, ivec CVIDs][, "
"'merge'])``"
msgstr ""

# 71a9db72e17e4399ae0b99caad4ee921
#: ../source/matlab/cmdref_gf_mesh_get.rst:305
msgid "Return a list of convex faces from a list of convex #id."
msgstr ""

# cfec7723af3b4513befea97fbd1c3d7b
#: ../source/matlab/cmdref_gf_mesh_get.rst:307
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). If `CVIDs` is not"
" given, all convexes are considered. The optional argument 'merge' merges"
" faces shared by the convex of `CVIDs`."
msgstr ""

# 1fdb7752a8b94c0ca293e2861c2b5281
#: ../source/matlab/cmdref_gf_mesh_get.rst:313
msgid ""
"``[mat T] = gf_mesh_get(mesh M, 'triangulated surface', int Nrefine "
"[,CVLIST])``"
msgstr ""

# 18d1a134331f42e0a8ae483d9050a400
#: ../source/matlab/cmdref_gf_mesh_get.rst:315
msgid "[DEPRECATED FUNCTION! will be removed in a future release]"
msgstr ""

# c31019547b2d4d4c89e0fcf6866cca7f
#: ../source/matlab/cmdref_gf_mesh_get.rst:317
msgid ""
"Similar function to gf_mesh_get(mesh M, 'curved edges') : split (if "
"necessary, i.e. if the geometric transformation if non-linear) each face "
"into sub-triangles and return their coordinates in T (see also "
"gf_compute('eval on P1 tri mesh'))"
msgstr ""

# a44ec59b27854da39e622dbc62449431
#: ../source/matlab/cmdref_gf_mesh_get.rst:323
msgid "``N = gf_mesh_get(mesh M, 'normal of face', int cv, int f[, int nfpt])``"
msgstr ""

# 7ea27ed7331a43f2becfa82a101a5169
#: ../source/matlab/cmdref_gf_mesh_get.rst:325
msgid ""
"Evaluates the normal of convex `cv`, face `f` at the `nfpt` point of the "
"face."
msgstr ""

# ada10b457421489f8f7123c53b4865c9
#: ../source/matlab/cmdref_gf_mesh_get.rst:327
msgid ""
"If `nfpt` is not specified, then the normal is evaluated at each "
"geometrical node of the face."
msgstr ""

# 977452b9f63041da880f97abcee892d9
#: ../source/matlab/cmdref_gf_mesh_get.rst:331
msgid "``N = gf_mesh_get(mesh M, 'normal of faces', imat CVFIDs)``"
msgstr ""

# 1e228a05255144f8817637707fd67640
#: ../source/matlab/cmdref_gf_mesh_get.rst:333
msgid "Evaluates (at face centers) the normals of convexes."
msgstr ""

# 68e5a6ca7e484eaf93bf5ed5695b879f
#: ../source/matlab/cmdref_gf_mesh_get.rst:335
msgid ""
"`CVFIDs` is supposed a two-rows matrix, the first row lists convex #ids, "
"and the second lists face numbers (local number in the convex)."
msgstr ""

# 2500893911124274a827548db457845b
#: ../source/matlab/cmdref_gf_mesh_get.rst:339
msgid "``Q = gf_mesh_get(mesh M, 'quality'[, ivec CVIDs])``"
msgstr ""

# 88d39dfd8fff4b2b86b7cca9902de4f5
#: ../source/matlab/cmdref_gf_mesh_get.rst:341
msgid ""
"Return an estimation of the quality of each convex (:math:`0 \\leq Q "
"\\leq 1`)."
msgstr ""

# 7e344580607949cbbe6939b63cbc94d1
#: ../source/matlab/cmdref_gf_mesh_get.rst:344
msgid "``A = gf_mesh_get(mesh M, 'convex area'[, ivec CVIDs])``"
msgstr ""

# a07432360842406c93d005974667c17f
#: ../source/matlab/cmdref_gf_mesh_get.rst:346
msgid "Return an estimate of the area of each convex."
msgstr ""

# 1a9000d44b0b4a90948227ef9d14742a
#: ../source/matlab/cmdref_gf_mesh_get.rst:349
msgid "``A = gf_mesh_get(mesh M, 'convex radius'[, ivec CVIDs])``"
msgstr ""

# e2b0db0deab64841a93597d331828090
#: ../source/matlab/cmdref_gf_mesh_get.rst:351
msgid "Return an estimate of the radius of each convex."
msgstr ""

# 76f08840f78247c587c3b78586dda2d2
#: ../source/matlab/cmdref_gf_mesh_get.rst:354
msgid "``{S, CV2S} = gf_mesh_get(mesh M, 'cvstruct'[, ivec CVIDs])``"
msgstr ""

# 1b7d1515d82a42afad3d47d350a4115c
#: ../source/matlab/cmdref_gf_mesh_get.rst:356
msgid "Return an array of the convex structures."
msgstr ""

# c7f0871ec4e84e7b95ce518ecdc62d9f
#: ../source/matlab/cmdref_gf_mesh_get.rst:358
msgid ""
"If `CVIDs` is not given, all convexes are considered. Each convex "
"structure is listed once in `S`, and `CV2S` maps the convexes indice in "
"`CVIDs` to the indice of its structure in `S`."
msgstr ""

# d1247de7c5c4449fbb28a5def973993e
#: ../source/matlab/cmdref_gf_mesh_get.rst:363
msgid "``{GT, CV2GT} = gf_mesh_get(mesh M, 'geotrans'[, ivec CVIDs])``"
msgstr ""

# dd403f023763466a8e0f88b488efb512
#: ../source/matlab/cmdref_gf_mesh_get.rst:365
msgid "Returns an array of the geometric transformations."
msgstr ""

# d3d88b58926646878f6e8e9af4acdbd5
#: ../source/matlab/cmdref_gf_mesh_get.rst:367
msgid "See also gf_mesh_get(mesh M, 'cvstruct')."
msgstr ""

# 352975af3c454741aca89273706907ce
#: ../source/matlab/cmdref_gf_mesh_get.rst:370
msgid "``RIDs = gf_mesh_get(mesh M, 'boundaries')``"
msgstr ""

# 75333e3ec30d4803ae334ad1209dffd9
#: ../source/matlab/cmdref_gf_mesh_get.rst:372
msgid "DEPRECATED FUNCTION. Use 'regions' instead."
msgstr ""

# afd5d42c6ef549898098b1e5eef7549a
#: ../source/matlab/cmdref_gf_mesh_get.rst:375
msgid "``RIDs = gf_mesh_get(mesh M, 'regions')``"
msgstr ""

# 254f73e9386c41aea2e52b571b0db633
#: ../source/matlab/cmdref_gf_mesh_get.rst:377
msgid "Return the list of valid regions stored in the mesh."
msgstr ""

# aa4417f57b284ed6982f74362c58f512
#: ../source/matlab/cmdref_gf_mesh_get.rst:380
msgid "``RIDs = gf_mesh_get(mesh M, 'boundary')``"
msgstr ""

# 0d9d14d7fe1744968ba2e4fad5e6d890
#: ../source/matlab/cmdref_gf_mesh_get.rst:382
msgid "DEPRECATED FUNCTION. Use 'region' instead."
msgstr ""

# 1cc2dfdf7f8540f380054f2d870f90d3
#: ../source/matlab/cmdref_gf_mesh_get.rst:385
msgid "``CVFIDs = gf_mesh_get(mesh M, 'region', ivec RIDs)``"
msgstr ""

# 1d9ac8411aed4997811536348aef998c
#: ../source/matlab/cmdref_gf_mesh_get.rst:387
msgid "Return the list of convexes/faces on the regions `RIDs`."
msgstr ""

# 98ff0f5722d3401d84cf370c8e49262b
#: ../source/matlab/cmdref_gf_mesh_get.rst:389
msgid ""
"`CVFIDs` is a two-rows matrix, the first row lists convex #ids, and the "
"second lists face numbers (local number in the convex). (and 0 when the "
"whole convex is in the regions)."
msgstr ""

# e3dc0f1f8ff44442b07ce625dac6ec9c
#: ../source/matlab/cmdref_gf_mesh_get.rst:395
msgid "``gf_mesh_get(mesh M, 'save', string filename)``"
msgstr ""

# fea88cddb68c456fae5ed90194758477
#: ../source/matlab/cmdref_gf_mesh_get.rst:397
msgid "Save the mesh object to an ascii file."
msgstr ""

# cba2235b481e44758346c491326ac3fa
#: ../source/matlab/cmdref_gf_mesh_get.rst:399
msgid "This mesh can be restored with gf_mesh('load', filename)."
msgstr ""

# 7519b461fdbf40fd934c8b2e2e16b374
#: ../source/matlab/cmdref_gf_mesh_get.rst:402
msgid "``s = gf_mesh_get(mesh M, 'char')``"
msgstr ""

# d5848ae620e04787ab4740d1636510c2
#: ../source/matlab/cmdref_gf_mesh_get.rst:404
msgid "Output a string description of the mesh."
msgstr ""

# 2a7ad574770440eeaa6f9e3ce09f6d53
#: ../source/matlab/cmdref_gf_mesh_get.rst:407
msgid ""
"``gf_mesh_get(mesh M, 'export to vtk', string filename, ... "
"[,'ascii'][,'quality'])``"
msgstr ""

# aa9589805ecc4d7f90b4d1835634cbe6
#: ../source/matlab/cmdref_gf_mesh_get.rst:409
msgid "Exports a mesh to a VTK file ."
msgstr ""

# bc1ca2e51b174df3b8a4665f9cb36756
#: ../source/matlab/cmdref_gf_mesh_get.rst:411
msgid ""
"If 'quality' is specified, an estimation of the quality of each convex "
"will be written to the file."
msgstr ""

# f56395e7eae64c5997edc0d3c1a40843
#: ../source/matlab/cmdref_gf_mesh_get.rst:414
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to vtk'), "
"gf_slice_get(slice S, 'export to vtk')."
msgstr ""

# 2b64031b071f47fe9d24dd859abe1279
#: ../source/matlab/cmdref_gf_mesh_get.rst:417
msgid ""
"``gf_mesh_get(mesh M, 'export to dx', string filename, ... "
"[,'ascii'][,'append'][,'as',string name,[,'serie',string "
"serie_name]][,'edges'])``"
msgstr ""

# 0c3ac3fa946947b083b240d2c5c5c050
#: ../source/matlab/cmdref_gf_mesh_get.rst:419
msgid "Exports a mesh to an OpenDX file."
msgstr ""

# 4f07b48451994b94868546e3e491d2cd
#: ../source/matlab/cmdref_gf_mesh_get.rst:421
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to dx'), gf_slice_get(slice"
" S, 'export to dx')."
msgstr ""

# 357f89c05bba49d0a850d70cb2e8f242
#: ../source/matlab/cmdref_gf_mesh_get.rst:424
msgid "``gf_mesh_get(mesh M, 'export to pos', string filename[, string name])``"
msgstr ""

# 6a5803eb4b834b2b801bed1a8d202d3d
#: ../source/matlab/cmdref_gf_mesh_get.rst:426
msgid "Exports a mesh to a POS file ."
msgstr ""

# bed17a15dd164ce7bcf9a907c4cd43ea
#: ../source/matlab/cmdref_gf_mesh_get.rst:428
msgid ""
"See also gf_mesh_fem_get(mesh_fem MF, 'export to pos'), "
"gf_slice_get(slice S, 'export to pos')."
msgstr ""

# 5f3147e75eaf4a7881b72db6c5306424
#: ../source/matlab/cmdref_gf_mesh_get.rst:431
msgid "``z = gf_mesh_get(mesh M, 'memsize')``"
msgstr ""

# 19b4647751a74ff88468801c6d8f95a5
#: ../source/matlab/cmdref_gf_mesh_get.rst:433
msgid "Return the amount of memory (in bytes) used by the mesh."
msgstr ""

# 4057ea1d3fcd45df96b4e41e849ef505
#: ../source/matlab/cmdref_gf_mesh_get.rst:436
msgid "``gf_mesh_get(mesh M, 'display')``"
msgstr ""

# 752b8af81e7243cb8b81d984217661e2
#: ../source/matlab/cmdref_gf_mesh_get.rst:438
msgid "displays a short summary for a mesh object."
msgstr ""

