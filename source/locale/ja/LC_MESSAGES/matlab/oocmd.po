# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 15883dea0490439ea3888a9aa7f1b867
#: ../source/matlab/oocmd.rst:10
msgid "|gfm| OO-commands"
msgstr ""

# 5f2e85704186423d8dbc23b465f962dc
#: ../source/matlab/oocmd.rst:12
msgid ""
"The toolbox comes with a set of |Mlab| objects `mathworks-oo`_, (look at "
"the :file:`@gf*` sub-directories in the toolbox directory). These object "
"are no more than the getfem object handles, which are flagged by |mlab| "
"as objects."
msgstr ""

# 16f9c59795d9482ba0ec3ec54e168cce
#: ../source/matlab/oocmd.rst:16
msgid ""
"In order to use these objects, you have to call their constructors: "
"``gfMesh``, ``gfMeshFem``, ``gfGeoTrans``, ``gfFem``, ``gfInteg``.  These"
" constructor just call the corresponding |gfm| function (i.e.  "
"``gf_mesh``, ``gf_mesh_fem``, ...), and convert the structure returned by"
" these function into a |mlab| object. There is also a ``gfObject`` "
"function which converts any getfem handle into the corresponding |mlab| "
"object."
msgstr ""

# c7cb9714d59149ffb0e1c393554c88ae
#: ../source/matlab/oocmd.rst:23
msgid ""
"With such object, the most interesting feature is that you do not have to"
" call the \"long\" functions names ``gf_mesh_fem_get(obj,...)``, "
"``gf_slice_set(obj,...)`` etc., instead you just call the shorter "
"``get(obj,...)`` or ``set(obj,...)`` whatever the type of ``obj`` is."
msgstr ""

# 99f80a83061149a7a3b5258f4522e820
#: ../source/matlab/oocmd.rst:28
msgid ""
"A small number of \"pseudo-properties\" are also defined on these "
"objects, for example if ``m`` is a ``gfMesh`` object, you can use "
"directly ``m.nbpts`` instead of ``get(m, 'nbpts')``."
msgstr ""

# b38f0c62aa2d4f92bf45c45ffa89d78d
#: ../source/matlab/oocmd.rst:32
msgid "As an example::"
msgstr ""

# 6bf700558e6f4561b320dbc29c68967d
#: ../source/matlab/oocmd.rst:78
msgid ""
"Although this interface seems more convenient, you must be aware that "
"this always induce a call to a mex-file, and additional |mlab| code::"
msgstr ""

# 343e031b56d84bdbb050fab2548cbc6c
#: ../source/matlab/oocmd.rst:91
msgid ""
"Hence you should always try to store data in |mlab| arrays instead of "
"repetitively calling the getfem functions."
msgstr ""

# 9b0cab40ddf94ea49b026a48c3abe6b5
#: ../source/matlab/oocmd.rst:94
msgid ""
"Avalaible object types are :envvar:`gfCvStruct`, :envvar:`gfGeoTrans`, "
":envvar:`gfEltm`, :envvar:`gfInteg`, :envvar:`gfFem`, :envvar:`gfMesh`, "
":envvar:`gfMeshFem`, :envvar:`gfMeshIm`, :envvar:`gfMdBrick`, "
":envvar:`gfMdState`, :envvar:`gfModel`, :envvar:`gfSpmat`, "
":envvar:`gfPrecond`, and :envvar:`gfSlice`."
msgstr ""

