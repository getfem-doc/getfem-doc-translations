# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 5ff3ce2191b2410ab133e9330124ffbc
#: ../source/scilab/cmdref_gf_spmat_get.rst:8
msgid "gf_spmat_get"
msgstr ""

# 7b47be84cdc74fe88c1f11d6a4b4550f
#: ../source/scilab/cmdref_gf_spmat_get.rst:10
msgid "**Synopsis**"
msgstr ""

# 592c047ff9834c30b927c660263c6198
#: ../source/scilab/cmdref_gf_spmat_get.rst:30
msgid "**Description :**"
msgstr ""

# daa70039ce584778820b0aeeb398d50e
#: ../source/scilab/cmdref_gf_spmat_get.rst:35
msgid "**Command list :**"
msgstr ""

# 0daa920c568a4f41afb3244612dd4d28
#: ../source/scilab/cmdref_gf_spmat_get.rst:39
msgid "``n = gf_spmat_get(spmat S, 'nnz')``"
msgstr ""

# 221b0de132184d9d854596323a324519
#: ../source/scilab/cmdref_gf_spmat_get.rst:41
msgid "Return the number of non-null values stored in the sparse matrix."
msgstr ""

# 412e85de65c7475398f1978139c6ef1c
#: ../source/scilab/cmdref_gf_spmat_get.rst:44
msgid "``Sm = gf_spmat_get(spmat S, 'full'[, list I[, list J]])``"
msgstr ""

# ed79466c68914774a96478dee0346dd6
#: ../source/scilab/cmdref_gf_spmat_get.rst:46
msgid "Return a full (sub-)matrix."
msgstr ""

# 08c244d57e7a48e8aea7cb67c126484c
#: ../source/scilab/cmdref_gf_spmat_get.rst:48
msgid ""
"The optional arguments <literal>I</literal> and <literal>J</literal>, are"
" the sub-intervals for the rows and columns that are to be extracted."
msgstr ""

# c76630b082d84ab790b45a1e43e00b54
#: ../source/scilab/cmdref_gf_spmat_get.rst:52
msgid "``MV = gf_spmat_get(spmat S, 'mult', vec V)``"
msgstr ""

# 1beb5ae688784a1ab1e0e1a1c61085d0
#: ../source/scilab/cmdref_gf_spmat_get.rst:54
msgid ""
"Product of the sparse matrix <literal>M</literal> with a vector "
"<literal>V</literal>."
msgstr ""

# e3be91c96cef4431905230da637f3caa
#: ../source/scilab/cmdref_gf_spmat_get.rst:56
msgid "For matrix-matrix multiplications, see gf_spmat('mult')."
msgstr ""

# 6daefe711aca41cd913ae721ea89e5eb
#: ../source/scilab/cmdref_gf_spmat_get.rst:59
msgid "``MtV = gf_spmat_get(spmat S, 'tmult', vec V)``"
msgstr ""

# 7d90c7cb2e9c441588c4d80bd71b5892
#: ../source/scilab/cmdref_gf_spmat_get.rst:61
msgid ""
"Product of <literal>M</literal> transposed (conjugated if "
"<literal>M</literal> is complex) with the vector <literal>V</literal>."
msgstr ""

# 224a9183fb934de48207f4fc87be5759
#: ../source/scilab/cmdref_gf_spmat_get.rst:65
msgid "``D = gf_spmat_get(spmat S, 'diag'[, list E])``"
msgstr ""

# f1cf3e62425b4cf7bd175d36d1a43a86
#: ../source/scilab/cmdref_gf_spmat_get.rst:67
msgid "Return the diagonal of <literal>M</literal> as a vector."
msgstr ""

# 2ba771f622ea40698ee8da17df44b46a
#: ../source/scilab/cmdref_gf_spmat_get.rst:69
msgid ""
"If <literal>E</literal> is used, return the sub-diagonals whose ranks are"
" given in E."
msgstr ""

# 7b44a7bf09b240e69ba3662ce07c70c7
#: ../source/scilab/cmdref_gf_spmat_get.rst:72
msgid "``s = gf_spmat_get(spmat S, 'storage')``"
msgstr ""

# c0b6fff3ef9b47c383e20091acf0796e
#: ../source/scilab/cmdref_gf_spmat_get.rst:74
msgid "Return the storage type currently used for the matrix."
msgstr ""

# 297793f704a44545bba72ef2c91b7f07
#: ../source/scilab/cmdref_gf_spmat_get.rst:76
msgid "The storage is returned as a string, either 'CSC' or 'WSC'."
msgstr ""

# 6091f279aad64c97af71ffbc8faf4538
#: ../source/scilab/cmdref_gf_spmat_get.rst:79
msgid "``{ni,nj} = gf_spmat_get(spmat S, 'size')``"
msgstr ""

# 1f61c46fe68248f48ed6c6afdaeb75ff
#: ../source/scilab/cmdref_gf_spmat_get.rst:81
msgid ""
"Return a vector where <literal>ni</literal> and <literal>nj</literal> are"
" the dimensions of the matrix."
msgstr ""

# 31e7d4fb1a17410b8b98cc20415703b9
#: ../source/scilab/cmdref_gf_spmat_get.rst:84
msgid "``b = gf_spmat_get(spmat S, 'is_complex')``"
msgstr ""

# 767a5082537349d8a3aecbd84e42978e
#: ../source/scilab/cmdref_gf_spmat_get.rst:86
msgid "Return 1 if the matrix contains complex values."
msgstr ""

# bd69ab571712430bb63996f1343028d7
#: ../source/scilab/cmdref_gf_spmat_get.rst:89
msgid "``{JC, IR} = gf_spmat_get(spmat S, 'csc_ind')``"
msgstr ""

# 0410d57d12044b8ca4bba53a84ba691d
#: ../source/scilab/cmdref_gf_spmat_get.rst:91
msgid "Return the two usual index arrays of CSC storage."
msgstr ""

# 6a0406e396104334acd8e1a3ec429190
# 5b2e61f0514f43519fdaa3d2876917fc
#: ../source/scilab/cmdref_gf_spmat_get.rst:93
#: ../source/scilab/cmdref_gf_spmat_get.rst:100
msgid ""
"If <literal>M</literal> is not stored as a CSC matrix, it is converted "
"into CSC."
msgstr ""

# 0bf1df588a3042318f2a21ad7f693219
#: ../source/scilab/cmdref_gf_spmat_get.rst:96
msgid "``V = gf_spmat_get(spmat S, 'csc_val')``"
msgstr ""

# fca9a2f9b0344d9e849b38eb00cb19e0
#: ../source/scilab/cmdref_gf_spmat_get.rst:98
msgid ""
"Return the array of values of all non-zero entries of "
"<literal>M</literal>."
msgstr ""

# 3f0cc063622f45f4a727fdf1986b70ef
#: ../source/scilab/cmdref_gf_spmat_get.rst:103
msgid "``{N, U0} = gf_spmat_get(spmat S, 'dirichlet nullspace', vec R)``"
msgstr ""

# 6a06b19f3e6344d8a78c3b1b158b20da
#: ../source/scilab/cmdref_gf_spmat_get.rst:105
msgid "Solve the dirichlet conditions <literal>M.U=R</literal>."
msgstr ""

# e038dd47cfa3498bb64c58d21f961e27
#: ../source/scilab/cmdref_gf_spmat_get.rst:107
msgid ""
"A solution <literal>U0</literal> which has a minimum L2-norm is returned,"
" with a sparse matrix <literal>N</literal> containing an orthogonal basis"
" of the kernel of the (assembled) constraints matrix <literal>M</literal>"
" (hence, the PDE linear system should be solved on this subspace): the "
"initial problem"
msgstr ""

# cbae58c5386d4bce8ffd46f99cd46b3c
#: ../source/scilab/cmdref_gf_spmat_get.rst:112
msgid "<literal>K.U = B</literal> with constraints <literal>M.U = R</literal>"
msgstr ""

# c02484a0b4d64ac780d082770e3f20be
#: ../source/scilab/cmdref_gf_spmat_get.rst:114
msgid "is replaced by"
msgstr ""

# f348ced05ba5413dab20cfe05bea4924
#: ../source/scilab/cmdref_gf_spmat_get.rst:116
msgid ""
"<literal>(N'.K.N).UU = N'.B</literal> with <literal>U = N.UU + "
"U0</literal>"
msgstr ""

# 7647b204e25f4f2cbafade3c3792aa3c
#: ../source/scilab/cmdref_gf_spmat_get.rst:119
msgid "``gf_spmat_get(spmat S, 'save', string format, string filename)``"
msgstr ""

# 2fe5767e7f49444188d9d4aef0ed6238
#: ../source/scilab/cmdref_gf_spmat_get.rst:121
msgid "Export the sparse matrix."
msgstr ""

# ce01aed149554553a20e57191435300c
#: ../source/scilab/cmdref_gf_spmat_get.rst:123
msgid ""
"the format of the file may be 'hb' for Harwell-Boeing, or 'mm' for "
"Matrix-Market."
msgstr ""

# d9c181b010a2450691c062ae53f3af1c
#: ../source/scilab/cmdref_gf_spmat_get.rst:127
msgid "``s = gf_spmat_get(spmat S, 'char')``"
msgstr ""

# 11373c193e7d44419764a9b3192a4927
#: ../source/scilab/cmdref_gf_spmat_get.rst:129
msgid "Output a (unique) string representation of the spmat."
msgstr ""

# 6bcce05d9fb549bb80e42fe1883ae523
#: ../source/scilab/cmdref_gf_spmat_get.rst:131
msgid ""
"This can be used to perform comparisons between two different spmat "
"objects. This function is to be completed."
msgstr ""

# ce4432529c1b49dfa6f55ce1ec92a31b
#: ../source/scilab/cmdref_gf_spmat_get.rst:137
msgid "``gf_spmat_get(spmat S, 'display')``"
msgstr ""

# 0ba7230a934d4749b857fa1103d0e7bc
#: ../source/scilab/cmdref_gf_spmat_get.rst:139
msgid "displays a short summary for a spmat object."
msgstr ""

# d8dbedeecaf145d284c51584c701a249
#: ../source/scilab/cmdref_gf_spmat_get.rst:142
msgid ""
"``{mantissa_r, mantissa_i, exponent} = gf_spmat_get(spmat S, "
"'determinant')``"
msgstr ""

# 7ae944d4b8e44e2095b1c9d473444304
#: ../source/scilab/cmdref_gf_spmat_get.rst:144
msgid "returns the matrix determinant calculated using MUMPS."
msgstr ""

