# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 17f87436290241fc94326671ceb88340
#: ../source/scilab/cmdref_gf_spmat.rst:8
msgid "gf_spmat"
msgstr ""

# 8c29452ca3a241cf964c7bb81d5a613a
#: ../source/scilab/cmdref_gf_spmat.rst:10
msgid "**Synopsis**"
msgstr ""

# 80a87b691f664a6cbc8b27fdd840fd27
#: ../source/scilab/cmdref_gf_spmat.rst:22
msgid "**Description :**"
msgstr ""

# 9496edb951154b3395a9861e6a9b2c4d
#: ../source/scilab/cmdref_gf_spmat.rst:25
msgid "General constructor for spmat objects."
msgstr ""

# d3980dd349004484a8f5d7bd334e019e
#: ../source/scilab/cmdref_gf_spmat.rst:27
msgid ""
"Create a new sparse matrix in getfem++ format. These sparse matrix can be"
" stored as CSC (compressed column sparse), which is the format used by "
"Matlab, or they can be stored as WSC (internal format to getfem). The CSC"
" matrices are not writable (it would be very inefficient), but they are "
"optimized for multiplication with vectors, and memory usage. The WSC are "
"writable, they are very fast with respect to random read/write operation."
" However their memory overhead is higher than CSC matrices, and they are "
"a little bit slower for matrix-vector multiplications."
msgstr ""

# de7dcf73d6b2464b8a4843ca9c46bad2
#: ../source/scilab/cmdref_gf_spmat.rst:36
msgid ""
"By default, all newly created matrices are build as WSC matrices. This "
"can be changed later with <literal></literal>gf_spmat_set(spmat S, "
"'to_csc',...)<literal></literal>, or may be changed automatically by "
"getfem (for example <literal></literal>gf_linsolve()<literal></literal> "
"converts the matrices to CSC)."
msgstr ""

# c88368e2541f42a984b02d3c642df09c
#: ../source/scilab/cmdref_gf_spmat.rst:41
msgid "The matrices may store REAL or COMPLEX values."
msgstr ""

# b7737c7986474fe9a180730947fdc256
#: ../source/scilab/cmdref_gf_spmat.rst:44
msgid "**Command list :**"
msgstr ""

# 9ba46c4470e543e2ba0ea2a8e9cb64bc
#: ../source/scilab/cmdref_gf_spmat.rst:48
msgid "``SM = gf_spmat('empty', int m [, int n])``"
msgstr ""

# 77a13274284e411095ed648b428044ce
#: ../source/scilab/cmdref_gf_spmat.rst:50
msgid ""
"Create a new empty (i.e. full of zeros) sparse matrix, of dimensions "
"<literal>m x n</literal>. If <literal>n</literal> is omitted, the matrix "
"dimension is <literal>m x m</literal>."
msgstr ""

# 3eac8cc3f11e4417a7a0d18261972a96
#: ../source/scilab/cmdref_gf_spmat.rst:54
msgid "``SM = gf_spmat('copy', mat K [,  I [,  J]])``"
msgstr ""

# a54503753df8486aa0f1da1f63bf6348
#: ../source/scilab/cmdref_gf_spmat.rst:56
msgid ""
"Duplicate a matrix <literal>K</literal> (which might be a spmat). If "
"index <literal>I</literal> and/or <literal>J</literal> are given, the "
"matrix will be a submatrix of <literal>K</literal>. For example::"
msgstr ""

# 2fc44c5433d6454389834f05082ce35b
#: ../source/scilab/cmdref_gf_spmat.rst:63
msgid "will return a 40x5 matrix."
msgstr ""

# a213bc5d1a954ea1be042c0a2a7f6c57
#: ../source/scilab/cmdref_gf_spmat.rst:66
msgid "``SM = gf_spmat('identity', int n)``"
msgstr ""

# 221254b300f248ad854a141f21d627e4
#: ../source/scilab/cmdref_gf_spmat.rst:68
msgid "Create a <literal>n x n</literal> identity matrix."
msgstr ""

# 784bb42111704701bdaf7b41914316dc
#: ../source/scilab/cmdref_gf_spmat.rst:71
msgid "``SM = gf_spmat('mult', spmat A, spmat B)``"
msgstr ""

# 5c18fb13baf64958aa5caf4d0864d921
#: ../source/scilab/cmdref_gf_spmat.rst:73
msgid ""
"Create a sparse matrix as the product of the sparse matrices "
"<literal>A</literal> and <literal>B</literal>. It requires that "
"<literal>A</literal> and <literal>B</literal> be both real or both "
"complex, you may have to use <literal></literal>gf_spmat_set(spmat S, "
"'to_complex')<literal></literal>"
msgstr ""

# 0ffc724c6b7f488cbf56d9df1a74c81f
#: ../source/scilab/cmdref_gf_spmat.rst:78
msgid "``SM = gf_spmat('add', spmat A, spmat B)``"
msgstr ""

# 58a438355ed44f1f9ceb6681eecd6023
#: ../source/scilab/cmdref_gf_spmat.rst:80
msgid ""
"Create a sparse matrix as the sum of the sparse matrices "
"<literal>A</literal> and <literal>B</literal>. Adding a real matrix with "
"a complex matrix is possible."
msgstr ""

# 78823572b22e4938b5e5bdde59da8be1
#: ../source/scilab/cmdref_gf_spmat.rst:84
msgid "``SM = gf_spmat('diag', mat D [, ivec E [, int n [,int m]]])``"
msgstr ""

# 3ffaa85ce3494c26964591b82fe98b37
#: ../source/scilab/cmdref_gf_spmat.rst:86
msgid ""
"Create a diagonal matrix. If <literal>E</literal> is given, "
"<literal>D</literal> might be a matrix and each column of "
"<literal>E</literal> will contain the sub-diagonal number that will be "
"filled with the corresponding column of <literal>D</literal>."
msgstr ""

# 4ce8072dccbb422694f8c4a2c462f487
#: ../source/scilab/cmdref_gf_spmat.rst:91
msgid ""
"``SM = gf_spmat('load','hb'|'harwell-boeing'|'mm'|'matrix-market', string"
" filename)``"
msgstr ""

# 29c7c93818074ccb8a414213f098b64f
#: ../source/scilab/cmdref_gf_spmat.rst:93
msgid "Read a sparse matrix from an Harwell-Boeing or a Matrix-Market file ."
msgstr ""

