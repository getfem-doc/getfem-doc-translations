# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 99a1a6f318df4390bd39b8dc4fb0cb5c
#: ../source/scilab/cmdref_gf_mesh_im.rst:8
msgid "gf_mesh_im"
msgstr ""

# 36fc6fccd7e044b6b346821e38b32a33
#: ../source/scilab/cmdref_gf_mesh_im.rst:10
msgid "**Synopsis**"
msgstr ""

# 469c8385b32549e59a110f6fbe8eb1a9
#: ../source/scilab/cmdref_gf_mesh_im.rst:20
msgid "**Description :**"
msgstr ""

# 4192059db245450999fd2c412898224b
#: ../source/scilab/cmdref_gf_mesh_im.rst:23
msgid "General constructor for mesh_im objects."
msgstr ""

# c1c80e525de2444b984d5de6ccde28ed
#: ../source/scilab/cmdref_gf_mesh_im.rst:25
msgid ""
"This object represents an integration method defined on a whole mesh (an "
"potentialy on its boundaries)."
msgstr ""

# e36bae0c0e424969bde8d8a291d14d0e
#: ../source/scilab/cmdref_gf_mesh_im.rst:29
msgid "**Command list :**"
msgstr ""

# 7e3ebbd56e3d455b9341a5bd1978158f
#: ../source/scilab/cmdref_gf_mesh_im.rst:33
msgid "``MIM = gf_mesh_im('load', string fname[, mesh m])``"
msgstr ""

# abf71d3d6e5141758720933fddb52702
#: ../source/scilab/cmdref_gf_mesh_im.rst:35
msgid "Load a mesh_im from a file."
msgstr ""

# 0bdffa407ab34df997a0e6f8f0c2ed2b
#: ../source/scilab/cmdref_gf_mesh_im.rst:37
msgid ""
"If the mesh <literal>m</literal> is not supplied (this kind of file does "
"not store the mesh), then it is read from the file and its descriptor is "
"returned as the second output argument."
msgstr ""

# c995dc433aec4e89ab59115115e979a7
#: ../source/scilab/cmdref_gf_mesh_im.rst:42
msgid "``MIM = gf_mesh_im('from string', string s[, mesh m])``"
msgstr ""

# b16a0d2b6f15497b95ee4a6cc4ab5a66
#: ../source/scilab/cmdref_gf_mesh_im.rst:44
msgid "Create a mesh_im object from its string description."
msgstr ""

# 596209d5486f49f5991e2a5f875eff48
#: ../source/scilab/cmdref_gf_mesh_im.rst:46
msgid ""
"See also <literal></literal>gf_mesh_im_get(mesh_im MI, "
"'char')<literal></literal>"
msgstr ""

# 6faa4185cac64d9e84d666554b5c4405
#: ../source/scilab/cmdref_gf_mesh_im.rst:49
msgid "``MIM = gf_mesh_im('clone', mesh_im mim)``"
msgstr ""

# 18931a46707548e494c6fb10dd3ff387
#: ../source/scilab/cmdref_gf_mesh_im.rst:51
msgid "Create a copy of a mesh_im."
msgstr ""

# ce120a5f65c440838ad5fb73bf9e0d81
#: ../source/scilab/cmdref_gf_mesh_im.rst:54
msgid ""
"``MIM = gf_mesh_im('levelset', mesh_levelset mls, string where, integ "
"im[, integ im_tip[, integ im_set]])``"
msgstr ""

# 108eca4ff72a45a6ba987bd0881647e4
#: ../source/scilab/cmdref_gf_mesh_im.rst:56
msgid ""
"Build an integration method conformal to a partition defined implicitely "
"by a levelset."
msgstr ""

# 867368248175490086e2c98a36da07bd
#: ../source/scilab/cmdref_gf_mesh_im.rst:59
msgid ""
"The <literal>where</literal> argument define the domain of integration "
"with respect to the levelset, it has to be chosen among 'ALL', 'INSIDE', "
"'OUTSIDE' and 'BOUNDARY'."
msgstr ""

# 1206f35f77324891b99e2cfac504c669
#: ../source/scilab/cmdref_gf_mesh_im.rst:63
msgid ""
"it can be completed by a string defining the boolean operation to define "
"the integration domain when there is more than one levelset."
msgstr ""

# e16ecb2ee6db47f889fdfa996e34163f
#: ../source/scilab/cmdref_gf_mesh_im.rst:66
msgid "the syntax is very simple, for example if there are 3 different levelset,"
msgstr ""

# aa8bf09a1cc1487eb66a795aaf169463
#: ../source/scilab/cmdref_gf_mesh_im.rst:69
msgid ""
"\"a*b*c\" is the intersection of the domains defined by each levelset "
"(this is the default behaviour if this function is not called)."
msgstr ""

# 1c623991b5764bde97595899fda25ec0
#: ../source/scilab/cmdref_gf_mesh_im.rst:73
msgid "\"a+b+c\" is the union of their domains."
msgstr ""

# 58676d978b40415da0e12a084a11c679
#: ../source/scilab/cmdref_gf_mesh_im.rst:75
msgid ""
"\"c-(a+b)\" is the domain of the third levelset minus the union of the "
"domains of the two others."
msgstr ""

# 87dad57a97c748a38dc137a44dafbd51
#: ../source/scilab/cmdref_gf_mesh_im.rst:78
msgid ""
"\"!a\" is the complementary of the domain of a (i.e. it is the domain "
"where a(x)>0)"
msgstr ""

# 6e1a322b8ced44f4be25eaaa27876442
#: ../source/scilab/cmdref_gf_mesh_im.rst:81
msgid ""
"The first levelset is always referred to with \"a\", the second with "
"\"b\", and so on."
msgstr ""

# c22ac6c24cb04a1c9e3bc5135e173e60
#: ../source/scilab/cmdref_gf_mesh_im.rst:84
msgid "for intance INSIDE(a*b*c)"
msgstr ""

# 5ac8f7671c1c42db97bba34222bfc3b2
#: ../source/scilab/cmdref_gf_mesh_im.rst:86
msgid ""
"CAUTION: this integration method will be defined only on the element cut "
"by the level-set. For the 'ALL', 'INSIDE' and 'OUTSIDE' options it is "
"mandatory to use the method <literal></literal>gf_mesh_im_set(mesh_im MI,"
" 'integ')<literal></literal> to define the integration method on the "
"remaining elements."
msgstr ""

# 50b3f35d253140be88a6c8661949476c
#: ../source/scilab/cmdref_gf_mesh_im.rst:93
msgid "``MIM = gf_mesh_im(mesh m, [{integ im|int im_degree}])``"
msgstr ""

# 93c345ef2f83459ab4192e35d8dd11c6
#: ../source/scilab/cmdref_gf_mesh_im.rst:95
msgid "Build a new mesh_im object."
msgstr ""

# b39f3abf5dfa4bee84502290313839d6
#: ../source/scilab/cmdref_gf_mesh_im.rst:97
msgid ""
"For convenience, optional arguments (<literal>im</literal> or "
"<literal>im_degree</literal>) can be provided, in that case a call to "
"<literal></literal>gf_mesh_im_get(mesh_im MI, 'integ')<literal></literal>"
" is issued with these arguments."
msgstr ""

