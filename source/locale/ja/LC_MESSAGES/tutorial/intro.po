# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-16 15:44+0900\n"
"PO-Revision-Date: 2018-07-16 07:16+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/tutorial/intro.rst:10
msgid "Introduction"
msgstr "導入"

#: ../source/tutorial/intro.rst:12
msgid ""
"This tutorial is intended to present the main aspects of the |gf| library  "
"on commented simple examples. |gf| allows numerical modeling of complex "
"problems including coupled ones. It is relatively simple to add arbitrary "
"coupling terms thanks to a weak form description language. Expressions in "
"weak form are then compiled in the form of a list of optimized instructions "
"that are executed during assembly."
msgstr ""
"このチュートリアルでは、コメント付きの簡単な例のライブラリで |gf| の主な側面を示すことを目的としています。 |gf| "
"は結合されたものを含む複雑な問題の数値モデリングを可能にします。弱形式記述言語のおかげで、任意の結合項を追加するのは比較的簡単です。次に、弱形式の式はアセンブリ中に実行される最適化された命令の一覧の形式でコンパイルします。"

#: ../source/tutorial/intro.rst:14
msgid "The main presented functionalities are the following"
msgstr "主な提示された機能は次のとおりです"

#: ../source/tutorial/intro.rst:16
msgid ""
"Approximation of multiphysics problems and the use of the generic assembly."
msgstr "マルチフィジックス問題の近似とジェネリックアセンブリの使用。"

#: ../source/tutorial/intro.rst:17
msgid "The use of fixed-size variables."
msgstr "固定サイズ変数の使用。"

#: ../source/tutorial/intro.rst:18
msgid "Contact problems."
msgstr "接触の問題。"

#: ../source/tutorial/intro.rst:19
msgid ""
"Fictitious domain fonctionalities and transformations allowing inter-mesh or"
" inter-region assembly."
msgstr "架空領域の機能性と変換により、メッシュ間または領域間のアセンブリが可能になります。"

#: ../source/tutorial/intro.rst:20
msgid "Continuation / bifurcation problems."
msgstr "継続/分岐の問題。"

#: ../source/tutorial/intro.rst:22
msgid ""
"This tutorial does not of course takes the place of the various "
"documentations. The user documentation (that of the C++ library) is the "
"reference one concerning the description of implemented methods. Interfaces "
"documentations describe the use of the different functionalities from "
"interfaces but do not repeat the description of methods. 'Developpers's "
"guide' documentation describes more internal concerning the organization of "
"the library."
msgstr ""
"このチュートリアルでは、もちろん、様々なドキュメンテーションの場所では説明しません。実装されたメソッドの説明に関しては、ユーザーマニュアル (C++ "
"ライブラリのもの) "
"を参考ににしてください。インターフェイスのドキュメンテーションはインターフェイスからのさまざまな機能の使用を記述しますが、メソッドの記述は繰り返しません。「開発者の手引き」には、ライブラリの構造に関する内部情報が記載されています。"

#: ../source/tutorial/intro.rst:24
msgid ""
"Gf | is a free collaborative project hosted by the `Savannah "
"<http://savannah.gnu.org>`_ site (see "
"https://savannah.nongnu.org/projects/getfem). New contributors are welcome "
"to all aspects of the project."
msgstr ""
"|Gf| は、 `Savannah <http://savannah.gnu.org>`_ "
"サイトによってホストされている無料の共同プロジェクトです(https://savannah.nongnu.org/projects/getfem "
"を参照してください)。新しい貢献者は、プロジェクトのすべての側面で歓迎されます。"

#: ../source/tutorial/intro.rst:29
msgid "C++, Python, Scilab or Matlab ?"
msgstr "C++、Python、Scilab、または Matlab?"

#: ../source/tutorial/intro.rst:33
msgid ""
"|gf| is basically a library written in C++. However, it has an interface "
"that is available in Python, Scilab and Matlab  versions and allows to use "
"all the advanced features. It is recommended to start by using the interface"
" with scripting languages, which makes programming easier. The three "
"versions of the interface differ only by small syntax elements, except for "
"the graphics post-processing (Scilab and Matlab interfaces offer the "
"possibility of integrated post-processing while it is necessary to use "
"dedicated software such as Paraview, Mayavi or gmsh when using the Python "
"interface or directly the library in C++). The Python interface is compiled "
"by default along with the C++ library."
msgstr ""
"|gf| は基本的に C++ で書かれたライブラリです。しかし、それは Python、Scilab と Matlab "
"バージョンで利用可能であり、すべての高度な機能を使用することができるインターフェイスを持っています。プログラミングをより簡単にするスクリプト言語とのインターフェイスを使用して開始することをお勧めします。インターフェイスの3つのバージョンは、グラフィックの後処理を除いて、小さな構文要素によってのみ異なります"
" (Scilab および Matlab インターフェイスは、Paraview "
"などの専用ソフトウェアを使用する必要がある一方で、統合された後処理も可能です。Mayavi または gmsh を使用する場合は、Python "
"インターフェイスまたは C++ で直接ライブラリを使います)。Python インターフェイスは、C++ ライブラリと共にデフォルトでコンパイルされます。"

#: ../source/tutorial/intro.rst:35
msgid ""
"Use |gf| interface is a good strategy even for complex applications, the "
"performance is comparable to the direct use of the C++ library and it is "
"more flexible to use. However, only the Python interface allows for the "
"parallelization (with MPI). The possible addition of functionality to the "
"interface being a relatively simple operation."
msgstr ""
"|gf| が使用するインターフェイスは、複雑なアプリケーションの場合でも、パフォーマンスは C++ "
"ライブラリの直接使用に匹敵する優れた戦略であり、より柔軟に使用できます。しかし、Python インタフェースだけが (MPI で) "
"並列化を可能にします。インターフェイスへの機能の追加は比較的簡単な操作です。"

#: ../source/tutorial/intro.rst:37
msgid ""
"The first example of the tutorial (thermo-electric coupling elastico) allows"
" to see the difference in the use of the C++ library and one of the versions"
" of the interface."
msgstr ""
"チュートリアル (温度-電気弾性連成) の最初の例では、C++ ライブラリとインターフェイスのバージョンの使用の違いを確認することができます。"

#: ../source/tutorial/intro.rst:41
msgid "Where are demo files ?"
msgstr "デモファイルはどこにありますか?"

#: ../source/tutorial/intro.rst:43
msgid "A large number of demonstration programs can be found"
msgstr "多数のデモンストレーションプログラムを見つけることができます。"

#: ../source/tutorial/intro.rst:45
msgid "for the C++ examples in directory::"
msgstr "ディレクトリ内の C++ の例 ::"

#: ../source/tutorial/intro.rst:49
msgid "for the Python interface in the directory::"
msgstr "ディレクトリ内の Python インターフェイスの場合 ::"

#: ../source/tutorial/intro.rst:53
msgid "for the Scilab interface in the directory::"
msgstr "ディレクトリ内の Scilab インターフェイスの場合 ::"

#: ../source/tutorial/intro.rst:57
msgid "and for the Matlab interface in the directory::"
msgstr "そして、ディレクトリ内の Matlab インターフェイス ::"
