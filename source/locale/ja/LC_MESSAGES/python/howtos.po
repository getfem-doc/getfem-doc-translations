# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# cd5b462e1d2e4b74adfc8d15b9ccd172
#: ../source/python/howtos.rst:6
msgid "How-tos"
msgstr ""

# b3058a6df8db43bc94d1787f479179c7
#: ../source/python/howtos.rst:9
msgid "Import gmsh mesh"
msgstr ""

# a5edc46fd4b54d23aeea556dfe485733
#: ../source/python/howtos.rst:11
msgid "If we have in the file `quad.geo` a parameterized mesh, as this:"
msgstr ""

# 0669ddff7c25418faab9cae102dcc710
#: ../source/python/howtos.rst:17
msgid "then, when we run::"
msgstr ""

# 62b3f699d8924aa8b286780f059e17f0
#: ../source/python/howtos.rst:21
msgid ""
"the file `quad.msh` is created and contains the encoding of the mesh and "
"its regions. We can import that file (*quad.msh*) to getfem::"
msgstr ""

# d8604bb574ef406d810829c5c29acd51
#: ../source/python/howtos.rst:29
msgid ""
"with the second command we can see the *regions ids*. When we import the "
"mesh, we might be warned with the following::"
msgstr ""

# 4ec9aed9030040828310209423bcb0e2
#: ../source/python/howtos.rst:35
msgid ""
"this means that the parametrization of the mesh in |gmsh| *.geo file* "
"must assign a **different** number to each region, the problem exists "
"because in |gmsh| can coexist, for example, \"Physical Surface (200)\" "
"and \"Physical Line (200)\", as they are different \"types of regions\" "
"in |gmsh|, that which does not occur in |gf| since there is only one "
"\"type of region\"."
msgstr ""

