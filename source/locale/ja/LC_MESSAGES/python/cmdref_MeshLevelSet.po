# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# 253a522cc57d42798085ffd82268f797
#: ../source/python/cmdref_MeshLevelSet.rst:8
msgid "MeshLevelSet"
msgstr ""

# e463129e5cae401f939486276e558187
#: getfem.MeshLevelSet:1 of
msgid "GeFEM MeshLevelSet object"
msgstr ""

# 9caeb43964284abeb0fd6b772bfb4fc5
#: getfem.MeshLevelSet:3 of
msgid ""
"General constructor for mesh_levelset objects. The role of this object is"
" to provide a mesh cut by a certain number of level_set. This object is "
"used to build conformal integration method (object mim and enriched "
"finite element methods (Xfem))."
msgstr ""

# 9f173d694e1a44ff86974d9ea72f7dfd
#: getfem.MeshLevelSet:9 of
msgid "General constructor for MeshLevelSet objects"
msgstr ""

# c4ca09b821e04be2a6bd19e7eaf2a921
#: getfem.MeshLevelSet:11 of
msgid ""
"``MLS = MeshLevelSet(Mesh m)`` Build a new MeshLevelSet object from a "
"Mesh and returns its handle."
msgstr ""

# be12dcbe2caa4712bee9fe50c798af08
#: getfem.MeshLevelSet.adapt:1 of
msgid "Do all the work (cut the convexes with the levelsets)."
msgstr ""

# ae225d8890af470da297435157f6652d
#: getfem.MeshLevelSet.adapt:3 of
msgid ""
"To initialice the MeshLevelSet object or to actualize it when the value "
"of any levelset function is modified, one has to call this method."
msgstr ""

# 6e47da4bbe204d7192bddfa3d5c04bdc
#: getfem.MeshLevelSet.add:1 of
msgid "Add a link to the LevelSet `ls`."
msgstr ""

# 695b35215eba4399a6f99343e8bc6680
#: getfem.MeshLevelSet.add:3 of
msgid ""
"Only a reference is kept, no copy is done. In order to indicate that the "
"linked Mesh is cut by a LevelSet one has to call this method, where `ls` "
"is an LevelSet object. An arbitrary number of LevelSet can be added."
msgstr ""

# 7a7b4947d11b4028b8a017dc597d170b
#: getfem.MeshLevelSet.add:8 of
msgid "**WARNING**"
msgstr ""

# 0718b5afd5e64e1b9d9f6954cd5fe05e
#: getfem.MeshLevelSet.add:10 of
msgid "The Mesh of `ls` and the linked Mesh must be the same."
msgstr ""

# f5653a3ff385435d9628604a91c28386
#: getfem.MeshLevelSet.char:1 of
msgid "Output a (unique) string representation of the MeshLevelSetn."
msgstr ""

# 0bc0b7147b654cb1b150a90cefea0ad3
#: getfem.MeshLevelSet.char:3 of
msgid ""
"This can be used to perform comparisons between two different "
"MeshLevelSet objects. This function is to be completed."
msgstr ""

# 254bb15d53ae42d2a23282722799f3b3
#: getfem.MeshLevelSet.crack_tip_convexes:1 of
msgid ""
"Return the list of convex #id's of the linked Mesh on which have a tip of"
" any linked LevelSet's."
msgstr ""

# 7fefc939fbff49e7b3c409bda1e214d4
#: getfem.MeshLevelSet.cut_mesh:1 of
msgid "Return a Mesh cut by the linked LevelSet's."
msgstr ""

# 6ad87ae83cf54b85b3d4571160b70fae
#: getfem.MeshLevelSet.display:1 of
msgid "displays a short summary for a MeshLevelSet object."
msgstr ""

# cde3470f9414476c914f3fe81b408cb0
#: getfem.MeshLevelSet.levelsets:1 of
msgid "Return a list of references to the linked LevelSet's."
msgstr ""

# a25c2148dac64cee8a71d6a70b776f33
#: getfem.MeshLevelSet.linked_mesh:1 of
msgid "Return a reference to the linked Mesh."
msgstr ""

# 8ad25e8b70dc4ba196eb19d4cd038ddd
#: getfem.MeshLevelSet.memsize:1 of
msgid "Return the amount of memory (in bytes) used by the MeshLevelSet."
msgstr ""

# b1f27099f88c494db382623f5774c4e4
#: getfem.MeshLevelSet.nb_ls:1 of
msgid "Return the number of linked LevelSet's."
msgstr ""

# cbcf31a6d9e049fba588aea2a94d6eaf
#: getfem.MeshLevelSet.sup:1 of
msgid "Remove a link to the LevelSet `ls`."
msgstr ""

