# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-16 15:44+0900\n"
"PO-Revision-Date: 2018-07-16 07:03+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/project/libdesc_meshfem.rst:11
msgid "MeshFem module"
msgstr "MeshFem モジュール\n"

#: ../source/project/libdesc_meshfem.rst:14
#: ../source/project/libdesc_meshfem.rst:1
msgid "Description"
msgstr "説明\n"

#: ../source/project/libdesc_meshfem.rst:16
msgid ""
"The MeshFem module aims to represent a finite element method (space) with "
"respect to a given mesh. The mesh_fem object will be permanently linked to "
"the given mesh and will be able to react to  changes in the mesh (addition "
"or deletion of elements, in particular). A mesh_fem object may associate a "
"different finite element method on each element of the mesh even though of "
"course, the most common case it that all the element share the same finite "
"element method."
msgstr ""
"MeshFem モジュールは、特定のメッシュに対する有限要素法 (空間) を表すことを目的としています。mesh_fem "
"オブジェクトは、指定されたメッシュに永続的にリンクされ、メッシュの変化 (特に要素の追加または削除) に反応することができます。mesh_fem "
"オブジェクトは、もちろん、すべての要素が同じ有限要素メソッドを共有していることが最も一般的なケースであっても、メッシュの各要素に異なる有限要素メソッドを関連付けることができます。\n"

#: ../source/project/libdesc_meshfem.rst:19
msgid "Files"
msgstr "ファイル\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid "File(s)"
msgstr "ファイル\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_mesh_fem.h` and :file:`getfem_mesh_fem.cc`"
msgstr ": ファイル: ' getfem_mesh_fem ' と: ファイル: ' getfem_mesh_fem '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Defines the structure representing a finite element on a whole mesh. Each "
"element of the mesh is associated with a finite element method. This is a "
"quite complex structure which perform dof identification and numbering, "
"allows a global linear reduction."
msgstr ""
"メッシュ全体の有限要素を表す構造体を定義します。メッシュの各要素は、有限要素法に関連付けられています。これは、実行する非常に複雑な構造である dof "
"識別とナンバリングは、グローバルなリニアリダクションを可能にします。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_mesh_fem_global_function.h` and "
":file:`getfem_mesh_fem_global_function.cc`"
msgstr ""
": ファイル: ' getfem_mesh_fem_global_function ' と: ファイル: ' "
"getfem_mesh_fem_global_function '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Defines mesh_fem with fem defined as a fem_global_function. It provides "
"convenience methods for updating the list of base functions in the linked "
"fem_global_function."
msgstr ""
"fem_global_function として定義された fem で mesh_fem を定義します。リンクされた "
"fem_global_function の基本関数のリストを更新するための便利なメソッドを提供します。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_mesh_fem_product.h` and :file:`getfem_mesh_fem_product.cc`"
msgstr ""
": ファイル: ' getfem_mesh_fem_product ' と: ファイル: ' getfem_mesh_fem_product '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Produces a mesh_fem object which is a kind of direct product of two finite "
"element method. Useful for Xfem enrichment."
msgstr "2つの有限要素法の直接積の一種である mesh_fem オブジェクトを生成します。Xfem 濃縮に役立ちます。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_mesh_fem_sum.h` and :file:`getfem_mesh_fem_sum.cc`"
msgstr ": ファイル: ' getfem_mesh_fem_sum ' と: ファイル: ' getfem_mesh_fem_sum '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Produces a mesh_fem object which is a kind of direct sum of two finite "
"element method. Useful for Xfem enrichment."
msgstr "2つの有限要素法の直接的な和の一種である mesh_fem オブジェクトを生成します。Xfem 濃縮に役立ちます。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
":file:`getfem_partial_mesh_fem.h` and :file:`getfem_partial_mesh_fem.cc`"
msgstr ""
": ファイル: ' getfem_partial_mesh_fem ' と: ファイル: ' getfem_partial_mesh_fem '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid "Produces a mesh_fem with a reduced number of dofs"
msgstr "dofs の数が減少した mesh_fem を生成します。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_interpolation.h` and :file:`getfem_interpolation.cc`"
msgstr ": ファイル: ' getfem_interpolation ' と: ファイル: ' getfem_interpolation '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Interpolation between two finite element methods, possibly between different"
" meshes. The interpolation facilities of the high-level generic assembly can"
" be used instead."
msgstr "異なるメッシュ間の2つの有限要素メソッド間の補間。代わりに、高レベルのジェネリックアセンブリの補間機能を使用できます。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_derivatives.h`"
msgstr ": ファイル: ' getfem_derivatives '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Interpolation of some derivatives of a finite element field on a "
"(discontinuous) Lagrange finite element. The interpolation facilities of the"
" high-level generic assembly can be used instead."
msgstr "(不連続) Lagrange有限要素における有限要素場の微分の補間代わりに、高レベルのジェネリックアセンブリの補間機能を使用できます。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_inter_element.h` and :file:`getfem_inter_element.cc`"
msgstr ": ファイル: ' getfem_inter_element ' と: ファイル: ' getfem_inter_element '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"An attempt to make framework for inter-element computations (jump in normal "
"derivative for instance). To be continuated and perhaps integrated into the "
"generic assembly language."
msgstr ""
"要素間の計算のためのフレームワークを作る試み (例えば通常の微分でジャンプ)。continuated "
"で、おそらくジェネリックアセンブリ言語に統合されています。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_error_estimate.h` and :file:`getfem_error_estimate.cc`"
msgstr ": ファイル: ' getfem_error_estimate ' と: ファイル: ' getfem_error_estimate '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"An attempt to make framework for computation of error estimates. To be "
"continuated and perhaps integrated into the generic assembly language."
msgstr "誤差推定の計算のための枠組みを作る試み.continuated で、おそらくジェネリックアセンブリ言語に統合されています。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_crack_sif.h`"
msgstr ": ファイル: ' getfem_crack_sif '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Crack support functions for computation of SIF(stress intensity factors)."
msgstr "SIF (応力拡大係数) の計算のためのクラックサポート機能。\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ":file:`getfem_torus.h` and :file:`getfem_torus.cc`"
msgstr ": ファイル: ' getfem_torus ' と: ファイル: ' getfem_torus '\n"

#: ../source/project/libdesc_meshfem.rst:1
msgid ""
"Adapt a mesh_fem object which extends a 2D dimensional structure with a "
"radial dimension."
msgstr "2d 寸法構造を放射状寸法で拡張する mesh_fem オブジェクトを適応させます。\n"

#: ../source/project/libdesc_meshfem.rst:39
msgid "State"
msgstr "状態\n"

#: ../source/project/libdesc_meshfem.rst:41
msgid "Stable. Not evolving so much."
msgstr "安定。あまり進化していません。\n"

#: ../source/project/libdesc_meshfem.rst:44
msgid "Perspectives"
msgstr "視点\n"

#: ../source/project/libdesc_meshfem.rst:46
msgid ""
"Parallelisation of dof numbering to be done. An optimal (an simple) "
"algorithm exists."
msgstr "Parallelisation の自由度のナンバリングが行われる。最適 (単純な) アルゴリズムが存在します。\n"
