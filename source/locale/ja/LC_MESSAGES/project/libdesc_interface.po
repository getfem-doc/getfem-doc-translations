# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2018
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 02:56+0900\n"
"PO-Revision-Date: 2018-07-16 07:02+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0\n"
"Generated-By: Babel 2.6.0\n"

# ee0c6b59b2534cce87d5bb442557b210
#: ../source/project/libdesc_interface.rst:11
msgid "Interface with scripts languages (Python, Scilab and Matlab)"
msgstr "スクリプト言語 (Python、Scilab、Matlab) とのインタフェース\n"

# 168bd2fb6c324b83a73104f56ad09ed3
#: ../source/project/libdesc_interface.rst:13
msgid ""
"A simplified (but rather complete) interface of |gf| is provided, so that it"
" is possible to use getfem in some script languages."
msgstr ""
"|gf| の簡略化された (むしろ完全な) インターフェイスは、いくつかのスクリプト言語で getfem "
"を使用することができるように提供されています。\n"

# 551f044983c34352b856a4de2846d19a
#: ../source/project/libdesc_interface.rst:16
msgid "Description"
msgstr "説明\n"

# e414c2ba9a484cf2bf3df1432b9d2b4a
#: ../source/project/libdesc_interface.rst:18
msgid ""
"All sources are located in the :file:`interface/src` directory. The "
"interface is composed of one large library ``getfemint`` (which stands for "
"getfem interaction), which acts as a layer above the |gf| library, and is "
"used by the python, matlab and scilab interfaces."
msgstr ""
"すべてのソースは :file:`interface/src` ディレクトリにあります。インターフェイスは、1つの大規模なライブラリ "
"``getfemint`` (getfem 相互作用の略) で構成され、その上の層として機能する |gf| ライブラリ、および "
"python、matlab と scilab のインターフェイスによって使用されます。\n"

# eac1c3acbacc4944852f2cc46787c984
#: ../source/project/libdesc_interface.rst:23
msgid ""
"This interface is not something that is generated automatically from c++ "
"sources (as that could be the case with tools such as swig). It is something"
" that has been designed as a simplified and consistent interface to getfem. "
"Adding a new language should be quite easy (assuming the language provides "
"some structures for dense arrays manipulations)."
msgstr ""
"このインターフェイスは、c++ ソースから自動的に生成されるものではありません (ガブガブなどのツールの場合もあります)。それは getfem "
"に簡素化され、一貫性のあるインターフェイスとして設計されているものです。新しい言語を追加することは非常に簡単です "
"(言語が密な配列操作のための構造を提供すると仮定して)。\n"

# 1322273bbe574d92a3ed903549d6cbb9
#: ../source/project/libdesc_interface.rst:30
msgid "Files"
msgstr "ファイル\n"

# a47a8c02b64540a089205189f61e3e5f
#: ../source/project/libdesc_interface.rst:32
msgid ""
"All the files in the directory :file:`interface\\src`. A short description "
"of main files:"
msgstr "ディレクトリ内のすべてのファイル: ファイル: ' interface\\src '。メインファイルの簡単な説明:\n"

# 6ffdc198c38f459da80307e6d52852d8
#: ../source/project/libdesc_interface.rst:34
msgid ":file:`getfem_interface.cc`."
msgstr ": ファイル: ' getfem_interface '。\n"

# 4016839e914e4033a6a7c45fc123d64d
#: ../source/project/libdesc_interface.rst:36
msgid ""
"This is the bridge between the script language and the getfem interface. The"
" function getfem_interface_main is exported as an ``extern \"C\"`` function,"
" so this is a sort of c++ barrier between the script language and the getfem"
" interface (exporting only a C interface avoids many compilation problems)."
msgstr ""
"これは、スクリプト言語と getfem インターフェイスの間のブリッジです。関数 getfem_interface_main は ' ' extern "
"' c ' ' ' 関数としてエクスポートされるため、これはスクリプト言語と getfem インターフェイスの間の c++ バリアの一種です (c "
"インターフェイスのみをエクスポートすると、多くのコンパイルの問題が回避されます)。\n"

# 5865c147d7c74ffa82aeeaad5e68b689
#: ../source/project/libdesc_interface.rst:41
msgid ":file:`matlab/gfm_mex.c`."
msgstr ": ファイル: ' matlab の/gfm_mex '。\n"

# 6162090a4b18402cb94d668997d5d179
#: ../source/project/libdesc_interface.rst:43
msgid ""
"The matlab interface. The only thing it knows about getfem is in "
":file:`getfem_interface.h`."
msgstr ""
"matlab インターフェイス。それは getfem について知っている唯一のものである: ファイル: ' getfem_interface '。\n"

# 8d960a8f23bc4817b66c16cf509eab4f
#: ../source/project/libdesc_interface.rst:46
msgid ":file:`python/getfem_python.c`."
msgstr ": ファイル: ' python/getfem_python '.\n"

# 27ec5ef449a14498b91c6172882c761e
#: ../source/project/libdesc_interface.rst:48
msgid ""
"The python interface. The only thing it knows about getfem is in "
":file:`getfem_interface.h`."
msgstr ""
"python インターフェイス。それは getfem について知っている唯一のものである: ファイル: ' getfem_interface '。\n"

# 7366eab9d52b430ea561dcee481007cd
#: ../source/project/libdesc_interface.rst:51
msgid ":file:`gfi_array.h`, :file:`gfi_array.c`."
msgstr ": ファイル: ' gfi_array ',: ファイル: ' gfi_array '.\n"

# 41a6b8cd93464382ae3d907b7da1920a
#: ../source/project/libdesc_interface.rst:53
msgid ""
"Both :file:`gfm_mex.c` and :file:`getfem_python.c` need a simple convention "
"on how to send and receive arrays, and object handles, from "
"``getfem_interface_main()``. This file provide such functionnality."
msgstr ""
"どちらも: ファイル: ' gfm_mex ' と: ファイル: ' getfem_python ' は ' ' "
"getfem_interface_main () ' ' "
"から配列とオブジェクトハンドルを送受信する方法に関する簡単な規則を必要とします。このファイルはこのような機能を提供します。\n"

# f93cb551781c4e0996d12655aeb5e165
#: ../source/project/libdesc_interface.rst:57
msgid ":file:`getfemint_gsparse.h`, :file:`getfemint_precond.h`, etc."
msgstr ": ファイル: ' getfemint_gsparse ',: ファイル: ' getfemint_precond ', など.\n"

# 31ae0e61863a4c92ad2f5b2f4dc387fe
#: ../source/project/libdesc_interface.rst:59
msgid ""
"Files specific to an interfaced object if needed. (getfemint_gsparse which "
"export some kind of mutable sparse matrix that can switch between different "
"storage types, and real of complex elements)."
msgstr ""
"必要に応じて、インタフェースオブジェクトに固有のファイル。(getfemint_gsparse "
"は、異なる種類のストレージを切り替えることができるいくつかの種類の可変疎行列をエクスポートし、複雑な要素の実数) を出力します。\n"

# 9ee403cc2c7c43d2bfe24914d48b14ae
#: ../source/project/libdesc_interface.rst:63
msgid ":file:`gf_workspace.cc`, :file:`gf_delete.cc`."
msgstr ": ファイル: ' gf_workspace ',: ファイル: ' gf_delete '.\n"

# 0b8a764d74724c20bda218c68085002b
#: ../source/project/libdesc_interface.rst:65
msgid ""
"Memory management for getfem objects. There is a layer which handles the "
"dependency between for example a ``mesh`` and a ``mesh_fem``. It makes sure "
"that no object will be destroyed while there is still another getfem_object "
"using it. The goal is to make sure that under no circumstances the user is "
"able to crash getfem (and the host program, matlab, scilab or python) by "
"passing incorrect argument to the getfem interface."
msgstr ""
"getfem オブジェクトのメモリ管理。たとえば ' ' メッシュ ' ' と ' ' mesh_fem ' ' "
"の間の依存関係を処理するレイヤがあります。それを使用して別の getfem_object "
"がまだある間、オブジェクトが破棄されることを確認します。目的は、ユーザーが getfem インターフェイスに不正な引数を渡すことによって getfem "
"(およびホストプログラム、matlab、scilab または python) をクラッシュさせることができない状況下でことを確認することです。\n"

# 61207afebf57476e9ecf6c21a8607a11
#: ../source/project/libdesc_interface.rst:74
msgid ""
"It also provides a kind of workspace stack, which was designed to simplify "
"handling and cleaning of many getfem objects in matlab (since matlab does "
"not have \"object destructors\")."
msgstr ""
"また、(matlab は \"オブジェクトのデストラクタ\" を持っていないので) matlab で多くの getfem "
"オブジェクトの処理とクリーニングを簡素化するように設計されたワークスペースのスタックの種類を提供しています。\n"

# 8e502393794a44d989f3138fe980683e
#: ../source/project/libdesc_interface.rst:78
msgid ":file:`getfemint.h`, :file:`getfemint.cc`."
msgstr ": ファイル: ' getfemint ',: ファイル: ' getfemint '.\n"

# 1ff2908b01904219976b63c66e3b2fa4
#: ../source/project/libdesc_interface.rst:80
msgid ""
"Define the ``mexarg_in``, ``mexarg_out`` classes, which are used to parse "
"the list of input and output arguments to the getfem interface functions. "
"The name  is not adequate anymore since any reference to \"mex\" has been "
"moved into :file:`gfm_mex.c`."
msgstr ""
"入力と出力の引数のリストを getfem インターフェイス関数に解析するために使用される ' ' mexarg_in ' '、' ' "
"mexarg_out ' ' クラスを定義します。\"mex\" への参照が移されたので、名前はもう十分ではありません: ファイル: ' gfm_mex"
" '。\n"

# f723cd859d7346fbbd5d0a7833dbf155
#: ../source/project/libdesc_interface.rst:86
msgid ""
":file:`gf_mesh.cc`, :file:`gf_mesh_get.cc`, :file:`gf_mesh_set.cc`, "
":file:`gf_fem.cc`, etc."
msgstr ""
": ファイル: ' gf_mesh ',: ファイル: ' gf_mesh_get ',: ファイル: ' gf_mesh_set ',: ファイル: "
"' gf_fem cc ', など.\n"

# 7f6f4986cea64be5958d06e537c3ee80
#: ../source/project/libdesc_interface.rst:89
msgid ""
"All the functions exported be the getfem interfaces, sorted by object type "
"(``gf_mesh*``, ``gf_mesh_fem*``, ``gf_fem*``), and then organized as one for"
" the object construction (``gf_mesh``), one for the object modification "
"(``gf_mesh_set``), and one for the object inquiry (``gf_mesh_get``). Each of"
" these files contain one main function, that receives a ``mexargs_in`` and "
"``mexargs_out`` stack of arguments. It parses then, and usually interprets "
"the first argument as the name of a subfunction (``gf_mesh_get('nbpts')`` in"
" matlab, or ``Mesh.nbpts()`` in python)."
msgstr ""
"エクスポートされるすべての関数は、オブジェクトの種類 (' ' gf_mesh * ' '、' で並べ替えられた getfem "
"インターフェイスになります。 ' gf_mesh_fem * '、' ' gf_fem * ' ')、オブジェクトの構築 (' ' gf_mesh ' "
"')、オブジェクトの変更 (' ' gf_mesh_set ' ') の1つとして編成され、オブジェクトの照会 (' ' gf_mesh_get ' "
"')。これらの各ファイルには、引数の ' ' mexargs_in ' ' と ' ' mexargs_out ' ' スタックを受け取る1つの "
"main 関数が含まれています。その後、解析し、通常、最初の引数を subfunction の名前として解釈します (' ' gf_mesh_get "
"(' nbpts ') ' ' matlab で、または ' ' メッシュ nbpts () ' ' python で)。\n"

# a24a1d1842e84242a2887a678e61d867
#: ../source/project/libdesc_interface.rst:98
msgid ":file:`matlab/gfm_rpx_mexint.c`."
msgstr ": ファイル: ' matlab の/gfm_rpx_mexint '。\n"

# a951b96cf8254062a86b469dac83cd0b
#: ../source/project/libdesc_interface.rst:100
msgid ""
"An alternative to :file:`gfm_mex.c` which is used when the ``--enable-"
"matlab-rpc`` is passed to the ``./configure`` script. The main use for that "
"is debugging the interface, since in that case, the matlab interface "
"communicates via sockets with a \"getfem_server\" program, so it is possible"
" to debug that server program, and identify memory leaks or anything else "
"without having to mess with matlab (it is pain to debug)."
msgstr ""
"代替: ファイル: ' '--有効-matlab-rpc ' ' が ' '/configure ' ' スクリプトに渡されるときに使用される ' "
"gfm_mex '。そのための主な用途は、その場合には、matlab のインターフェイスは、\"getfem_server\" "
"プログラムでソケットを介して通信するので、そのサーバープログラムをデバッグすることが可能であり、メモリリークまたは何かを混乱させることなく識別するインターフェイスをデバッグしているmatlab"
" (デバッグするのは苦痛です)。\n"

# 0d6be8aa857c4a12a242efaec4d32306
#: ../source/project/libdesc_interface.rst:107
msgid ":file:`python/getfem.py`."
msgstr ": ファイル: ' python/getfem '。\n"

# c25a1d9f6c4c4ab19d71a26f010b0d91
#: ../source/project/libdesc_interface.rst:109
msgid ""
"The python interface is available as a \":file:`getfem.py`\" file which is "
"produced during compilation by the python script "
"\":file:`bin/extract_doc.py`\"."
msgstr ""
"python インタフェースは、python スクリプトによってコンパイル中に生成される \": file: ' getfem '\" "
"ファイルとして利用可能です: ファイル: ' bin/extract_doc ' \"。\n"

# 2fb61c0fcc5c4d1086d3e2e16bb7a4ed
#: ../source/project/libdesc_interface.rst:116
msgid "Objects, methods and functions of the interface"
msgstr "インターフェイスのオブジェクト、メソッド、および関数\n"

# 0aa91cfeb66a4ffea40161bc3095712f
#: ../source/project/libdesc_interface.rst:118
msgid ""
"The main concepts manipulated by the interface are a limited number of "
"objects (Fem, Mesh, MeshFem, Model ...), the associated methods and some "
"functions defined on these objects."
msgstr ""
"インターフェイスによって操作される主な概念は、オブジェクトの限られた数 "
"(Fem、メッシュ、MeshFem、モデル...)、関連するメソッド、およびこれらのオブジェクトで定義されている関数です。\n"

# 17b7e17f1786480d9e108f67a4003926
#: ../source/project/libdesc_interface.rst:121
msgid ""
"A special effort has been done to facilitate the addition of new objects, "
"methods and functions to the interface without doing it separetaly for each "
"partsupported script language (Python, Scilab, Matlab)."
msgstr ""
"特別な努力は、各 partsupported スクリプト言語 (Python、Scilab、Matlab) の separetaly "
"を行うことなく、インターフェイスに新しいオブジェクト、メソッド、および関数の追加を容易にするために行われています。\n"

# ea446a0042964cbe91149e7b51ebaacc
#: ../source/project/libdesc_interface.rst:124
msgid ""
"All the information needed to build the interface for the different objects,"
" methods and functions is contained in the files `interface/src/gf*.cc`. A "
"python script (`bin/extract_doc`) produces all the necessary files from the "
"information it takes there. In particular, it produces the python file "
"getfem.py, the matlab m-files for the different functions and objects "
"(including subdirectories) and it also produces the automatic "
"documentations."
msgstr ""
"さまざまなオブジェクト、メソッド、および関数のインターフェイスを構築するために必要なすべての情報は、ファイルのインターフェイス/src/gf *. cc"
" ' に含まれています。python スクリプト (' bin/extract_doc ') "
"は、必要なすべてのファイルをそこで取得する情報から生成します。特に、それは python ファイル getfem.py を生成する、matlab の "
"m-ファイルの異なる機能やオブジェクト (サブディレクトリを含む) と、それはまた、自動ドキュメンテーションを生成します。\n"

# 4acc256228fc4b099f99733e6310131a
#: ../source/project/libdesc_interface.rst:126
msgid ""
"To make all the things work automatically, a certain number of rules have to"
" be respected:"
msgstr "すべてのものを自動的に動作させるには、一定数のルールを尊重する必要があります。\n"

# 9a50308c8d5743d2bccb076af7c02d8a
#: ../source/project/libdesc_interface.rst:129
msgid "An object have to be defined by three files on the interface"
msgstr "オブジェクトは、インターフェイス上の3つのファイルで定義する必要があります。\n"

# 58103c867b4f4cceb00b89ebc75859bd
#: ../source/project/libdesc_interface.rst:131
msgid ":file:`gf_objectname.cc` : contains the constructors of the object"
msgstr ": ファイル: ' gf_objectname ': オブジェクトのコンストラクタが含まれています。\n"

# 6c0bce05d88e49bd93782b953232de21
#: ../source/project/libdesc_interface.rst:133
msgid ""
":file:`gf_objectname_get.cc` : contains the methods which only get some "
"information about the object (if any)."
msgstr ""
": ファイル: ' gf_objectname_get ': オブジェクトに関する情報を取得するメソッドが含まれています (存在する場合)。\n"

# ab9a11aa742e4a7b871edc56315385cb
#: ../source/project/libdesc_interface.rst:135
msgid ""
":file:`gf_objectname_set.cc` : contains the methods which transform the "
"object (if any)."
msgstr ": ファイル: ' gf_objectname_set ': オブジェクトを変換するメソッドが含まれています (存在する場合)。\n"

# 7a3c51cdb3544f0a87eea6257e736916
#: ../source/project/libdesc_interface.rst:137
msgid ""
"A list of function is defined by only one file :file:`gf_commandname.cc` it "
"contains a list of sub-comands."
msgstr ""
"関数のリストは1つのファイルによって定義されます: ファイル: ' gf_commandname ' サブ comands "
"のリストが含まれています。\n"

# 107cb177ba6942d6bb196cfbc01b993d
#: ../source/project/libdesc_interface.rst:141
msgid ""
"For each file, the main commentary on the list of functions or methods is "
"delimited by the tags '/*@GFDOC' and '@*/'. For a file corresponding to the "
"constructors of an object, the commentary should correspond to the "
"description of the object."
msgstr ""
"各ファイルについて、関数またはメソッドのリストに関する主な解説は、タグ '/* @GFDOC ' および ' @ */' "
"で区切られています。オブジェクトのコンストラクタに対応するファイルの場合、注釈はオブジェクトの説明に対応している必要があります。\n"

# a81413e7f6cf4246b3c2a1bd46c31184
#: ../source/project/libdesc_interface.rst:144
msgid ""
"Each non trivial file gf_*.cc contains a macro allowing to define the "
"methods of the object or the sub-commands. In particular, this system allows"
" to have a efficient search of the called method/function. This macro allows"
" to declare a new method/function with the following syntax::"
msgstr ""
"各非自明ファイル gf_ *. cc "
"には、オブジェクトまたはサブコマンドのメソッドを定義できるマクロが含まれています。特に、このシステムは、呼び出されたメソッド/関数の効率的な検索をすることができます。このマクロでは、次の構文を使用して新しいメソッド/関数を宣言できます。\n"

# 2e471fd7a7cb4ff184c30a9e556cfac0
#: ../source/project/libdesc_interface.rst:160
msgid ""
"The first three line are a c++ commentary which describes the call of the "
"method/function with a special syntax and also gives a description of the "
"method/function which will be included in the documentations. The first line"
" of this commentary is important since it will be analyzed to produce the "
"right interface for Python, Matlab and Scilab."
msgstr ""
"最初の3行は、特別な構文を持つメソッド/関数の呼び出しを記述し、また、ドキュメントに含まれるメソッド/関数の説明を与える c++ の解説です。それは "
"Python、Matlab と Scilab のための適切なインターフェイスを生成するために分析されるため、この解説の最初の行は重要です。\n"

# 5e48987c21ea4430ac48e3eebc9719c9
#: ../source/project/libdesc_interface.rst:166
msgid ""
"The syntax for the description of the call of a method/function is the "
"following: After ``/*@`` a special keyword should be present. It is either "
"``INIT``, ``GET``, ``SET``, ``RDATTR`` or ``FUNC``. The keyword ``INIT`` "
"means that this is the description of a constructor of an object. ``RDATTR``"
" is for a short method allowing to get an attribut of an object. ``GET`` is "
"for a method of an object which does not modify it. ``SET`` is for a method "
"which modifies an object and ``FUNC`` is for the sub-command of a function "
"list."
msgstr ""
"メソッド/関数の呼び出しの説明の構文は次のとおりです。 ' '/* @ ' ' の後には、特別なキーワードが存在する必要があります。これは、' ' "
"INIT ' '、' ' GET ' '、' ' SET ' '、' ' RDATTR ' '、または ' ' FUNC ' ' "
"のいずれかです。キーワード ' ' INIT ' ' は、これがオブジェクトのコンストラクタの記述であることを意味します。' ' RDATTR ' ' "
"は、オブジェクトの attribut を得ることを可能にする短いメソッドのためのものです。' ' GET ' ' "
"は、それを変更しないオブジェクトのメソッドのためのものです。' ' SET ' ' は、オブジェクトを変更するメソッドのためのもので、' ' FUNC "
"' ' は関数リストのサブコマンドのためのものです。\n"

# 5da2e53b6f8b40bfbb65d621dd7e0c9e
#: ../source/project/libdesc_interface.rst:175
msgid ""
"If the method/function returns a value, then a name for the return value is "
"given (which is arbitrary) followed by ``=``."
msgstr "メソッド/関数が値を返す場合は、戻り値の名前 (任意です) に続いて ' ' = ' ' が返されます。\n"

# 7a5c7f393d3342b0a46c51b255973a61
#: ../source/project/libdesc_interface.rst:178
msgid ""
"The parameters of the method/function are described. For a method, the "
"object itself is not mentionned. The first parameter should be the method or"
" sub-command name between single quotes (a speical case is when this name "
"begins with a dot; this means that it corresponds to a method/function where"
" the command name is not required)."
msgstr ""
"メソッド/関数のパラメータについて説明します。メソッドの場合、オブジェクト自体は mentionned "
"ではありません。最初のパラメーターは、単一引用符の間のメソッドまたはサブコマンド名である必要があります (speical "
"の場合は、この名前がドットで始まる場合です。これは、コマンド名が不要なメソッド/関数に対応することを意味します)。\n"

# a8cca94b18864b62811362463ec8604d
#: ../source/project/libdesc_interface.rst:184
msgid ""
"The other parameters, if any, should be declared with a type. Predefined "
"types are the following:"
msgstr "その他のパラメーターがある場合は、型を使用して宣言する必要があります。定義済みの型は次のとおりです。\n"

# bc4f33384dae4942a7f0d7a1e7a1d204
#: ../source/project/libdesc_interface.rst:187
msgid "``@CELL``   : a cell array,"
msgstr "' ' @CELL ' ': セル配列、\n"

# c0825b1b250c44e191655cffcae54a69
#: ../source/project/libdesc_interface.rst:188
msgid "``@imat``   : matrix of integers,"
msgstr "' ' @imat ' ': 整数の行列、\n"

# 03382475c4c042b0957f97cde784f412
#: ../source/project/libdesc_interface.rst:189
msgid "``@ivec``   : vector of integers,"
msgstr "' ' @ivec ' ': 整数のベクトル,\n"

# 955173dbe3fd47118e7477e12e3eb942
#: ../source/project/libdesc_interface.rst:190
msgid "``@cvec``   : vector of complex values,"
msgstr "' ' @cvec ' ': 複素値のベクトル,\n"

# 3c574bf7fffa40069601b2a22851e8b4
#: ../source/project/libdesc_interface.rst:191
msgid "``@dcvec``  : vector of complex values,"
msgstr "' ' @dcvec ' ': 複素値のベクトル,\n"

# 044d9014f06c470981975547f863597d
#: ../source/project/libdesc_interface.rst:192
msgid "``@dvec``   : vector of real values,"
msgstr "' ' @dvec ' ': 実数値のベクトル,\n"

# b0c6ab0951674ecda3fcfc6e2ad89815
#: ../source/project/libdesc_interface.rst:193
msgid "``@vec``    : vector of real or complex values,"
msgstr "' ' @vec ' ': 実数または複素数のベクトル,\n"

# 3e1a0475aa9d44b9b87dea58a1597c14
#: ../source/project/libdesc_interface.rst:194
msgid "``@dmat``   : matrix of real values,"
msgstr "' ' @dmat ' ': 実数値の行列,\n"

# ecb484ac9cdb4008a5ef792cb463593e
#: ../source/project/libdesc_interface.rst:195
msgid "``@mat``    : matrix of real or complex values,"
msgstr "' ' @mat ' ': 実数または複素数の行列,\n"

# 3e199cb47db844ef90f4b6f53808107a
#: ../source/project/libdesc_interface.rst:196
msgid "``@str``    : a string,"
msgstr "' ' @str ' ': 文字列、\n"

# fe48b2bbaa5f46309d91b4891dc24be6
#: ../source/project/libdesc_interface.rst:197
msgid "``@int``    : an integer,"
msgstr "' ' @int ' ': 整数、\n"

# e99429e921234db78650544c3ca2453b
#: ../source/project/libdesc_interface.rst:198
msgid "``@bool``   : a boolean,"
msgstr "' ' @bool ' ': ブール型 (boolean)、\n"

# 1e4f51470a934ff0b8a57b4b1cd65f38
#: ../source/project/libdesc_interface.rst:199
msgid "``@real``   : a real value,"
msgstr "' ' @real ' ': 実際の値、\n"

# fd1d2aa05ecc44d88c2e4f55220f7f8d
#: ../source/project/libdesc_interface.rst:200
msgid "``@scalar`` : a real or complex value,"
msgstr "' ' @scalar ' ': 実数または複素数を指定します。\n"

# d5702e1a04574c72857f1dd8a28fddb8
#: ../source/project/libdesc_interface.rst:201
msgid "``@list``   : a list."
msgstr "' ' @list ' ': リスト。\n"

# f05eb217e9ae4a0d9ef5c903215fd6e4
#: ../source/project/libdesc_interface.rst:203
msgid ""
"Moreover, ``@tobj`` refers to an object defined by the interface. For "
"instance, ou can refer to ``@tmesh``, ``@tmesh_fem``, ``@tfem``, etc. There "
"are some authorized abreviations:"
msgstr ""
"さらに、' ' @tobj ' ' はインタフェースによって定義されたオブジェクトを参照します。たとえば、ou は ' ' @tmesh ' '、' '"
" @tmesh_fem ' '、' ' @tfem ' ' などを参照できます。いくつかの承認された abreviations があります:\n"

# b2281c1c7dfc4ce49babfdb67d2abd5d
#: ../source/project/libdesc_interface.rst:207
msgid "``@tcs``  for  ``@tcont_struct``"
msgstr "' ' @tcont_struct ' ' の ' ' @tcs ' '\n"

# bd00a0e799854489b1892f9824de54e0
#: ../source/project/libdesc_interface.rst:208
msgid "``@tmf``  for  ``@tmesh_fem``"
msgstr "' ' @tmesh_fem ' ' の ' ' @tmf ' '\n"

# e4a1f60cdd0b4e10a016f90ca0d8eb27
#: ../source/project/libdesc_interface.rst:209
msgid "``@tgt``  for  ``@tgeotrans``"
msgstr "' ' @tgeotrans ' ' の ' ' @tgt ' '\n"

# aa934153d85e47d480d1a2697246a319
#: ../source/project/libdesc_interface.rst:210
msgid "``@tgf``  for  ``@tglobal_function``"
msgstr "' ' @tglobal_function ' ' の ' ' @tgf ' '\n"

# b20c964545f543b1856a942adc677e4b
#: ../source/project/libdesc_interface.rst:211
msgid "``@tmo``  for  ``@tmesher_object``"
msgstr "' ' @tmesher_object ' ' の ' ' @tmo ' '\n"

# 2c760b1d7bb94f7aaa242133962f439c
#: ../source/project/libdesc_interface.rst:212
msgid "``@tmls``  for  ``@tmesh_levelset``"
msgstr "' ' @tmesh_levelset ' ' の ' ' @tmls ' '\n"

# b96ead903ee64b4f89a7476b85691baa
#: ../source/project/libdesc_interface.rst:213
msgid "``@tmim``  for  ``@tmesh_im``"
msgstr "' ' @tmesh_im ' ' の ' ' @tmim ' '\n"

# 50bed88ac574422f8afe4ddd77951872
#: ../source/project/libdesc_interface.rst:214
msgid "``@tls``  for  ``@tlevelset``"
msgstr "' ' @tlevelset ' ' の ' ' @tls ' '\n"

# 3d19503a994046b584be385c7af85722
#: ../source/project/libdesc_interface.rst:215
msgid "``@tsl``  for  ``@tslice``"
msgstr "' ' @tslice ' ' の ' ' @tsl ' '\n"

# a11d73825580471eb54508d3aebf72fc
#: ../source/project/libdesc_interface.rst:216
msgid "``@tsp``  for  ``@tspmat``"
msgstr "' ' @tspmat ' ' の ' ' @tsp ' '\n"

# ec8753fc28d245b29d8991aff4bf13b8
#: ../source/project/libdesc_interface.rst:217
msgid "``@tpre``  for  ``@tprecond``"
msgstr "' ' @tprecond ' ' の ' ' @tpre ' '\n"

# 5ca5c4ead6c3498b91dcf6fde43c0b90
#: ../source/project/libdesc_interface.rst:220
msgid ""
"Three dots at the end of the parameter list (``...``) mean that additional "
"parameters are possible. Optional parameters can be described with brackets."
" For instance ``/*@SET v = ('name'[, @int i])``. But be carreful how it is "
"interpreted by the :file:`extract_doc` script to build the python interface."
msgstr ""
"パラメータリスト (' '... ' ') "
"の末尾にある3つの点は、追加のパラメータが可能であることを意味します。省略可能なパラメーターは、角かっこで記述できます。たとえば、'/* @SET v "
"= (' name ' [, @int i]) ' ' です。しかし、python インターフェイスを構築するには、: file: ' "
"extract_doc ' スクリプトによってどのように解釈されるかを carreful してください。\n"

# 782f4e585c5c440caef17a51f5f952fc
#: ../source/project/libdesc_interface.rst:226
msgid ""
"The second to fifth parameters of the macro correspond respectively to the "
"minimum number of input arguments, the maximum one, the minimum number of "
"output arguments and the maximum number of output arguments. It is "
"dynamically verified."
msgstr ""
"マクロの 2 ~ 5 "
"番目のパラメーターは、入力引数の最小数、最大値、出力引数の最小数、および出力引数の最大数にそれぞれ対応しています。動的に検証されます。\n"

# e10b128313ee4f3a8649dbdab8baf7e8
#: ../source/project/libdesc_interface.rst:231
msgid "Additional parameters for the function lists ...."
msgstr "関数リストの追加パラメータ...。\n"

# 599edb5407804e09b0ead4cf5ac3a8cb
#: ../source/project/libdesc_interface.rst:233
msgid ""
"For unknown reasons, the body of the function cannot contain multiple "
"declarations such as ``int a, b;`` (c++ believes that it is an additional "
"parameter of the macro)."
msgstr ""
"不明な理由から、関数の本体には、' ' int a、b; ' ' などの複数の宣言を含めることはできません (c++ "
"はマクロの追加パラメーターであると考えています)。\n"

# 2481a596813b40e1a8baa69521fe41bd
#: ../source/project/libdesc_interface.rst:239
msgid ""
"The parts of documentation included in the c++ commentaries should be in "
"`reStructuredText`_ format. In particular, math formulas can be included "
"with \\:math\\:\\`f(x) = 3x^2+2x+4\\` or with::"
msgstr ""
"c++ の解説に含まれているドキュメントの部分は、' reStructuredText'_ 形式である必要があります。特に、数学の数式は \\: 数学 "
"\\: \\ ' f (x) = 3x ^ 2 + 2x + 4 \\ ' に含めることができます::\n"

# 3b54d57395ab4020b0be6c8117bf11c2
#: ../source/project/libdesc_interface.rst:247
msgid ""
"It is possible to refer to another method or function of the interface with "
"the syntax ``INIT::OBJNAME('method-name', ...)``, ``GET::OBJNAME('method-"
"name', ...)``, ``SET::OBJNAME('method-name', ...)``, "
"``FUNC::FUNCNAME('subcommand-name', ...)``. This will be replaced with the "
"right syntax depending on the language (Matlab, Scilab or Python)."
msgstr ""
"' ' INIT:: OBJNAME (' メソッド名 ',...) を使用して、インターフェイスの別のメソッドまたは関数を参照することができます。' "
"', ' ' GET:: OBJNAME (' メソッド名 ',...)' ', ' ' SET:: OBJNAME (' メソッド名 ',...)' "
"', ' ' FUNC:: FUNCNAME (' サブコマンド名 ',...)``.これは言語 (Matlab、Scilab または Python) "
"に応じて正しい構文に置き換えられます。\n"

# d8c9a1ad5a4541e190609d910be67568
#: ../source/project/libdesc_interface.rst:253
msgid ""
"Still in the documentations, parts for a specific language can be added by "
"``@MATLAB{specific part ...}``, ``@SCILAB{specific part ...}`` and "
"``@PYTHON{specific part ...}``. If a method/sub-command is specific to an "
"interface, it can be added, for instance for Matlab, replacing `GET` by "
"`MATLABGET`, `FUNC` by `MATLABFUNC`, etc. If a specific code is needed for "
"this additional function, it can be added with the tags ``/*@MATLABEXT``, "
"``/*@SCILABEXT``, ``/*@PYTHONEXT``. See for instance the file "
":file:`gf_mesh_fem_get.cc`."
msgstr ""
"まだドキュメンテーションでは、特定の言語のための部品は ' ' @MATLAB {特定の部分によって加えることができる...}' '、' ' "
"@SCILAB {特定の部分...}' ' および ' ' @PYTHON "
"{特定の部分...}``.メソッド/サブコマンドがインタフェースに固有である場合、例えば Matlab のために、' GET ' を ' "
"MATLABGET '、' FUNC ' で ' MATLABFUNC ' "
"などで置き換えることができます。この追加機能に特定のコードが必要な場合は、タグ '/* @MATLABEXT ' '、'/* @SCILABEXT ' "
"'、'/* @PYTHONEXT ' ' で追加することができます。たとえば、ファイル: ' gf_mesh_fem_get ' "
"を参照してください。\n"

# 17d5853d1bfa462cb0a358317850e439
#: ../source/project/libdesc_interface.rst:263
msgid ""
"For Python and the Matlab object, if a `SET` method has the same name as a "
"`GET` method, the `SET` method is prefixed by `set_`."
msgstr ""
"Python と Matlab オブジェクトの場合、' set ' メソッドの名前が ' GET ' メソッドと同じである場合、' set ' "
"メソッドの先頭に ' set_ ' が付きます。\n"

# 6d7703bc13da45b091d02ae02c2fa637
#: ../source/project/libdesc_interface.rst:273
msgid "Adding a new function or object method to the getfem interface"
msgstr "getfem インターフェイスへの新しい関数またはオブジェクトメソッドの追加\n"

# 8f1c9ac2ae9840dbacdbd1d6042db896
#: ../source/project/libdesc_interface.rst:275
msgid ""
"If one want to add a new function ``gf_mesh_get(m, \"foobar\", .)``, then "
"the main file to modify is :file:`gf_mesh_get.cc`. Remember to check every "
"argument passed to the function in order to make sure that the user cannot "
"crash scilab, matlab or python when using that function. Use the macro "
"defined in :file:`gf_mesh_get.cc` to add your function."
msgstr ""
"新しい関数 ' ' gf_mesh_get を追加したい場合 (m, \"foobar\",.)' ', 次に、変更するメインファイルは: ファイル: "
"' gf_mesh_get '.ユーザーがその関数を使用するときに scilab、matlab または python "
"をクラッシュさせることができないようにするために、関数に渡されるすべての引数をチェックしてください。関数を追加するには、ファイル: ' "
"gf_mesh_get ' で定義されているマクロを使用します。\n"

# 2102d491fdca42949862f46c3445e8a0
#: ../source/project/libdesc_interface.rst:279
msgid ""
"Do not forget to add documentation for that function: in "
":file:`gf_mesh_get.cc`, this is the documentation that appears in the "
"matlab/scilab/python help files (that is when on type \"``help "
"gf_mesh_get``\" at the matlab prompt), and in the getfem_python "
"autogenerated documentation."
msgstr ""
"その関数のドキュメントを追加することを忘れないでください: in: file: ' gf_mesh_get ', "
"これは、matlab/scilab/python のヘルプファイルに表示されるドキュメントです (それはタイプであるときに ' ' ヘルプ "
"gf_mesh_get ' ' \"matlab のプロンプトで), と getfem_python で自動生成ドキュメント。\n"

# aa742c68d4d24b3c8721046b8b728748
#: ../source/project/libdesc_interface.rst:284
msgid ""
"IMPORTANT. Note that the array indices start at 0 in Python and 1 in Matlab "
"and Scilab. A specific function::"
msgstr ""
"大事な。配列のインデックスは、Python では0から始まり、Matlab と Scilab では1であることに注意してください。特定の関数::\n"

# eb3c35916a114067a87fefc45a57afcb
#: ../source/project/libdesc_interface.rst:288
msgid ""
"whose value is 0 in python and 1 in Matlab and Scilab has to be used to "
"exchange indices and array of indices. Take care not to make the correction "
"twice. Some Array of indices are automatically shifted."
msgstr ""
"値が python では0、Matlab では1、Scilab "
"はインデックスとインデックスの配列を交換するために使用されなければなりません。2度と矯正をしないように気をつけて。インデックスのいくつかの配列は自動的にシフトされます。\n"

# a4c8a11086d74e99949327c78a97f631
#: ../source/project/libdesc_interface.rst:291
msgid "Adding a new object to the getfem interface"
msgstr "getfem インターフェイスへの新しいオブジェクトの追加\n"

# 2181306e9cfa4d40afc5abaad3adcc07
#: ../source/project/libdesc_interface.rst:293
msgid ""
"In order to add a new object to the interface, you have to build the new "
"corresponding sources :file:`gf_obj.cc`, :file:`gf_obj_get.cc` and "
":file:`gf_obj_set.cc`. Of course you can take the existing ones as a model."
msgstr ""
"インターフェイスに新しいオブジェクトを追加するには、新しい対応するソースを構築する必要があります: ファイル: ' gf_obj '、: ファイル: '"
" gf_obj_get ' と: ファイル: ' gf_obj_set '。もちろん、モデルとして、既存のものを取ることができます。\n"

# 76ff99c7287e4987b1140d41d56f7c22
#: ../source/project/libdesc_interface.rst:295
msgid ""
"For the management of the object, you have to declare the class at the "
"begining of :file:`getfemint.h` (with respect to the alphabetic order), and "
"declare three functions::"
msgstr ""
"オブジェクトの管理については、次のようにクラスを宣言する必要があります: ファイル: ' getfemint ' "
"(アルファベット順に関して)、3つの関数を宣言::\n"

# 66815dce890747eeaafd884c07bc25d7
#: ../source/project/libdesc_interface.rst:301
msgid ""
"where \"name\" is the name of the object in the interface and "
"``object_class`` is the class name in getfem (for instance  ``getfem::mesh``"
" for the mesh object). Alternatively, for the object that are manipulated by"
" a shared pointer in |gf|, the third function can return a shared pointer."
msgstr ""
"ここで、\"name\" はインターフェイス内のオブジェクトの名前であり、' ' object_class ' ' は getfem のクラス名です "
"(たとえば、メッシュオブジェクトの場合は ' ' getfem:: mesh ' ')。または、| gf | "
"で共有ポインタによって操作されるオブジェクトの場合、3番目の関数は共有ポインタを返すことができます。\n"

# d2bd8eb45c1e442a96ebfe368336efd5
#: ../source/project/libdesc_interface.rst:303
msgid ""
"IMPORTANT: In order to be interfaced, a |gf| object has to derive from "
"``dal::static_stored_object``. However, if it is not the case, a wrapper "
"class can be defined such as the one for ``bgeot::base_poly`` (see the end "
"of :file:`getfemint.h`)."
msgstr ""
"重要: インタフェースするために、a | gf |オブジェクトは ' ' dal:: static_stored_object ' ' "
"から派生しなければなりません。ただし、そうでない場合は、ラッパークラスを ' ' bgeot:: base_poly ' ' のように定義できます "
"(ファイル: ' getfemint ' の末尾を参照してください)。\n"

# e75e9fe585b44acb888c01d1b44e2aee
#: ../source/project/libdesc_interface.rst:305
msgid ""
"The previous three functions have to be implemented at the end of "
":file:`getfemint.cc`.It is possible to use one of the two macros defined in "
":file:`getfemint.cc`. The firs macro is for a standard object and the second"
" one for an object which is manipulated in |gf| with a shared pointer."
msgstr ""
"前の3つの関数は、ファイル: ' getfemint ' の末尾に実装する必要があります。ファイル: ' getfemint ' "
"で定義されている2つのマクロのいずれかを使用することができます。もみのマクロは標準的な目的のためであり、で操作される目的のための二番目のものは | gf"
" |共有ポインタを使用します。\n"

# 836399906e0d42948050e812ce9503ca
#: ../source/project/libdesc_interface.rst:307
msgid ""
"You have also to complete functions ``name_of_getfemint_class_id`` and "
"``class_id_of_object`` at the end of :file:`getfemint.cc`."
msgstr ""
"また、' ' name_of_getfemint_class_id ' ' と ' ' class_id_of_object ' ' の最後には、' "
"getfemint ' という関数を完成させる必要があります。\n"

# 16ba4ab2cc114c4ea175fe0eb4c564c0
#: ../source/project/libdesc_interface.rst:310
msgid ""
"You have to add the call of the interface function in "
":file:`getfem_interface.cc` and modifiy the file :file:`bin/extract_doc` and"
" run the configure file."
msgstr ""
"あなたは、インターフェイス関数の呼び出しを追加する必要があります: ファイル: ' getfem_interface ' と変更ファイル: ファイル: "
"' bin/extract_doc ' と構成ファイルを実行します。\n"

# 2e6e43e4475244cdbf1eacceb9ab3f02
#: ../source/project/libdesc_interface.rst:312
#, fuzzy
msgid ""
"The methods ``get('char')`` and ``get('display')`` should be defined for "
"each object. The first one should give a string allowing the object to be "
"saved in a file and the second one is to give some information about the "
"object. Additionaly, a constructor from a string is necessary to load the "
"object from a file."
msgstr ""
"メソッド ' ' get (' char ') ' ' および ' ' get (' display ') ' ' "
"は、各オブジェクトに対して定義する必要があります。最初の1つは、オブジェクトがファイルに保存され、2番目のオブジェクトに関するいくつかの情報を与えることができるように文字列を与える必要があります。Additionnaly、文字列からのコンストラクターは、ファイルからオブジェクトを読み込む必要があります。\n"

# eec1f3f7daab4aae8d6a8c885c3c4f46
#: ../source/project/libdesc_interface.rst:314
msgid ""
"For the Scilab interface the file "
":file:`sci_gateway/c/builder_gateway_c.sce.in` has to be modified and the "
"files in the directory :file:`macros/overload`."
msgstr ""
"Scilab インターフェイスのためにファイル: ファイル: ' sci_gateway/c/builder_gateway_c. in ' "
"は、ディレクトリ内のファイルを変更することがあります: ファイル: ' マクロ/オーバーロード '。\n"

# 2ee06ee5c6654f328885836ee8a9936b
#: ../source/project/libdesc_interface.rst:318
msgid "State"
msgstr "状態\n"

# 46f257fc8d5e4d5686f17f19ac9af125
#: ../source/project/libdesc_interface.rst:322
msgid "Perspectives"
msgstr "視点\n"

# 00d017d818ca42139439ae7a73a4e525
#: ../source/project/libdesc_interface.rst:323
msgid ""
"The interface grows in conjunction with |gf|. The main |gf| functionalities "
"are interfaced."
msgstr "インターフェイスは | gf | と連動して成長します。メイン | gf |機能はインタフェースされます。\n"
