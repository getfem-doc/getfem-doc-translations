# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2018 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-16 15:44+0900\n"
"PO-Revision-Date: 2018-07-16 07:03+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/87607/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 30c2f56547294ae2ac3a52ffe3b86e23
#: ../source/project/libdesc_high_gen_assemb.rst:12
msgid "The high-level generic assembly module in |gf|"
msgstr "| gf の高レベルの汎用アセンブリモジュール |\n"

# edd1ce65048848e3a08e96d26ee10de5
# 753668d736ff4d75964daeefc8064b01
#: ../source/project/libdesc_high_gen_assemb.rst:16
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid "Description"
msgstr "説明\n"

# b3147aa911b3429b9b8562b354496c3f
#: ../source/project/libdesc_high_gen_assemb.rst:18
msgid ""
"The high level generic assembly module of |gf| and its weak form language is"
" a key module which allows to describe weak formulation of partial "
"differential equation problems. See the description of the language in the "
"user documentation section :ref:`ud-gasm-high`."
msgstr ""
"| gf の高レベルの汎用アセンブリモジュール "
"|そして、その弱い形式の言語は、偏微分方程式の問題の弱い定式化を記述することができますキーモジュールです。ユーザードキュメントセクションの言語の説明を参照してください:"
" ref: ' ud-gasm-高 '。\n"

# 9ea3827e751f47c78d2baf85570ccce7
#: ../source/project/libdesc_high_gen_assemb.rst:21
msgid "Files"
msgstr "ファイル\n"

# 50421461f56546f6b4bcb2d25396e791
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid "File(s)"
msgstr "ファイル\n"

# 83ba5e10edf446159c34a5dc50dab11b
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":file:`getfem_generic_assembly.h`"
msgstr ": ファイル: ' getfem_generic_assembly '\n"

# 98b41d3d3c604e6d8abfed5c2166714b
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Main header for exported definitions. Only this header has to be included to"
" use the generic assembly. Other headers of the module are for internal use "
"only."
msgstr ""
"エクスポートされた定義のメインヘッダー。ジェネリックアセンブリを使用するには、このヘッダーのみを含めるようにしてください。モジュールの他のヘッダーは、内部でのみ使用されます。\n"

# 23ab8c2c7ce647daa3e39d20c2a1cdab
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":file:`getfem_generic_assembly_tree.h` and "
":file:`getfem_generic_assembly_tree.cc`"
msgstr ""
": ファイル: ' getfem_generic_assembly_tree ' と: ファイル: ' "
"getfem_generic_assembly_tree '\n"

# 64209f3f29c74e5eac9ddb0a81164eb8
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Definition of the tree structure and basic operations on it, including "
"reading an assembly string and transform it in a syntax tree and make the "
"invert transformation of a tree into a string."
msgstr "アセンブリ文字列を読み取って構文ツリーで変換し、ツリーの反転変換を文字列にするなど、ツリー構造とその基本操作の定義。\n"

# 631f8edd52e64e80a2916f960df36a67
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":file:`getfem_generic_assembly_fonction_and_operators.h` and "
":file:`getfem_generic_assembly_fonction_and_operators.cc`"
msgstr ""
": ファイル: ' getfem_generic_assembly_fonction_and_operators ' と: ファイル: ' "
"getfem_generic_assembly_fonction_and_operators '\n"

# c804eb58cf484cbaa55e20b6fcb8816d
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Definition of redefined function and nonlinear operator of the weak form "
"language."
msgstr "弱形式言語の再定義関数と非線形演算子\n"

# f454427da697449781f26dcb55d2e752
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":file:`getfem_generic_assembly_semantic.h` and "
":file:`getfem_generic_assembly_semantic.cc`"
msgstr ""
": ファイル: ' getfem_generic_assembly_semantic ' と: ファイル: ' "
"getfem_generic_assembly_semantic '\n"

# 76dd4dd329e544c6b5f850b1f7c7e57e
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Semantic analysis and enrichment of the syntax tree. Include some operations"
" such as making the derivation of a tree with respect to a variable or "
"computing the tree corresponding to the gradient of an expression."
msgstr "構文ツリーのセマンティック分析と濃縮。変数に対するツリーの派生や、式のグラデーションに対応するツリーの計算など、いくつかの操作を含めます。\n"

# 08a10579563e45538f90ab5858f9b97c
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":file:`getfem_generic_assembly_workspace.cc`"
msgstr ": ファイル: ' getfem_generic_assembly_workspace '\n"

# 1737f3f444ce4a4498e6f72f7d104093
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Methodes of the workspace object (defined in "
":file:`getfem_generic_assembly.h`)."
msgstr "ワークスペースオブジェクトの法 (で定義されている: ファイル: ' getfem_generic_assembly ')。\n"

# 0bf3e8f437644279947a29b35abd2b0e
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":file:`getfem_generic_assembly_compile_and_exec.h` and "
":file:`getfem_generic_assembly_compile_and_exec.cc`"
msgstr ""
": ファイル: ' getfem_generic_assembly_compile_and_exec ' と: ファイル: ' "
"getfem_generic_assembly_compile_and_exec '\n"

# 224fa9a231f34edbb37472fb82a1c540
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
"Definition of the optimized instructions, compilation into a sequel of "
"optimize instructions and execution of the instructions on Gauss "
"point/interpolation points."
msgstr "最適化された命令の定義、最適化の手順とガウス点/補間点の命令の実行の続編にコンパイルします。\n"

# 1a17f6d6b0344310869b9655f5941643
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":file:`getfem_generic_assembly_interpolation.cc`"
msgstr ": ファイル: ' getfem_generic_assembly_interpolation '\n"

# 41b59ced698b4e7a87a80da6c298bc13
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid "Interpolation operations and interpolate transformations."
msgstr "補間演算および補間変換。\n"

# 59c7ff34a4f5441faa9145fb5084d5e0
#: ../source/project/libdesc_high_gen_assemb.rst:37
msgid "A few implementation details"
msgstr "いくつかの実装の詳細\n"

# 336ac6fafcd84f189c035d4e6e7240a6
#: ../source/project/libdesc_high_gen_assemb.rst:39
msgid ""
"The assembly string is transformed in an assembly tree by a set of function "
"in :file:`src/getfem\\_generic\\_assembly.cc`. The process has 6 steps:"
msgstr ""
"アセンブリ文字列は、ファイル: ' src/getfem \\ _generic \\ _assembly ' "
"の一連の関数によってアセンブリツリーに変換されます。プロセスには6つのステップがあります。\n"

# e0ab7c063b2342ed9b982f887a2b59d5
#: ../source/project/libdesc_high_gen_assemb.rst:41
msgid "Lexical analysis with the procedure ``ga_get_token(...)``."
msgstr "手順 ' ' ga_get_token を使用した字句解析 (...)``.\n"

# 9f0d42141c8648e1a5bfe461999cc951
#: ../source/project/libdesc_high_gen_assemb.rst:43
msgid ""
"Syntax analysis and transformation into a syntax tree by "
"``ga_read_string(...)``."
msgstr "構文解析と構文木への変換 ' ' ga_read_string (...)``.\n"

# bca3a6b72b334edab47e5edcc0c6db12
#: ../source/project/libdesc_high_gen_assemb.rst:45
msgid ""
"Semantic analysis, simplification (pre-computation) of constant expressions "
"and enrichment of the tree by ``ga_semantic_analysis(...)``."
msgstr "' ' ga_semantic_analysis による定数式の意味解析, 単純化 (事前計算) と木の濃縮 (...)``.\n"

# fd84688159774732a4a7fb50e6463889
#: ../source/project/libdesc_high_gen_assemb.rst:47
msgid ""
"Symbolic (automatic) differentiation of an assembly tree by "
"``ga_derivative(...)``"
msgstr "' ' ga_derivative によるアセンブリツリーのシンボリック (自動) 微分 (...)``\n"

# bab625f1b59a4ec3bddd3366acceae50
#: ../source/project/libdesc_high_gen_assemb.rst:49
msgid ""
"Symbolic (automatic) gradient computation of an assembly tree by "
"``ga_gradient(...)``"
msgstr "' ' ga_gradient によるアセンブリツリーのシンボリック (自動) 勾配計算 (...)``\n"

# b6fcc5cc90324cada09631f755d9b794
#: ../source/project/libdesc_high_gen_assemb.rst:51
msgid ""
"Compilation in a sequence of instructions with optimizations by "
"``ga_compile(...)``."
msgstr "' ' ga_compile によって最適化された一連の命令のコンパイル (...)``.\n"

# b5525ce8005f4aefb0faac1e8806674c
#: ../source/project/libdesc_high_gen_assemb.rst:53
msgid ""
"Execution of the sequence of instructions and assembly by ``ga_exec(...)``."
msgstr "' ' ga_exec による命令とアセンブリのシーケンスの実行 (...)``.\n"

# 49914ad9ea594fc2b0010e9b8a2231e7
#: ../source/project/libdesc_high_gen_assemb.rst:55
msgid ""
"These steps are performed only once at the beginning of the assembly. The "
"final tree is compiled in a sequence of optimized instructions which are "
"executed on each Gauss point of each element. The compilation performed some"
" optimizations : repeated terms are automatically detected and evaluated "
"only once, simplifications if the mesh has uniform type of elements, "
"simplifications for vectorized fnite element methods."
msgstr ""
"これらの手順は、アセンブリの先頭で1回だけ実行されます。最終的なツリーは、各要素の各ガウス点で実行される最適化された命令のシーケンスでコンパイルします。コンパイルはいくつかの最適化を実行しました:"
" 繰り返しの用語は自動的に検出され、1回だけ、簡素化メッシュは、ベクトル界面要素メソッドの簡素化の要素の均一な型を持っている場合は、評価します。\n"

# e5796a07168644c692f7bacd60bf7c76
#: ../source/project/libdesc_high_gen_assemb.rst:57
msgid ""
"Moreover, there is specifics function for interpolation operations "
"(ga_interpolation(...), ga_interpolation_exec(...), "
"ga_interpolation_Lagrange_fem, ga_interpolation_mti, "
"ga_interpolation_im_data, ...)"
msgstr ""
"さらに、補間操作 (ga_interpolation (...)、ga_interpolation_exec "
"(...)、ga_interpolation_Lagrange_fem、ga_interpolation_mti、ga_interpolation_im_data、...)"
" の具体的な機能があります。\n"

# 2512aa3c573e4e5084f1a9987d040961
#: ../source/project/libdesc_high_gen_assemb.rst:60
msgid "Assembly tree"
msgstr "アセンブリツリー\n"

# 1dad2610a57a4ca081d3ba4806089be1
#: ../source/project/libdesc_high_gen_assemb.rst:62
msgid ""
"Assembly strings are transformed into assembly trees by "
"``ga_read_string(...)``. Assembly trees are syntax trees that are "
"progressively enriched in information in the differents steps (semantic "
"analysis, derivation, compilation)."
msgstr ""
"アセンブリ文字列は ' ' ga_read_string (...) でアセンブリツリーに変換されます。``.アセンブリツリーは、貴様ステップ "
"(セマンティック分析、派生、コンパイル) の情報で徐々に濃縮される構文ツリーです。\n"

# 0290767ee92c4079a6384a7681ea13cc
#: ../source/project/libdesc_high_gen_assemb.rst:64
msgid ""
"The object ``ga_tree`` represents an assembly tree. It is a copyable object "
"that only contains a pointer to the root of the tree. Each tree node is an "
"object ``ga_tree_node`` that contains the main following information:"
msgstr ""
"オブジェクト ' ' ga_tree ' ' "
"はアセンブリツリーを表します。これは、ツリーのルートへのポインターのみを含むコピー可能オブジェクトです。各ツリー節点は、次の主な情報を含むオブジェクト "
"' ' ga_tree_node ' ' です。\n"

# fc320342e92d40128a0393d1a3c67db4
#: ../source/project/libdesc_high_gen_assemb.rst:66
msgid "node_type (function, variable value, variable gradient, operation ...)"
msgstr "node_type (関数、変数の値、変数のグラデーション、操作...)\n"

# e7fa1f5808134f5f8ac14cce4dff7554
#: ../source/project/libdesc_high_gen_assemb.rst:67
msgid "operation type for operation nodes."
msgstr "操作節点の操作の種類。\n"

# ba89fe4f679547a3a064a33ec57195a0
#: ../source/project/libdesc_high_gen_assemb.rst:68
msgid ""
"assembly tensor: used at execution time by optimized instructions to compute"
" the intermediary results. The final result is in the assembly string of the"
" root node at the end of the execution (for each Gauss point)."
msgstr ""
"アセンブリテンソル: 中間結果を計算するために最適化された命令によって実行時に使用します。最終的な結果は、実行の終了時にルート節点のアセンブリ文字列 "
"(各ガウス点) になります。\n"

# 3372d4a095f942e4a1a7f6d5900abe85
#: ../source/project/libdesc_high_gen_assemb.rst:69
msgid ""
"term type: value, order one term (ith order one test functions), order two "
"term (with order two test functions) or with both order one and order two "
"test functions (tangent term)."
msgstr ""
"用語の種類: 値、順序1つの用語 (i 番目の順序1つのテスト関数)、順序2つの用語 (順序2つのテスト関数) または両方の順序1と順序2つのテスト関数"
" (タンジェント用語)。\n"

# e213bf0bc75e4fa299ac9ec326e077d2
#: ../source/project/libdesc_high_gen_assemb.rst:72
msgid "variable name of tests functions for order 1 or 2 terms."
msgstr "順序1または2の用語のテスト関数の変数名。\n"

# b958fea7807243f9bcc9f0f875ba9997
#: ../source/project/libdesc_high_gen_assemb.rst:73
msgid "pointer to the parent node."
msgstr "親節点へのポインター。\n"

# 5900f336dfe2477fb68e2347f5252d4e
#: ../source/project/libdesc_high_gen_assemb.rst:74
msgid "pointers to the children nodes."
msgstr "子節点へのポインター。\n"

# e34cce42b6674316975e24ab695d289e
#: ../source/project/libdesc_high_gen_assemb.rst:76
msgid ""
"For example, the assembly tree for the assembly string "
"\"a*Grad_Test2_u.Grad_Test_u\" for the stiffness matrix of a Laplacian "
"problem can be represented as follows with its assembly tensors at each "
"node:"
msgstr ""
"たとえば、ラプラシアン問題の剛性マトリックスのアセンブリ文字列 \"a * Grad_Test2_u Grad_Test_u\" "
"のアセンブリツリーは、各節点のアセンブリテンソルと共に次のように表現できます。\n"

# c6a6d72671b948d7b62cc53ad95a4634
#: ../source/project/libdesc_high_gen_assemb.rst:85
msgid "Assembly tensors"
msgstr "組立テンソル\n"

# 16f0e98b66314e3c9958dd5b3ae2d8fd
#: ../source/project/libdesc_high_gen_assemb.rst:87
msgid ""
"Assembly tensors are represented on each node by a ``bgeot::tensor<double>``"
" object. However, there is a specific structure in "
":file:`src/getfem\\_generic\\_assembly.cc` for assembly tensors because "
"there is several format of assembly tensors :"
msgstr ""
"アセンブリテンソルは、各節点で ' ' bgeot:: テンソル ' ' "
"オブジェクトによって表され<double>ます。ただし、アセンブリテンソルには複数の形式があるため、ファイル: ' src/getfem \\ "
"_generic \\ _assembly ' には特定の構造</double>があります。\n"

# 52bcb028e5fb4d928a7a007ba345dc3e
#: ../source/project/libdesc_high_gen_assemb.rst:89
msgid ""
"Normal tensor. The first and second indices may represent the test function "
"local indices if the node represent a first or second order term. Remember "
"that in |gf| all tensors are stored with a Fortran order. This means that "
"for instance a for a :math:`N\\times P\\times Q` tensor one has ``t(i, j, k)"
" = t[i + j*N + k*N*P]``."
msgstr ""
"通常のテンソル。最初と2番目のインデックスは、節点が最初または2番目の順序の用語を表す場合、テスト関数のローカルインデックスを表すことができます。覚えている"
" | gf |すべてのテンソルは、Fortran の順序で保存されます。これは a のための例えば a のために意味する: 数学: ' N\\times"
" P\\times Q ' のテンソル1つは ' t (i、j、k) = トン [i + j * n + k * n * P] ' ' を有する。\n"

# 9e3a33dfc2644bceb9207afddfa9833e
#: ../source/project/libdesc_high_gen_assemb.rst:91
msgid ""
"Copied tensor. When a node is detected to have exactly the same expression "
"compared to an already compiled one, the assembly tensor will contain a "
"pointer to the assembly tensor of the already compiled node. The consequence"
" is that no unnecessary copy is made."
msgstr ""
"コピーされたテンソル。節点が、既にコンパイルされたものと比較してまったく同じ式を持つことが検出されると、アセンブリテンソルには、既にコンパイル済みの節点のアセンブリテンソルへのポインタが含まれます。結果として、不要なコピーは作成されません。\n"

# b605193ddc01405eb462fadefb88ccbc
#: ../source/project/libdesc_high_gen_assemb.rst:93
msgid ""
"Sparse tensor with a listed sparsity. When working with a vector field, the "
"finite element method is applied on each component. This results on vector "
"base functions having only one nonzero component and some components are "
"duplicated. The tensor are fully represented because it would be difficul to"
" gain in efficiency with that kind of small sparse tensor format. However, "
"some operation can be optimized with the knoledge of a certain sparsity (and"
" duplication). This can change the order of complexity of a reduction. In "
"order to allows this gain in efficiency, the tensor are labellised with some"
" known sparsity format (vectorisation and format coming from operation "
"applied on vectorized tensors). This results in a certain number of sparsity"
" formats that are listed below:"
msgstr ""
"リストされたスパースの疎なテンソル。ベクトルフィールドを使用する場合、有限要素法は各成分に適用されます。この結果、ベクトル基底関数が0以外の成分を1つだけ持ち、一部の成分が複製されます。テンソルは、その種の小さな疎テンソル形式で効率を得るために難しいされるので、完全に表されます。ただし、一部の操作は、特定のスパース"
" (および重複) "
"の知識を使用して最適化できます。これは、削減の複雑さの順序を変更することができます。効率のこの利得を可能にするためには、テンソルはいくつかの知られていたスパースフォーマット"
" (ベクトルテンソルで適用される操作から来る vectorisation およびフォーマット) と "
"labellised。これにより、以下に示すように、一定数のスパース形式が得られます。\n"

# a7e3337bd04f480ca6ac55626fcb8478
#: ../source/project/libdesc_high_gen_assemb.rst:95
msgid ""
"1: Vectorized base sparsity format: The tensor represent a vectorized value."
" Each value of the condensed tensor is repeated on :math:`Q` components of "
"the vectorized tensor. The mesh dimensions is denoted :math:`N`. For "
"instance if :math:`\\varphi_i` are the :math:`M` local base functions on an "
"element and the evaluation is on a Gauss point :math:`x`, then the non "
"vectorized tensor is :math:`\\bar{t}(i) = \\varphi_i(x)` and the vectorized "
"one is :math:`t(j,k) = \\varphi_{j/Q}(x) \\delta_{k, j \\mbox{ mod } Q}` "
"where :math:`j/M` is the integer division. For :math:`M=2`, :math:`Q=2` and "
":math:`N=3` the components of the two tensors are represented in the "
"following table"
msgstr ""
"1: ベクトルベーススパースフォーマット: テンソルはベクトル値を表します。凝縮されたテンソルの各々の価値は繰り返される: 数学: ベクトルテンソルの "
"' Q ' の部品。メッシュの寸法が示されます: 数学: ' N '。例えば: 数学: ' \\varphi_i ' は次のようになります: 数学: "
"要素上のローカル基本関数と評価はガウス点にあります: 数学: ' x ', その後、非ベクトルテンソルは: 数学: ' \\bar{t} (i) = "
"\\varphi_i (x) ' とベクトル1は: 数学: t (j, k) = \\ varphi_ {j/q} (x) \\delta_{k, j "
"\\mbox{mod} Q} ' where: 数学: ' j/M ' は整数除算です。For: 数学: 'm = 2 ',: 数学: ' Q = 2 "
"' と: 数学: ' N = 3 ' 2 つのテンソルの成分は、次の表で表されます。\n"

# c1f623ce863c4b459e596fb7d1c7cf90
# 6064cc44f88043f1876cbaed84a7e905
#: ../source/project/libdesc_high_gen_assemb.rst:1
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid "Scalar tensor"
msgstr "スカラーテンソル\n"

# 7ec86a6914254186a542d3b30defcfca
# f42238e4c05f41a4962a6a34dee0f55f
#: ../source/project/libdesc_high_gen_assemb.rst:1
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid "Vectorized tensor"
msgstr "ベクトルテンソル\n"

# cb5f56d68dcb4b489d55408a7d192b5e
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":math:`\\bar{t}(i) = \\varphi_i(x)`"
msgstr ": 数学: ' \\bar{t} (i) = \\varphi_i (x) '\n"

# 4f5f63da08284c4186c4afab55079862
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":math:`t(j,k) = \\varphi_{j/Q}(x) \\delta_{k, (j \\mbox{ mod } Q)}`"
msgstr ": 数学: t (j, k) = \\ varphi_ {j/Q} (x) \\delta_{k, (j \\mbox{mod} Q)} '\n"

# 10c989d528294acc9242be868ab22d1d
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":math:`[\\varphi_0(x), \\varphi_1(x)]`"
msgstr ": 数学: ' [\\varphi_0 (x), \\varphi_1 (x)] '\n"

# a5b7895a18d34bb396b078ee9765dc54
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":math:`[\\varphi_0(x), 0, \\varphi_1(x), 0, 0, \\varphi_0(x), 0, "
"\\varphi_1(x)]`"
msgstr ""
": 数学: ' [\\varphi_0 (x), 0, \\varphi_1 (x), 0, 0, \\varphi_0 (x), 0, "
"\\varphi_1 (x)] '\n"

# 1360f5ad5f0c4d33b6b35c296334ecef
#: ../source/project/libdesc_high_gen_assemb.rst:114
msgid "2: Grad condensed format"
msgstr "2: 卒業生の凝縮形式\n"

# ee76bee189ff4b3595b44e7891061a13
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ":math:`\\bar{t}(i,j) = \\partial_j\\varphi_i(x)`"
msgstr ": 数学: ' \\bar{t} (i, j) = \\partial_j\\varphi_i (x) '\n"

# 9eb80d210e594ada9c7567697aa4f5ce
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":math:`t(k,l,m) = \\partial_m\\varphi_{k/Q}(x) \\delta_{l, (m \\mbox{ mod } "
"Q)}`"
msgstr ""
": 数学: t (k, l, m) = \\ partial_m\\varphi_ {k/Q} (x) \\delta_{l, (m "
"\\mbox{mod} Q)} '\n"

# f36e8569b14446f0934172e3b07108ea
#: ../source/project/libdesc_high_gen_assemb.rst:1
msgid ""
":math:`[\\partial_0\\varphi_0(x), \\partial_0\\varphi_1(x),` "
":math:`\\partial_1\\varphi_0(x), \\partial_1\\varphi_1(x),` "
":math:`\\partial_2\\varphi_0(x), \\partial_2\\varphi_1(x)]`"
msgstr ""
": 数学: ' [\\partial_0\\varphi_0 (x), \\partial_0\\varphi_1 (x), ': 数学: ' "
"\\partial_1\\varphi_0 (x), \\partial_1\\varphi_1 (x), ': 数学: ' "
"\\partial_2\\varphi_0 (x), \\partial_2\\varphi_1 (x)] '\n"

# 71303d109d264bb3a08a0f2c7cc31326
#: ../source/project/libdesc_high_gen_assemb.rst:123
msgid "3: Hessian condensed format"
msgstr "3: ヘッセ凝縮形式\n"

# 6b0b408dd6f5467ba3ed506420caedc0
#: ../source/project/libdesc_high_gen_assemb.rst:126
msgid ""
"10: Vectorized mass: the tensor represent a scalar product of two vectorised"
" base functions. This means a tensor :math:`t(\\cdot,\\cdot)` where "
":math:`t(i*Q+k, j*Q+l) = 0` for :math:`k \\ne l` and :math:`t(i*Q+k, j*Q+k)`"
" are equals for :math:`0 \\le k < Q`."
msgstr ""
"10: ベクトル質量: テンソルは2つの vectorised 基底関数のスカラー積を表す.これは、テンソルを意味します: 数学: ' t "
"(\\cdot, \\cdot) ' where: 数学: t (i * q + k, j * q + l) = 0 ' のための: 数学: ' k "
"\\ne l ' と: 数学: ' t (i * q + k, j * q + k) ' に等しい: 数学: ' 0 \\le k < Q '.\n"

# ae264758e0cc4003a10bc2ba0bbac075
#: ../source/project/libdesc_high_gen_assemb.rst:135
msgid "Optimized instructions"
msgstr "最適化された手順\n"

# 1cbfd8e6db3c480bb769bf20a15053b7
#: ../source/project/libdesc_high_gen_assemb.rst:137
msgid ""
"Optimized instructions for variable evaluation, operations, vector and "
"matrix assembly ... to be described."
msgstr "変数の評価、操作、ベクトルと行列のアセンブリのための最適化された命令...\n"

# 079def371cbb4ed08a7593c5488d5bff
#: ../source/project/libdesc_high_gen_assemb.rst:140
msgid "Predefined functions"
msgstr "定義済み関数\n"

# 43032d41389e4ee5ba66a79511f29f28
#: ../source/project/libdesc_high_gen_assemb.rst:147
msgid ""
"Some predefined scalar functions are available in |gf| weak form language in"
" order to describe a weak formulation (or also to make basic algebraic "
"computations). This is limited to scalar functions of one or two arguments. "
"Due to the automatic differentiation used to obtain the tangent system of "
"described problems, the derivative each function have to be available. The "
"principle retained is the following: For each predefined function is "
"available:"
msgstr ""
"いくつかの定義済みスカラー関数は | gf |弱い形式の言語は弱い定式化を記述するために "
"(またはまた基本的な代数計算をするため)。これは、1つまたは2つの引数のスカラー関数に限定されます。記述されていた問題のタンジェントシステムを得るのに使われる自動微分のために、各機能は利用できるべきである。保持される原則は次のとおりです。定義済みの関数ごとに使用できます。\n"

# e2292430577d4583a552fa7b12789f8f
#: ../source/project/libdesc_high_gen_assemb.rst:143
msgid "A C++ function which computes the value given the argument(s)."
msgstr "引数に指定された値を計算する C++ 関数。\n"

# 617ad65cefce4825968d7c132e85e533
#: ../source/project/libdesc_high_gen_assemb.rst:144
msgid ""
"The support of the function in the first each argument in term of a "
"(possibly infinite) interval (this is for simplification of expressions)."
msgstr "(多分無限) 間隔の言葉の最初の各議論の機能のサポート (これは表現の簡素化のためである)。\n"

# f32d786409a14c73a3a35109990b7bb0
#: ../source/project/libdesc_high_gen_assemb.rst:146
msgid ""
"The string corresponding of the derivative in terms of already known "
"functions"
msgstr "既に知られている関数に関して、導関数に対応する文字列\n"

# aac274a18ef1414f9e40455bde2dce10
#: ../source/project/libdesc_high_gen_assemb.rst:149
msgid ""
"A new predefined function is easy to add. See init_predefined_functions() in"
" file :file:`src/getfem_generic_assembly.cc`. + describe how to give the "
"derivative ..."
msgstr ""
"新しい定義済み関数は簡単に追加できます。ファイル: ファイル: ' src/getfem_generic_assembly ' の "
"init_predefined_functions () を参照してください。+ は、誘導体を与える方法を説明...\n"

# 87db3f60d08c465292058aea8bd65c1f
#: ../source/project/libdesc_high_gen_assemb.rst:152
msgid "Predefined nonlinear operators"
msgstr "定義済みの非線形演算子\n"

# e133212c9b6a4cedbc2c28b96bc99ec2
#: ../source/project/libdesc_high_gen_assemb.rst:154
msgid "to be described ..."
msgstr "説明するには...\n"

# 185282e35aed4965b497ac1de36af681
#: ../source/project/libdesc_high_gen_assemb.rst:157
msgid "State"
msgstr "状態\n"

# 2df7fc609c644c5c924f6b8fe3651db3
#: ../source/project/libdesc_high_gen_assemb.rst:158
msgid "Stable."
msgstr "安定。\n"

# 4f2e7dcf65c64258a16b85f5412c1dc5
#: ../source/project/libdesc_high_gen_assemb.rst:161
msgid "Perspectives"
msgstr "視点\n"

# 583559877cfb4ae3bd2f79bcaee4c628
#: ../source/project/libdesc_high_gen_assemb.rst:163
msgid "Is a certain extension to complex data possible ?"
msgstr "複雑なデータへの特定の拡張は可能ですか?\n"

# 1e7a6a742dbe4adca82216326273b369
#: ../source/project/libdesc_high_gen_assemb.rst:165
msgid ""
"More simplifications : study the possibility to automatically factorize some"
" terms (for instance scalar ones) to reduce the number of operations."
msgstr "さらに簡素化: 操作の数を減らすために、いくつかの用語 (例えばスカラーのもの) を自動的に factorize する可能性を検討します。\n"
